{"version":3,"sources":["redux/auth/types.js","redux/auth/actions.js","pages/Activate.js","pages/Dashboard.js","pages/Home.js","redux/post/types.js","redux/post/actions.js","components/Posts.js","static/housing.jpg","components/HousingCard.js","globalConstants.js","pages/Housings.js","pages/Login.js","pages/Profile.js","pages/Register.js","pages/ChangePassword.js","pages/DeleteAccount.js","pages/ResendActivationEmail.js","pages/ResetPassword.js","pages/ResetPasswordConfirm.js","redux/form/types.js","redux/form/actions.js","pages/RoommateDetail.js","components/Confirmation.js","components/Form.js","pages/RoommateForm.js","pages/ProfileForm.js","pages/HousingForm.js","components/RoommateCard.js","pages/Roommates.js","components/Footer.js","components/SideNav.js","static/housemates-logo-without-text-white.svg","components/NavBar.js","layout/LayoutTwo.js","static/housemates-logo-with-text-black.svg","layout/LayoutOne.js","layout/RouteWrapper.js","hocs/Layout.js","redux/auth/reducer.js","redux/form/reducer.js","redux/post/reducer.js","redux/rootReducer.js","redux/store.js","pages/EditForm.js","components/Matchmaking.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","ACTIVATE_SUCCESS","ACTIVATE_FAIL","RESEND_ACTIVATION_EMAIL_SUCCESS","RESEND_ACTIVATION_EMAIL_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","CHECK_AUTHENTICATION_SUCCESS","CHECK_AUTHENTICATION_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","DELETE_ACCOUNT_SUCCESS","DELETE_ACCOUNT_FAIL","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","RESET_PASSWORD_CONFIRM_SUCCESS","RESET_PASSWORD_CONFIRM_FAIL","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAIL","AUTH_LOADING","RESET_AUTH_LOADING","PROFILE_LOADING","RESET_AUTH_ERROR_MSG","RESET_CHANGE_PASSWORD_SUCCESS","RESET_EDIT_BIO_SUCCESS","CHANGE_PROFILE_PIC_SUCCESS","CHANGE_PROFILE_PIC_FAIL","EDIT_BIO_SUCCESS","EDIT_BIO_FAIL","SET_PREV_PATH","axios","defaults","xsrfCookieName","xsrfHeaderName","incorrectPasswordErrorMsg","unableToResetPasswordErrorMsg","newPasswordTooWeakErrorMsg","loadUser","dispatch","a","authLoading","token","localStorage","getItem","config","headers","Authorization","Accept","get","res","loadUserSuccess","data","loadUserFail","checkAuthentication","body","JSON","stringify","post","code","checkAuthenticationSuccess","checkAuthenticationFail","registerSuccess","type","registerFail","authErrorMsg","payload","activateSuccess","activateFail","resendActivationEmailSuccess","resendActivationEmailFail","user","loginSuccess","tokens","loginFail","logout","deleteAccountSuccess","deleteAccountFail","resetPasswordSuccess","resetPasswordFail","resetPasswordConfirmSuccess","resetPasswordConfirmFail","changePasswordSuccess","changePasswordFail","profileLoading","changeProfilePicSuccess","picture","changeProfilePicFail","editBioSuccess","editBioFail","mapDispatchToProps","activate","uid","response","connect","state","auth","activationSuccess","classes","makeStyles","theme","paper","display","flexDirection","alignItems","button","margin","spacing","useStyles","history","useHistory","useParams","Container","maxWidth","className","onSubmit","e","preventDefault","push","Typography","variant","noWrap","style","textAlign","Button","autoFocus","fullWidth","color","disabled","Grid","container","justify","item","to","Dashboard","Home","GET_POST_LIST_SUCCESS","GET_POST_LIST_FAIL","GET_POST_DETAIL_SUCCESS","GET_POST_DETAIL_FAIL","GET_USER_POST_SUCCESS","GET_USER_POST_FAIL","CREATE_POST_SUCCESS","CREATE_POST_FAIL","EDIT_POST_SUCCESS","EDIT_POST_FAIL","DELETE_POST_SUCCESS","DELETE_POST_FAIL","POST_LOADING","RESET_POST_LOADING","RESET_POST_ERROR_MSG","RESET_CREATE_POST_SUCCESS","RESET_EDIT_POST_SUCCESS","RESET_DELETE_POST_SUCCESS","SEARCH_POST_SUCCESS","SEARCH_POST_FAIL","CANCEL_SEARCH_SUCCESS","CANCEL_SEARCH_FAIL","getPostList","formType","postLoading","getPostListSuccess","getPostListFail","getPostDetail","id","getPostDetailSuccess","getPostDetailFail","getUserPosts","owner","getUserPostSuccess","getUserPostFail","editPost","post_form_type","selected_choices","score_list","total_score","put","editPostSuccess","err","editPostFail","posts","postErrorMsg","userPost","createPostSuccess","createPostFail","deletePostSuccess","deletePostFail","resetEditPostSuccess","searchPostSuccess","searchedPost","searchPostFail","searchPostErrorMsg","cancelSearchSuccess","cancelSearchFail","cancelSearchErrorMsg","postsType","postType","handlePost","PostComponent","xs","md","lg","tooltip","position","bottom","right","grid","useEffect","postToRender","length","map","Tooltip","title","onClick","Fab","HousingCard","card","height","cursor","content","flex","media","width","float","marginRight","marginTop","Card","CardActionArea","CardContent","name","specs","spec","index","CardMedia","image","Pic","IconButton","SINGLE_CHOICE","MULTIPLE_CHOICE","PRIORITY","SELF","OTHER","Housings","Posts","pic","login","email","password","isAuthenticated","submit","useState","setEmail","setPassword","account","setAccount","emailError","setEmailError","passwordError","setPasswordError","accountError","setAccountError","noValidate","TextField","required","label","onChange","target","value","error","helperText","FormControl","InputLabel","Select","MenuItem","FormHelperText","changeProfilePic","s3config","bucketName","dirName","region","accessKeyId","secretAccessKey","S3FileUpload","uploadFile","then","profile_pic","location","patch","editBio","first_name","last_name","bio","resetEditBioSuccess","prevPath","avatar","marginBottom","marginLeft","open","setOpen","selectedFile","setSelectedFile","editBioTextFieldOpen","setEditBioTextFieldOpen","setBio","handleClose","accordions","summary","details","ListItem","ListItemText","primary","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","src","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","component","accept","files","DialogActions","Box","mb","placeholder","defaultValue","multiline","rows","justifyContent","size","accordion","Accordion","AccordionSummary","expandIcon","AccordionDetails","List","detail","register","re_password","registrationSuccess","lastName","setLastName","firstName","setFirstName","confirmPassword","setConfirmPassword","lastNameError","setLastNameError","firstNameError","setFirstNameError","confirmPasswordError","setConfirmPasswordError","samePasswordError","setSamePasswordError","sm","changePassword","current_password","new_password","re_new_password","resetChangePasswordSuccess","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","currentPasswordError","setCurrentPasswordError","newPasswordError","setNewPasswordError","confirmNewPasswordError","setConfirmNewPasswordError","go","deleteAccount","delete","buttons","resendActivationEmail","resetPassword","resetPasswordConfirm","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAIL","FORM_LOADING","RESET_FORM_LOADING","RESET_FORM_ERROR_MSG","getQuestions","formLoading","getQuestionsSuccess","getQuestionsFail","questions","formErrorMsg","roommateCategories","form","tag","category","toString","CardHeader","gutterBottom","question","Array","isArray","otherChoice","choice","Chip","confirmationText","thankYouText","success","handleCancel","handleSubmit","CircularProgress","createPost","resetCreatePostSuccess","roommateQuestions","housingQuestions","housingCategories","profileQuestions","profileCategories","initialFormFields","padding","paddingBottom","active","background","palette","action","hover","priorityChoices","formFields","setFormFields","currentCategory","setCurrentCategory","maxCategory","setMaxCategory","categoryCompleted","setCategoryCompleted","setQuestions","categories","setCategories","handleBack","window","scrollTo","prev","handleStep","handleChange","selfOther","myChoice","includes","splice","indexOf","priority","allCompleted","reduce","curr","SingleChoiceQuestion","question_text","FormLabel","RadioGroup","choice_set","FormControlLabel","control","Radio","MultipleChoiceQuestion","FormGroup","Checkbox","checked","TextQuestion","stepper","Stepper","nonLinear","alternativeLabel","activeStep","Step","StepButton","completed","filter","categoryIndex","question_type","questionsBasedOnCategory","newCategoryCompleted","confirmationDialog","Object","values","userObj","Paper","RoommateForm","ProfileForm","HousingForm","deletePost","resetDeletePostSuccess","alignSelf","text","edit","icon","textDecoration","score","substring","Roommates","RoommateCard","Footer","align","Date","getFullYear","SideNav","drawerWidth","menuOpen","hoverOpen","drawerOpen","handleMouseEnter","handleMouseLeave","drawer","flexShrink","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerOpenDelay","transitionDelay","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","minHeight","mixins","path","useLocation","Drawer","onMouseEnter","onMouseLeave","clsx","pathname","ListItemIcon","light","dark","searchPost","searchItem","cancelSearch","handleMenuButton","appBar","zIndex","paddingLeft","menuButton","logo","grow","flexGrow","search","borderRadius","shape","backgroundColor","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","profilePic","createMuiTheme","anchorEl","setAnchorEl","setData","handleClick","AppBar","Toolbar","aria-label","edge","alt","Logo","newValue","onRequestSearch","onCancelSearch","cancelOnEscape","currentTarget","Menu","keepMounted","Boolean","children","root","closeSize","openSize","setMenuOpen","setHoverOpen","RouteWrapper","Component","Layout","layout","rest","render","props","resetAuthErrorMsg","resetFormErrorMsg","resetPostErrorMsg","setPrevPath","event","reason","useRef","scroll","Snackbar","current","classList","remove","onFocus","outline","add","onBlur","ref","severity","initialState","access","refresh","authReducer","setItem","removeItem","updatedUser","formReducer","rawCategories","uniqueCategories","Set","postReducer","appReducer","combineReducers","rootReducer","undefined","composeEnhancers","composeWithDevTools","trace","traceLimit","middlewares","thunk","store","createStore","applyMiddleware","setInitialFormFields","assign","loading","getScore","priorityLevel","equals","arr1","arr2","myPost","myScoreList","k","otherPost","otherScoreList","myScore","myTotalScore","otherScore","otherTotalScore","numOfQuestions","i","j","averageScore","Math","pow","toFixed","handleMatchmaking","App","indigo","ThemeProvider","Login","LayoutOne","DeleteAccount","Register","ChangePassword","ResetPassword","ResetPasswordConfirm","Activate","ResendActivationEmail","exact","LayoutTwo","RoommateDetail","EditForm","Profile","Matchmaking","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcc46e7d.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\n\nexport const ACTIVATE_SUCCESS = 'ACTIVATE_SUCCESS'\nexport const ACTIVATE_FAIL = 'ACTIVATE_FAIL'\n\nexport const RESEND_ACTIVATION_EMAIL_SUCCESS = 'RESEND_ACTIVATION_EMAIL_SUCCESS'\nexport const RESEND_ACTIVATION_EMAIL_FAIL = 'RESEND_ACTIVATION_EMAIL_FAIL'\n\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const CHECK_AUTHENTICATION_SUCCESS = 'CHECK_AUTHENTICATION_SUCCESS'\nexport const CHECK_AUTHENTICATION_FAIL = 'CHECK_AUTHENTICATION_FAIL'\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const LOGOUT = 'LOGOUT'\n\nexport const DELETE_ACCOUNT_SUCCESS = 'DELETE_ACCOUNT_SUCCESS'\nexport const DELETE_ACCOUNT_FAIL = 'DELETE_ACCOUNT_FAIL'\n\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL'\n\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS'\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL'\n\nexport const CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS'\nexport const CHANGE_PASSWORD_FAIL = 'CHANGE_PASSWORD_FAIL'\n\nexport const AUTH_LOADING = 'AUTH_LOADING'\nexport const RESET_AUTH_LOADING = 'RESET_AUTH_LOADING'\n\nexport const PROFILE_LOADING = 'PROFILE_LOADING'\n\nexport const RESET_AUTH_ERROR_MSG = 'RESET_AUTH_ERROR_MSG'\n\nexport const RESET_CHANGE_PASSWORD_SUCCESS = 'RESET_CHANGE_PASSWORD_SUCCESS'\nexport const RESET_EDIT_BIO_SUCCESS = 'RESET_EDIT_BIO_SUCCESS'\n\nexport const CHANGE_PROFILE_PIC_SUCCESS = 'CHANGE_PROFILE_PIC_SUCCESS'\nexport const CHANGE_PROFILE_PIC_FAIL = 'CHANGE_PROFILE_PIC_FAIL'\n\nexport const EDIT_BIO_SUCCESS = 'EDIT_BIO_SUCCESS'\nexport const EDIT_BIO_FAIL = 'EDIT_BIO_FAIL'\n\nexport const SET_PREV_PATH = 'SET_PREV_PATH'\n","import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  ACTIVATE_SUCCESS,\n  ACTIVATE_FAIL,\n  RESEND_ACTIVATION_EMAIL_FAIL,\n  RESEND_ACTIVATION_EMAIL_SUCCESS,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  CHECK_AUTHENTICATION_SUCCESS,\n  CHECK_AUTHENTICATION_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  DELETE_ACCOUNT_SUCCESS,\n  DELETE_ACCOUNT_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAIL,\n  AUTH_LOADING,\n  PROFILE_LOADING,\n  RESET_AUTH_LOADING,\n  RESET_AUTH_ERROR_MSG,\n  RESET_CHANGE_PASSWORD_SUCCESS,\n  RESET_EDIT_BIO_SUCCESS,\n  CHANGE_PROFILE_PIC_SUCCESS,\n  CHANGE_PROFILE_PIC_FAIL,\n  EDIT_BIO_SUCCESS,\n  EDIT_BIO_FAIL,\n  SET_PREV_PATH,\n} from \"./types\";\n\nimport S3FileUpload from \"react-s3\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n// Error messages\n// Register\nconst unableToRegisterErrorMsg = \"Unable to register\";\nconst userAldExistsErrorMsg = \"User already exists\";\nconst passwordTooWeakErrorMsg = \"Password too weak\";\n\n// Activate\nconst unableToActivateErrorMsg = \"Unable to activate account\";\nconst expiredActivationTokenErrorMsg = \"Expired activation token\";\n\n// Resend activation email\nconst userDoesNotExistResendActivationEmailErrorMsg =\n  \"User does not exists or user has already successfully activated account\";\n\n// Login\nconst incorrectPasswordErrorMsg = \"Incorrect password\";\n\n// Delete account\nconst unableToDeleteAccountErrorMsg = \"Unable to delete account\";\n\n// Reset password\nconst unableToResetPasswordErrorMsg = \"Unable to reset passowrd\";\nconst userDoesNotExistResetPasswordErrorMsg = \"User does not exist\";\n\n// Reset password confirm\nconst expiredResetPasswordTokenErrorMsg = \"Expired reset password token\";\n\n// Change password\nconst changePasswordFailErrorMsg = \"Unable to change password\";\nconst incorrectCurrentPasswordErrorMsg = \"Incorrect current password\";\nconst newPasswordTooWeakErrorMsg = \"New password too weak\";\n\n// Change profile pic\nconst changeProfilePicFailErrorMsg = \"Unable to change profile pic\";\n\n// Edit bio\nconst editBioFailErrorMsg = \"Unable to edit bio\";\nconst bioCannotBeEmptyErrorMsg = \"Bio cannot be empty\";\n\n// Async Action Creators\n// Register\nexport const register =\n  (first_name, last_name, email, password, re_password) => async (dispatch) => {\n    dispatch(authLoading());\n\n    // Request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({\n      first_name,\n      last_name,\n      email,\n      password,\n      re_password,\n    });\n\n    // Post request\n    try {\n      await axios.post(`/auth/users/`, body, config);\n\n      dispatch(registerSuccess());\n    } catch (err) {\n      if (err.response.data.password) {\n        dispatch(registerFail(passwordTooWeakErrorMsg));\n      } else if (err.response.data.email) {\n        dispatch(registerFail(userAldExistsErrorMsg));\n      } else {\n        dispatch(registerFail(unableToRegisterErrorMsg));\n      }\n    }\n  };\n\n// Activate\nexport const activate = (uid, token) => async (dispatch) => {\n  dispatch(authLoading());\n\n  // Request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ uid, token });\n\n  // Post request\n  try {\n    await axios.post(`/auth/users/activation/`, body, config);\n\n    dispatch(activateSuccess());\n  } catch (err) {\n    if (err.response.data.uid || err.response.data.token) {\n      dispatch(activateFail(expiredActivationTokenErrorMsg));\n    } else {\n      dispatch(activateFail(unableToActivateErrorMsg));\n    }\n  }\n};\n\n// Resend activation email\nexport const resendActivationEmail = (email) => async (dispatch) => {\n  dispatch(authLoading());\n\n  // Request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email });\n\n  // Post request\n  try {\n    await axios.post(`/auth/users/resend_activation/`, body, config);\n\n    dispatch(resendActivationEmailSuccess());\n  } catch (err) {\n    dispatch(\n      resendActivationEmailFail(userDoesNotExistResendActivationEmailErrorMsg)\n    );\n  }\n};\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n  dispatch(authLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  if (token) {\n    // Request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    // Get request\n    try {\n      const res = await axios.get(`/auth/users/me/`, config);\n\n      dispatch(loadUserSuccess(res.data));\n    } catch (err) {\n      dispatch(loadUserFail());\n    }\n  } else {\n    dispatch(loadUserFail());\n  }\n};\n\n// Check authentication\nexport const checkAuthentication = () => async (dispatch) => {\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  if (token) {\n    // Request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n    const body = JSON.stringify({ token });\n\n    // Post request\n    try {\n      const res = await axios.post(`/auth/jwt/verify/`, body, config);\n\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch(checkAuthenticationSuccess());\n        dispatch(loadUser());\n      } else {\n        dispatch(checkAuthenticationFail());\n      }\n    } catch (err) {\n      dispatch(checkAuthenticationFail());\n    }\n  } else {\n    dispatch(checkAuthenticationFail());\n  }\n};\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  dispatch(authLoading());\n\n  // Request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email, password });\n\n  // Post request\n  try {\n    const res = await axios.post(`/auth/jwt/create/`, body, config);\n\n    dispatch(loginSuccess(res.data));\n    dispatch(checkAuthentication());\n  } catch (err) {\n    dispatch(loginFail(incorrectPasswordErrorMsg));\n  }\n};\n\n// Delete account\nexport const deleteAccount = (current_password) => async (dispatch) => {\n  dispatch(authLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  const data = JSON.stringify({ current_password });\n\n  // Delete request\n  try {\n    await axios.delete(`/auth/users/me/`, {\n      data,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    });\n\n    dispatch(logout());\n    dispatch(deleteAccountSuccess());\n  } catch (err) {\n    if (err.response.data.current_password) {\n      dispatch(deleteAccountFail(incorrectPasswordErrorMsg));\n    } else {\n      dispatch(deleteAccountFail(unableToDeleteAccountErrorMsg));\n    }\n  }\n};\n\n// Reset password\nexport const resetPassword = (email) => async (dispatch) => {\n  dispatch(authLoading());\n\n  // Request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email });\n\n  // Post request\n  try {\n    await axios.post(`/auth/users/reset_password/`, body, config);\n\n    dispatch(resetPasswordSuccess());\n  } catch (err) {\n    if (err.response.data) {\n      dispatch(resetPasswordFail(userDoesNotExistResetPasswordErrorMsg));\n    } else {\n      dispatch(resetPasswordFail(unableToResetPasswordErrorMsg));\n    }\n  }\n};\n\n// Reset password confirm\nexport const resetPasswordConfirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    dispatch(authLoading());\n\n    // Request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    // Post request\n    try {\n      await axios.post(`/auth/users/reset_password_confirm/`, body, config);\n\n      dispatch(resetPasswordConfirmSuccess());\n    } catch (err) {\n      if (err.response.data.uid || err.response.data.token) {\n        dispatch(resetPasswordConfirmFail(expiredResetPasswordTokenErrorMsg));\n      } else if (err.response.data.new_password) {\n        dispatch(resetPasswordFail(newPasswordTooWeakErrorMsg));\n      } else {\n        dispatch(resetPasswordConfirmFail(unableToResetPasswordErrorMsg));\n      }\n    }\n  };\n\n// Change password\nexport const changePassword =\n  (current_password, new_password, re_new_password) => async (dispatch) => {\n    dispatch(authLoading());\n\n    const token = localStorage.getItem(\"access\");\n\n    // Request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n    const body = JSON.stringify({\n      current_password,\n      new_password,\n      re_new_password,\n    });\n\n    // Post request\n    try {\n      await axios.post(`/auth/users/set_password/`, body, config);\n\n      dispatch(changePasswordSuccess());\n    } catch (err) {\n      if (err.response.data.current_password) {\n        dispatch(changePasswordFail(incorrectCurrentPasswordErrorMsg));\n      } else if (err.response.data.new_password) {\n        dispatch(changePasswordFail(newPasswordTooWeakErrorMsg));\n      } else {\n        dispatch(changePasswordFail(changePasswordFailErrorMsg));\n      }\n    }\n  };\n\n// Change Profile Picture\nexport const changeProfilePic = (picture) => async (dispatch) => {\n  // Loading\n  dispatch(profileLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  const s3config = {\n    bucketName: \"housematesorbital\",\n    dirName: \"images\",\n    region: \"us-east-2\",\n    accessKeyId: \"AKIA2VQMUMOWCECPYUOU\",\n    secretAccessKey: \"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\",\n  };\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${token}`,\n    },\n  };\n\n  // Patch request\n  let body;\n  let profile_pic;\n  try {\n    S3FileUpload.uploadFile(picture, s3config)\n      .then((data) => {\n        profile_pic = data.location;\n        body = JSON.stringify({ profile_pic });\n      })\n      .then(async () => {\n        await axios.patch(`/auth/users/me/`, body, config);\n        dispatch(changeProfilePicSuccess(profile_pic));\n      });\n  } catch (err) {\n    dispatch(changeProfilePicFail(changeProfilePicFailErrorMsg));\n  }\n};\n\n// Edit bio\nexport const editBio = (first_name, last_name, bio) => async (dispatch) => {\n  // Loading\n  dispatch(profileLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${token}`,\n    },\n  };\n  const body = JSON.stringify({ first_name, last_name, bio });\n\n  // Put request\n  try {\n    await axios.put(`/auth/users/me/`, body, config);\n\n    dispatch(editBioSuccess());\n  } catch (err) {\n    if (err.response.data.bio) {\n      dispatch(editBioFail(bioCannotBeEmptyErrorMsg));\n    } else {\n      dispatch(editBioFail(editBioFailErrorMsg));\n    }\n  }\n};\n\n// Action Creators\nexport const registerSuccess = () => ({ type: REGISTER_SUCCESS });\nexport const registerFail = (authErrorMsg) => ({\n  type: REGISTER_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const activateSuccess = () => ({ type: ACTIVATE_SUCCESS });\nexport const activateFail = (authErrorMsg) => ({\n  type: ACTIVATE_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const resendActivationEmailSuccess = () => ({\n  type: RESEND_ACTIVATION_EMAIL_SUCCESS,\n});\nexport const resendActivationEmailFail = (authErrorMsg) => ({\n  type: RESEND_ACTIVATION_EMAIL_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const loadUserSuccess = (user) => ({\n  type: LOAD_USER_SUCCESS,\n  payload: user,\n});\nexport const loadUserFail = () => ({ type: LOAD_USER_FAIL });\n\nexport const checkAuthenticationSuccess = () => ({\n  type: CHECK_AUTHENTICATION_SUCCESS,\n});\nexport const checkAuthenticationFail = () => ({\n  type: CHECK_AUTHENTICATION_FAIL,\n});\n\nexport const loginSuccess = (tokens) => ({\n  type: LOGIN_SUCCESS,\n  payload: tokens,\n});\nexport const loginFail = (authErrorMsg) => ({\n  type: LOGIN_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const logout = () => ({ type: LOGOUT });\n\nexport const deleteAccountSuccess = () => ({ type: DELETE_ACCOUNT_SUCCESS });\nexport const deleteAccountFail = (authErrorMsg) => ({\n  type: DELETE_ACCOUNT_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const resetPasswordSuccess = () => ({ type: RESET_PASSWORD_SUCCESS });\nexport const resetPasswordFail = (authErrorMsg) => ({\n  type: RESET_PASSWORD_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const resetPasswordConfirmSuccess = () => ({\n  type: RESET_PASSWORD_CONFIRM_SUCCESS,\n});\nexport const resetPasswordConfirmFail = (authErrorMsg) => ({\n  type: RESET_PASSWORD_CONFIRM_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const changePasswordSuccess = () => ({ type: CHANGE_PASSWORD_SUCCESS });\nexport const changePasswordFail = (authErrorMsg) => ({\n  type: CHANGE_PASSWORD_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const authLoading = () => ({ type: AUTH_LOADING });\nexport const resetAuthLoading = () => ({ type: RESET_AUTH_LOADING });\n\nexport const profileLoading = () => ({ type: PROFILE_LOADING });\n\nexport const resetAuthErrorMsg = () => ({ type: RESET_AUTH_ERROR_MSG });\n\nexport const resetChangePasswordSuccess = () => ({\n  type: RESET_CHANGE_PASSWORD_SUCCESS,\n});\nexport const resetEditBioSuccess = () => ({ type: RESET_EDIT_BIO_SUCCESS });\n\nexport const changeProfilePicSuccess = (picture) => ({\n  type: CHANGE_PROFILE_PIC_SUCCESS,\n  payload: picture,\n});\nexport const changeProfilePicFail = (authErrorMsg) => ({\n  type: CHANGE_PROFILE_PIC_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const editBioSuccess = () => ({ type: EDIT_BIO_SUCCESS });\nexport const editBioFail = (authErrorMsg) => ({\n  type: EDIT_BIO_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const setPrevPath = (path) => ({\n  type: SET_PREV_PATH,\n  payload: path,\n});\n","import React from 'react'\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, Grid, Typography } from '@material-ui/core'\nimport { activate } from '../redux/auth/actions'\n\n// Activate consists of title and activate button, from top to bottom.\nconst Activate = ({ authLoading, activationSuccess, activate }) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    button: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n  const { uid, token } = useParams()\n\n  // Handlers\n  const handleActivation = e => {\n    e.preventDefault()\n    activate(uid, token)\n  }\n  const handleRedirect = e => {\n    e.preventDefault()\n    history.push('/login')\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {activationSuccess\n          ?\n          <form onSubmit={handleRedirect}>\n            {/* Confirmation text */}\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully activated your account.\n            </Typography>\n\n            {/* Login button */}\n            <Button\n              autoFocus\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Proceed to Login\n            </Button>\n          </form>\n          :\n          <form onSubmit={handleActivation}>\n            {/* Activate button */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={authLoading}\n              autoFocus\n            >\n              Activate\n            </Button>\n\n            {/* Resend activation email link */}\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <NavLink to=\"/resend-activation-email\" variant=\"body2\">\n                  Resend activation email\n                </NavLink>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container >\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  activationSuccess: state.auth.activationSuccess,\n})\n\nconst mapDispatchToProps = {\n  activate,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Activate)\n","import React from 'react'\n\n// Empty for now\nconst Dashboard = () => {\n    return (\n        <div>\n            User Dashboard\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\n\n// Empty for now\nconst Home = () => {\n    return (\n        <div>\n            Website Homepage\n        </div>\n    )\n}\n\nexport default Home\n","export const GET_POST_LIST_SUCCESS = 'GET_POST_LIST_SUCCESS'\nexport const GET_POST_LIST_FAIL = 'GET_POST_LIST_FAIL'\n\nexport const GET_POST_DETAIL_SUCCESS = 'GET_POST_DETAIL_SUCCESS'\nexport const GET_POST_DETAIL_FAIL = 'GET_POST_DETAIL_FAIL'\n\nexport const GET_USER_POST_SUCCESS = 'GET_USER_POST_SUCCESS'\nexport const GET_USER_POST_FAIL = 'GET_USER_POST_FAIL'\n\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS'\nexport const CREATE_POST_FAIL = 'CREATE_POST_FAIL'\n\nexport const EDIT_POST_SUCCESS = 'EDIT_POST_SUCCESS'\nexport const EDIT_POST_FAIL = 'EDIT_POST_FAIL'\n\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS'\nexport const DELETE_POST_FAIL = 'DELETE_POST_FAIL'\n\nexport const POST_LOADING = 'POST_LOADING'\nexport const RESET_POST_LOADING = 'RESET_POST_LOADING'\n\nexport const RESET_POST_ERROR_MSG = 'RESET_POST_ERROR_MSG'\n\nexport const RESET_CREATE_POST_SUCCESS = 'RESET_CREATE_POST_SUCCESS'\nexport const RESET_EDIT_POST_SUCCESS = 'RESET_EDIT_POST_SUCCESS'\nexport const RESET_DELETE_POST_SUCCESS = 'RESET_DELETE_POST_SUCCESS'\n\nexport const SEARCH_POST_SUCCESS = 'SEARCH_POST_SUCCESS'\nexport const SEARCH_POST_FAIL = 'SEARCH_POST_FAIL'\n\nexport const CANCEL_SEARCH_SUCCESS = 'CANCEL_SEARCH_SUCCESS'\nexport const CANCEL_SEARCH_FAIL = 'CANCEL_SEARCH_FAIL'","import axios from \"axios\";\nimport {\n  GET_POST_LIST_SUCCESS,\n  GET_POST_LIST_FAIL,\n  GET_POST_DETAIL_SUCCESS,\n  GET_POST_DETAIL_FAIL,\n  GET_USER_POST_SUCCESS,\n  GET_USER_POST_FAIL,\n  CREATE_POST_SUCCESS,\n  CREATE_POST_FAIL,\n  EDIT_POST_SUCCESS,\n  EDIT_POST_FAIL,\n  DELETE_POST_SUCCESS,\n  DELETE_POST_FAIL,\n  POST_LOADING,\n  RESET_POST_LOADING,\n  RESET_POST_ERROR_MSG,\n  RESET_CREATE_POST_SUCCESS,\n  RESET_EDIT_POST_SUCCESS,\n  RESET_DELETE_POST_SUCCESS,\n  SEARCH_POST_SUCCESS,\n  SEARCH_POST_FAIL,\n  CANCEL_SEARCH_SUCCESS,\n  CANCEL_SEARCH_FAIL\n} from \"./types\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n// Error messages\nconst getPostListErrorMsg = \"Unable to load posts\"\nconst getPostDetailErrorMsg = \"Unable to load post\"\nconst getUserPostErrorMsg = \"Unable to load user post\"\nconst createPostErrorMsg = \"Unable to submit form\"\nconst editPostErrorMsg = \"Unable to edit post\"\nconst deletePostErrorMsg = \"Unable to delete post\"\n\nconst searchPostErrorMsg = \"Unable to search post\"\nconst cancelSearchErrorMsg = \" Unable to cancel search\"\n\n// Async actions creators\nexport const getPostList = formType =>\n  async dispatch => {\n    // Loading\n    dispatch(postLoading())\n\n    // Draft request\n    const config = { headers: { 'Content-Type': 'application/json' } }\n\n    // Get request\n    try {\n      const res = await axios.get(`/form/post-list/?form_type=${formType}`, config)\n\n      dispatch(getPostListSuccess(formType, res.data))\n    } catch (err) {\n      dispatch(getPostListFail(getPostListErrorMsg))\n    }\n  }\n\nexport const getPostDetail = id => \n  async dispatch => {\n    // Loading\n    dispatch(postLoading())\n\n    // Draft request\n    const config = { headers: { 'Content-Type': 'application/json' } }\n\n    // Get request\n    try {\n      const res = await axios.get(`/form/post-list/${id}/`, config)\n\n      dispatch(getPostDetailSuccess(res.data))\n    } catch (err) {\n      dispatch(getPostDetailFail(getPostDetailErrorMsg))\n    }\n  }\n\nexport const getUserPosts = owner => \n  async dispatch => {\n    // Loading\n    dispatch(postLoading())\n\n    // Draft request\n    const config = { headers: { 'Content-Type': 'application/json' } }\n\n    // Get request\n    try {\n      const res = await axios.get(`/form/post-list/?owner=${owner}`, config)\n\n      dispatch(getUserPostSuccess(res.data))\n    } catch (err) {\n      dispatch(getUserPostFail(getUserPostErrorMsg))\n    }\n  }\n\nexport const createPost = (post_form_type, selected_choices, owner) =>\n  async dispatch => {\n    // Loading\n    dispatch(postLoading())\n\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n    const body = JSON.stringify({ post_form_type, selected_choices, owner });\n\n    // Post request\n    try {\n      axios.post(\n        `/form/post-list/`,\n        body,\n        config\n      );\n\n      dispatch(createPostSuccess());\n    } catch (err) {\n      dispatch(createPostFail(createPostErrorMsg));\n    }\n  };\n\nexport const editPost = (id, post_form_type, selected_choices, owner, score_list, total_score) =>\n  async dispatch => {\n    // Loading\n    dispatch(postLoading())\n\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${token}`,\n      }\n    }\n    const body = JSON.stringify({ post_form_type, selected_choices, owner, score_list, total_score })\n\n    // Put request\n    try {\n      axios.put(\n        `/form/post-list/${id}/`,\n        body,\n        config\n      );\n\n      dispatch(editPostSuccess());\n    } catch (err) {\n      dispatch(editPostFail(editPostErrorMsg));\n    }\n  };\n\nexport const deletePost = (id) => async (dispatch) => {\n  dispatch(postLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${token}`,\n    },\n  };\n\n  // Post request\n  try {\n    axios.delete(\n      `/form/post-list/${id}/`,\n      config\n    );\n\n    dispatch(deletePostSuccess());\n  } catch (err) {\n    dispatch(deletePostFail(deletePostErrorMsg));\n  }\n};\n\nexport const searchPost = (formType, searchItem) => async (dispatch) => {\n  dispatch(postLoading());\n\n  // Request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Get request\n  try {\n    const res = await axios.get(\n      `/form/post-list/?form_type=${formType}&search=${searchItem}`,\n      config\n    );\n\n    dispatch(searchPostSuccess(res.data));\n  } catch (err) {\n    dispatch(searchPostFail(searchPostErrorMsg));\n  }\n};\n\nexport const cancelSearch = () => async (dispatch) => {\n  try {\n    dispatch(cancelSearchSuccess());\n  } catch (err) {\n    dispatch(cancelSearchFail(cancelSearchErrorMsg));\n  }\n};\n\n\n// Action Creators\nexport const getPostListSuccess = (formType, posts) => ({\n  type: GET_POST_LIST_SUCCESS,\n  payload: { formType, posts },\n});\nexport const getPostListFail = (postErrorMsg) => ({\n  type: GET_POST_LIST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const getPostDetailSuccess = (post) => ({\n  type: GET_POST_DETAIL_SUCCESS,\n  payload: post,\n});\nexport const getPostDetailFail = (postErrorMsg) => ({\n  type: GET_POST_DETAIL_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const getUserPostSuccess = userPost => ({\n  type: GET_USER_POST_SUCCESS,\n  payload: userPost,\n})\nexport const getUserPostFail = postErrorMsg => ({\n  type: GET_USER_POST_FAIL,\n  payload: postErrorMsg,\n})\n\nexport const createPostSuccess = () => ({ type: CREATE_POST_SUCCESS })\nexport const createPostFail = postErrorMsg => ({\n  type: CREATE_POST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const editPostSuccess = () => ({ type: EDIT_POST_SUCCESS });\nexport const editPostFail = (postErrorMsg) => ({\n  type: EDIT_POST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const deletePostSuccess = () => ({ type: DELETE_POST_SUCCESS });\nexport const deletePostFail = (postErrorMsg) => ({\n  type: DELETE_POST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const postLoading = () => ({ type: POST_LOADING });\nexport const resetPostLoading = () => ({ type: RESET_POST_LOADING });\n\nexport const resetPostErrorMsg = () => ({ type: RESET_POST_ERROR_MSG });\n\nexport const resetCreatePostSuccess = () => ({\n  type: RESET_CREATE_POST_SUCCESS,\n});\nexport const resetEditPostSuccess = () => ({ type: RESET_EDIT_POST_SUCCESS });\nexport const resetDeletePostSuccess = () => ({\n  type: RESET_DELETE_POST_SUCCESS,\n});\n\nexport const searchPostSuccess = (searchedPost) => ({\n  type: SEARCH_POST_SUCCESS,\n  payload: searchedPost,\n});\nexport const searchPostFail = (searchPostErrorMsg) => ({\n  type: SEARCH_POST_FAIL,\n  payload: searchPostErrorMsg,\n});\n\nexport const cancelSearchSuccess = () => ({ type: CANCEL_SEARCH_SUCCESS });\nexport const cancelSearchFail = (cancelSearchErrorMsg) => ({\n  type: CANCEL_SEARCH_FAIL,\n  payload: cancelSearchErrorMsg,\n});\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core'\nimport { Container, Fab, Grid, Tooltip, Typography } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport { getPostList, getUserPosts } from '../redux/post/actions'\n\n// Posts consists of list of Roommate and post button.\nconst Posts = ({ \n  user, userPost, postType, handlePost, PostComponent, xs, md, lg, posts, postsType,\n  getUserPosts, postLoading, getPostList, searchedPost\n}) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    tooltip: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n    grid: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n\n  // componentDidMount\n  useEffect(() => { getPostList(postType) }, [])\n  useEffect(() => user ? getUserPosts(user.id) : null, [user])\n  \n  const postToRender = searchedPost ? searchedPost : posts\n\n  return (\n    <div>\n      {postType === postsType && postToRender.length !== 0\n        ?\n        <>\n          {/* List of posts */}\n          <Container>\n            <Grid container spacing={2}>\n              {postToRender.map(post => (\n                <Grid item xs={xs} md={md} lg={lg} key={post.id} className={classes.grid}>\n                  <PostComponent post={post} />\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </>\n        :\n        <>\n          {!postLoading &&\n            <div style={{ textAlign: 'center' }}>\n              {/* No post */}\n              <Typography variant=\"subtitle1\">No post.</Typography>\n            </div>}\n        </>\n      }\n\n      {/* Post button */}\n      {user && userPost?.length === 0 &&\n        <Tooltip title=\"\" onClick={handlePost}>\n          <Fab color=\"primary\" className={classes.tooltip}><AddIcon /></Fab>\n        </Tooltip>}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  userPost: state.post.userPost,\n  posts: state.post.posts,\n  postsType: state.post.postsType,\n  postLoading: state.post.postLoading,\n  searchedPost: state.post.searchedPost,\n})\n\nconst mapDispatchToProps = {\n  getPostList,\n  getUserPosts,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)","export default __webpack_public_path__ + \"static/media/housing.e1a767d3.jpg\";","import React, { Fragment } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardActionArea, CardContent, CardMedia, IconButton, Tooltip, Typography } from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Pic from '../static/housing.jpg'\n\n// HousingCardCard consists of housing description: name and facilities, and pic.\nconst HousingCard = ({ post }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    card: {\n      display: 'flex',\n      height: 200,\n      cursor: 'pointer',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    media: {\n      width: 400,\n    },\n    tooltip: {\n      float: 'right',\n      marginRight: 5,\n      marginTop: 5,\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // Handlers\n  const handleClick = () => { history.push('/housing-form') }\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        {/* HousingCard description */}\n        <CardContent className={classes.content}>\n          {/* Name */}\n          <Typography variant=\"h5\">{post.name}</Typography>\n\n          {/* Facilities */}\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {post.specs.map((spec, index) =>\n              index === 0\n                ? <Fragment key={spec}>{spec} </Fragment>\n                : <Fragment key={spec}>&middot; {spec} </Fragment>\n            )}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n\n      {/* Pic */}\n      <CardMedia\n        className={classes.media}\n        image={Pic}\n        title={post.name}\n      >\n        {/* Edit button */}\n        <Tooltip title=\"\" className={classes.tooltip} onClick={handleClick}>\n          <IconButton style={{ color: \"black\" }} ><EditIcon /></IconButton>\n        </Tooltip>\n      </CardMedia>\n    </Card>\n  )\n}\n\nexport default HousingCard\n","export const ROOMMATE_FORM = 1\nexport const HOUSING_FORM = 2\nexport const PROFILE_FORM = 3\n\nexport const SINGLE_CHOICE = 'SingleChoice'\nexport const MULTIPLE_CHOICE = 'MultipleChoice'\nexport const PRIORITY = 'Priority'\n\nexport const SELF = 'Self'\nexport const OTHER = 'Other'\n\nexport const IRRELEVANT = 'Irrelevant'\nexport const A_LITTLE_IMPORTANT = 'A little important'\nexport const SOMEWHAT_IMPORTANT = 'Somewhat important'\nexport const VERY_IMPORTANT = 'Very important'\nexport const MANDATORY = 'Mandatory'\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Posts from '../components/Posts'\r\nimport HousingCard from '../components/HousingCard'\r\nimport { HOUSING_FORM } from '../globalConstants'\r\n\r\n// Housings consists of list of Roommate and post button.\r\nconst Housings = () => {\r\n  // Data (hard coded for now)\r\n  const posts = [\r\n    {\r\n      id: 1,\r\n      pic: \"housing.jpg\",\r\n      name: \"Atas Residence\",\r\n      specs: [\"6 guests\", \"2 bedrooms\", \"5 beds\", \"2 baths\", \"Air conditioning\", \"Free parking\", \"Wifi\", \"Pool\"],\r\n    },\r\n    {\r\n      id: 2,\r\n      pic: \"housing.jpg\",\r\n      name: \"Atas Residence\",\r\n      specs: [\"6 guests\", \"2 bedrooms\", \"5 beds\", \"2 baths\", \"Air conditioning\", \"Free parking\", \"Wifi\", \"Pool\"],\r\n    },\r\n    {\r\n      id: 3,\r\n      pic: \"housing.jpg\",\r\n      name: \"Atas Residence\",\r\n      specs: [\"6 guests\", \"2 bedrooms\", \"5 beds\", \"2 baths\", \"Air conditioning\", \"Free parking\", \"Wifi\", \"Pool\"],\r\n    },\r\n    {\r\n      id: 4,\r\n      pic: \"housing.jpg\",\r\n      name: \"Atas Residence\",\r\n      specs: [\"6 guests\", \"2 bedrooms\", \"5 beds\", \"2 baths\", \"Air conditioning\", \"Free parking\", \"Wifi\", \"Pool\"],\r\n    },\r\n  ]\r\n\r\n  // Hooks\r\n  const history = useHistory()\r\n\r\n  // Handlers\r\n  const handlePost = () => { history.push('/housing-form') }\r\n\r\n  return (\r\n    <div>\r\n      <Posts\r\n        postType={HOUSING_FORM}\r\n        handlePost={handlePost}\r\n        PostComponent={HousingCard}\r\n        xs={12}\r\n        md={12}\r\n        lg={12}\r\n        Posts={posts}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Housings\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../redux/auth/actions\";\r\n\r\n// Login consists of title, email input, password input, account input, login button, and (forgot password and register links), from top to bottom.\r\nconst Login = ({ isAuthenticated, authLoading, login }) => {\r\n  // Styling\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  // Hooks\r\n  const classes = useStyles();\r\n\r\n  // States\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [account, setAccount] = useState(\"tenant\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [accountError, setAccountError] = useState(false);\r\n\r\n  // Handlers\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setEmailError(true);\r\n    } else {\r\n      setEmailError(false);\r\n    }\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setPasswordError(true);\r\n    } else {\r\n      setPasswordError(false);\r\n    }\r\n  };\r\n  const handleAccountChange = (e) => {\r\n    setAccount(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setAccountError(true);\r\n    } else {\r\n      setAccountError(false);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEmailError(false);\r\n    setPasswordError(false);\r\n    setAccountError(false);\r\n\r\n    if (email === \"\") {\r\n      setEmailError(true);\r\n    }\r\n    if (password === \"\") {\r\n      setPasswordError(true);\r\n    }\r\n    if (account === \"\") {\r\n      setAccountError(true);\r\n    }\r\n\r\n    if (email && password && account) {\r\n      login(email, password);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n          {/* Email input */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoFocus\r\n            onChange={handleEmailChange}\r\n            error={emailError}\r\n            helperText={emailError ? \"This is a required field\" : \"\"}\r\n          />\r\n\r\n          {/* Password input */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            onChange={handlePasswordChange}\r\n            error={passwordError}\r\n            helperText={passwordError ? \"This is a required field\" : \"\"}\r\n          />\r\n\r\n          {/* Account input */}\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={accountError}\r\n          >\r\n            <InputLabel>Account</InputLabel>\r\n            <Select\r\n              value={account}\r\n              onChange={handleAccountChange}\r\n              label=\"Account\"\r\n            >\r\n              <MenuItem value=\"tenant\">Tenant</MenuItem>\r\n              <MenuItem value=\"host\">Host</MenuItem>\r\n            </Select>\r\n            <FormHelperText>\r\n              {accountError ? \"This is a required field\" : \"\"}\r\n            </FormHelperText>\r\n          </FormControl>\r\n\r\n          {/* Login button*/}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={authLoading}\r\n          >\r\n            Login\r\n          </Button>\r\n\r\n          {/* Forgot password and register links */}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <NavLink to=\"/reset-password\" variant=\"body2\">\r\n                Forgot password?\r\n              </NavLink>\r\n            </Grid>\r\n            <Grid item>\r\n              <NavLink to=\"/register\" variant=\"body2\">\r\n                Don't have an account? Register now!\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  authLoading: state.auth.authLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Badge from \"@material-ui/core/Badge\";\nimport {\n  loadUser,\n  changeProfilePic,\n  editBio,\n  resetEditBioSuccess,\n} from \"../redux/auth/actions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// Profile consists of profile pic, name and list of settings.\nconst Profile = ({\n  user,\n  changeProfilePic,\n  editBio,\n  loadUser,\n  editBioSuccess,\n  resetEditBioSuccess,\n  prevPath,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    avatar: {\n      height: 200,\n      width: 200,\n      marginBottom: 20,\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    card: {\n      width: \"100%\",\n      marginLeft: 23,\n      marginRight: 23,\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n\n  // States\n  const [open, setOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editBioTextFieldOpen, setEditBioTextFieldOpen] = useState(false);\n  const [bio, setBio] = useState(\"\");\n\n  // Handlers\n  const handleBack = () => {\n    history.push(prevPath);\n  };\n  const handleChangePassword = () => {\n    history.push(\"/change-password\");\n  };\n  const handleDeleteAccount = () => {\n    history.push(\"/delete-account\");\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCapture = ({ target }) => {\n    setSelectedFile(target.files[0]);\n  };\n  const handleSubmit = () => {\n    changeProfilePic(selectedFile);\n    setOpen(false);\n  };\n  const handleClick = () => {\n    setEditBioTextFieldOpen(true);\n  };\n  const handleCancel = () => {\n    setEditBioTextFieldOpen(false);\n  };\n  const handleChange = (e) => {\n    setBio(e.target.value);\n  };\n  const handleEditBio = (e) => {\n    e.preventDefault();\n    editBio(user.first_name, user.last_name, bio);\n    setEditBioTextFieldOpen(false);\n  };\n  const handleEdit = () => {\n    setEditBioTextFieldOpen(true);\n  };\n\n  // Content\n  const accordions = [\n    {\n      summary: \"Profile\",\n      details: [\n        <ListItem\n          button\n          onClick={handleChangePassword}\n          style={{ width: \"100%\" }}\n        >\n          <ListItemText primary=\"Change password\" />\n        </ListItem>,\n        <ListItem\n          button\n          onClick={handleDeleteAccount}\n          style={{ width: \"100%\" }}\n        >\n          <ListItemText primary=\"Delete account\" />\n        </ListItem>,\n      ],\n    },\n  ];\n\n  // componentDidMount\n  useEffect(() => {\n    loadUser();\n    resetEditBioSuccess();\n  }, [editBioSuccess]);\n\n  return (\n    <div className={classes.card}>\n      {user && (\n        <Card>\n          {/* Back button\n          <CardHeader\n            avatar={\n              <IconButton onClick={handleBack}>\n                <ArrowBackIcon />\n              </IconButton>\n            }\n          /> */}\n\n          <CardContent className={classes.content}>\n            {/* Profile pic */}\n            <Badge\n              overlap=\"circle\"\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              badgeContent={\n                <IconButton onClick={handleClickOpen}>\n                  <CreateIcon />\n                </IconButton>\n              }\n            >\n              <Avatar className={classes.avatar} src={user.profile_pic} />\n            </Badge>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">\n                Edit Profile Picture\n              </DialogTitle>\n              <DialogContent>\n                <Button\n                  variant=\"contained\"\n                  component=\"label\"\n                  // startIcon={<CloudUploadIcon />}\n                >\n                  {/* Upload File */}\n                  <input\n                    type=\"file\"\n                    id=\"image\"\n                    accept=\"image/png, image/jpeg\"\n                    onChange={handleCapture}\n                  />\n                </Button>\n              </DialogContent>\n\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={() => handleSubmit()} color=\"primary\">\n                  Save\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n            {/* Name */}\n            <Typography variant=\"h5\" style={{ marginBottom: 10 }}>\n              {user.first_name} {user.last_name}\n            </Typography>\n\n            {/* Bio */}\n            <Box mb={3}>\n              {editBioTextFieldOpen ? (\n                // Bio textarea\n                <form onSubmit={handleEditBio}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Describe yourself...\"\n                        defaultValue={user.bio}\n                        fullWidth\n                        multiline\n                        rows={3}\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                        marginTop: 8,\n                      }}\n                    >\n                      <Button\n                        size=\"small\"\n                        onClick={handleCancel}\n                        style={{ marginRight: 8 }}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"small\"\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              ) : user.bio ? (\n                // Bio\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Typography variant=\"body1\" color=\"textSecondary\">\n                    {user.bio}\n                  </Typography>\n                  <Link variant=\"body2\" onClick={handleEdit}>\n                    Edit\n                  </Link>\n                </div>\n              ) : (\n                // Add bio link\n                <Link variant=\"body2\" onClick={handleClick}>\n                  Add bio...\n                </Link>\n              )}\n            </Box>\n\n            {/* List of settings */}\n            <div style={{ width: \"100%\" }}>\n              {accordions.map((accordion) => (\n                <Accordion key={accordion}>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>{accordion.summary}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <List style={{ width: \"100%\" }}>\n                      {accordion.details.map((detail) => detail)}\n                    </List>\n                  </AccordionDetails>\n                </Accordion>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  editBioSuccess: state.auth.editBioSuccess,\n  prevPath: state.auth.prevPath,\n});\n\nconst mapDispatchToProps = {\n  changeProfilePic,\n  editBio,\n  resetEditBioSuccess,\n  loadUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { useState } from 'react'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button, Container, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\nimport { register } from '../redux/auth/actions'\r\n\r\n// Register consists of title, ((confirmation text), or (first name input, last name input, email input, password input, confirm password input, account input, register button and login link)), from top to bottom.\r\nconst Register = ({ isAuthenticated, authLoading, registrationSuccess, register }) => {\r\n  // Styling\r\n  const useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }))\r\n\r\n  // Hooks\r\n  const classes = useStyles()\r\n\r\n  // States\r\n  const [lastName, setLastName] = useState(\"\")\r\n  const [firstName, setFirstName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n  const [account, setAccount] = useState(\"tenant\")\r\n  const [lastNameError, setLastNameError] = useState(false)\r\n  const [firstNameError, setFirstNameError] = useState(false)\r\n  const [emailError, setEmailError] = useState(false)\r\n  const [passwordError, setPasswordError] = useState(false)\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false)\r\n  const [samePasswordError, setSamePasswordError] = useState(false)\r\n  const [accountError, setAccountError] = useState(false)\r\n\r\n  // Handlers\r\n  const handleFirstNameChange = e => {\r\n    setFirstName(e.target.value)\r\n    if (e.target.value === \"\") { setFirstNameError(true); } else { setFirstNameError(false) }\r\n  }\r\n  const handleLastNameChange = e => {\r\n    setLastName(e.target.value)\r\n    if (e.target.value === \"\") { setLastNameError(true); } else { setLastNameError(false) }\r\n  }\r\n  const handleEmailChange = e => {\r\n    setEmail(e.target.value)\r\n    if (e.target.value === \"\") { setEmailError(true); } else { setEmailError(false) }\r\n  }\r\n  const handlePasswordChange = e => {\r\n    setPassword(e.target.value)\r\n    if (e.target.value === '') {\r\n      setPasswordError(true)\r\n      setSamePasswordError(false)\r\n    } else if (confirmPassword && e.target.value !== confirmPassword) {\r\n      setSamePasswordError(true)\r\n      setPasswordError(false)\r\n    } else {\r\n      setPasswordError(false)\r\n      setSamePasswordError(false)\r\n    }\r\n  }\r\n  const handleConfirmPasswordChange = e => {\r\n    setConfirmPassword(e.target.value)\r\n    if (e.target.value === '') {\r\n      setConfirmPasswordError(true)\r\n      setSamePasswordError(false)\r\n    } else if (e.target.value !== password) {\r\n      setSamePasswordError(true)\r\n      setConfirmPasswordError(false)\r\n    } else {\r\n      setConfirmPasswordError(false)\r\n      setSamePasswordError(false)\r\n    }\r\n  }\r\n  const handleAccountChange = e => {\r\n    setAccount(e.target.value)\r\n    if (e.target.value === \"\") { setAccountError(true) } else { setAccountError(false) }\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    setFirstNameError(false)\r\n    setLastNameError(false)\r\n    setEmailError(false)\r\n    setPasswordError(false)\r\n    setConfirmPasswordError(false)\r\n    setSamePasswordError(false)\r\n    setAccountError(false)\r\n\r\n    if (firstName === \"\") { setFirstNameError(true) }\r\n    if (lastName === \"\") { setLastNameError(true) }\r\n    if (email === \"\") { setEmailError(true) }\r\n    if (password === \"\") { setPasswordError(true) }\r\n    if (confirmPassword === \"\") { setConfirmPasswordError(true) }\r\n    if (confirmPassword !== password) { setSamePasswordError(true) }\r\n    if (account === \"\") { setAccountError(true) }\r\n\r\n    if (firstName && lastName && email && password && confirmPassword && !samePasswordError && account) {\r\n      register(firstName, lastName, email, password, confirmPassword)\r\n    }\r\n  }\r\n\r\n  if (isAuthenticated) { return <Redirect to=\"/\" /> }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        {registrationSuccess\r\n          ?\r\n          // Confirmation text\r\n          <div>\r\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\r\n              Thank you for your registration.\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\r\n              Kindly check your email for account verification to complete the registration process.\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\r\n              You may close this window.\r\n            </Typography>\r\n          </div>\r\n          :\r\n          <form noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                {/* First name input */}\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"First Name\"\r\n                  name=\"firstName\"\r\n                  margin=\"normal\"\r\n                  autoFocus\r\n                  onChange={handleFirstNameChange}\r\n                  error={firstNameError}\r\n                  helperText={firstNameError ? \"This is a required field\" : \"\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                {/* Last name input */}\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  margin=\"normal\"\r\n                  onChange={handleLastNameChange}\r\n                  error={lastNameError}\r\n                  helperText={lastNameError ? \"This is a required field\" : \"\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Email input */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              margin=\"normal\"\r\n              onChange={handleEmailChange}\r\n              error={emailError}\r\n              helperText={emailError ? \"This is a required field\" : \"\"}\r\n            />\r\n\r\n            {/* Password input */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              margin=\"normal\"\r\n              onChange={handlePasswordChange}\r\n              error={passwordError}\r\n              helperText={passwordError ? \"This is a required field\" : \"Minimum 8 characters with a mixture of lower and upper case letters, numbers and symbols\"}\r\n            />\r\n\r\n            {/* Confirm password input */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              margin=\"normal\"\r\n              onChange={handleConfirmPasswordChange}\r\n              error={confirmPasswordError || samePasswordError}\r\n              helperText={\r\n                confirmPasswordError\r\n                  ? \"This is a required field\"\r\n                  : samePasswordError\r\n                    ? \"Password does not match\"\r\n                    : \"\"\r\n              }\r\n            />\r\n\r\n            {/* Account input */}\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              error={accountError}\r\n            >\r\n              <InputLabel>Account</InputLabel>\r\n              <Select\r\n                value={account}\r\n                onChange={handleAccountChange}\r\n                label=\"Account\"\r\n              >\r\n                <MenuItem value=\"tenant\">Tenant</MenuItem>\r\n                <MenuItem value=\"host\">Host</MenuItem>\r\n              </Select>\r\n              <FormHelperText>{accountError ? \"This is a required field\" : \"\"}</FormHelperText>\r\n            </FormControl>\r\n\r\n            {/* Register button */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={authLoading}\r\n            >\r\n              Register\r\n            </Button>\r\n\r\n            {/* Login link */}\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <NavLink to=\"/login\" variant=\"body2\">\r\n                  Already have an account? Login\r\n              </NavLink>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        }\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  authLoading: state.auth.authLoading,\r\n  registrationSuccess: state.auth.registrationSuccess,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  register,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, TextField, Typography } from '@material-ui/core'\nimport { changePassword, resetChangePasswordSuccess } from '../redux/auth/actions'\n\n// setPassword consists of current password input, new password input, confirm new password input and reset password button, from top to bottom.\nconst ChangePassword = ({ authLoading, changePasswordSuccess, changePassword, resetChangePasswordSuccess }) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [currentPassword, setCurrentPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [confirmNewPassword, setConfirmNewPassword] = useState('')\n  const [currentPasswordError, setCurrentPasswordError] = useState(false)\n  const [newPasswordError, setNewPasswordError] = useState(false)\n  const [confirmNewPasswordError, setConfirmNewPasswordError] = useState(false)\n  const [samePasswordError, setSamePasswordError] = useState(false)\n\n  // Handlers\n  const handleCurrentPasswordChange = (e) => {\n    setCurrentPassword(e.target.value)\n    if (e.target.value === '') {\n      setCurrentPasswordError(true)\n    } else {\n      setCurrentPasswordError(false)\n    }\n  }\n  const handleNewPasswordChange = (e) => {\n    setNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (confirmNewPassword && e.target.value !== confirmNewPassword) {\n      setSamePasswordError(true)\n      setNewPasswordError(false)\n    } else {\n      setNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleConfirmNewPasswordChange = (e) => {\n    setConfirmNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setConfirmNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (e.target.value !== newPassword) {\n      setSamePasswordError(true)\n      setConfirmNewPasswordError(false)\n    } else {\n      setConfirmNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    setCurrentPasswordError(false)\n    setNewPasswordError(false)\n    setConfirmNewPasswordError(false)\n    setSamePasswordError(false)\n\n    if (currentPassword === '') {\n      setCurrentPasswordError(true)\n    }\n    if (newPassword === '') {\n      setNewPasswordError(true)\n    }\n    if (confirmNewPassword === '') {\n      setConfirmNewPasswordError(true)\n    }\n    if (confirmNewPassword !== newPassword) {\n      setSamePasswordError(true)\n    }\n\n    if (currentPassword && newPassword && confirmNewPassword && !samePasswordError) {\n      changePassword(currentPassword, newPassword, confirmNewPassword)\n    }\n  }\n  const handleRedirect = e => { \n    e.preventDefault()\n    history.go(-1) \n    resetChangePasswordSuccess()\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {changePasswordSuccess\n          ?\n          <form onSubmit={handleRedirect}>\n            {/* Confirmation text */}\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully changed your password.\n            </Typography>\n\n            {/* Profile button */}\n            < Button\n              autoFocus\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Back to Profile\n            </Button>\n          </form>\n      :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* Current password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Current Password\"\n              name=\"currentPassword\"\n              type=\"password\"\n              autoFocus\n              onChange={handleCurrentPasswordChange}\n              error={currentPasswordError}\n              helperText={currentPasswordError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* New password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"New Password\"\n              name=\"newPassword\"\n              type=\"password\"\n              onChange={handleNewPasswordChange}\n              error={newPasswordError}\n              helperText={newPasswordError ? \"This is a required field\" : \"Minimum 8 characters with a mixture of lower and upper case letters, numbers and symbols\"}\n            />\n\n            {/* Confirm new password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Confim New Password\"\n              name=\"confirmNewPassword\"\n              type=\"password\"\n              onChange={handleConfirmNewPasswordChange}\n              error={confirmNewPasswordError || samePasswordError}\n              helperText={\n                confirmNewPasswordError\n                  ? \"This is a required field\"\n                  : samePasswordError\n                    ? \"Password does not match\"\n                    : \"\"\n              }\n            />\n\n            {/* Change password button */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={authLoading}\n            >\n              Change Password\n          </Button>\n          </form>\n        }\n\n\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  changePasswordSuccess: state.auth.changePasswordSuccess,\n})\n\nconst mapDispatchToProps = {\n  changePassword,\n  resetChangePasswordSuccess: () => dispatch => dispatch(resetChangePasswordSuccess()),\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword)","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Grid, Container, TextField, Typography } from '@material-ui/core'\nimport { deleteAccount } from '../redux/auth/actions'\n\n// DeleteAccount consists of title, and ((confirmation text), or (password input and (cancel and submit buttons), dependent of submission)), from top to bottom. \nconst DeleteAccount = ({ authLoading, deleteAccountSuccess, deleteAccount }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [password, setPassword] = useState(\"\")\n  const [passwordError, setPasswordError] = useState(false)\n\n  // Handlers\n  const handlePasswordChange = e => {\n    setPassword(e.target.value)\n    if (e.target.value === \"\") { setPasswordError(true) } else { setPasswordError(false) }\n  }\n  const handleCancel = () => history.go(-1)\n  const handleDelete = e => {\n    e.preventDefault()\n\n    setPasswordError(false)\n\n    if (password === \"\") { setPasswordError(true) }\n\n    if (password) {\n      deleteAccount(password)\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {deleteAccountSuccess\n          ?\n          // Confirmation text\n          <div>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully deleted your account.\n            </Typography>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You may close this window.\n            </Typography>\n          </div>\n          :\n          <form noValidate onSubmit={handleDelete}>\n            {/* Password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              autoFocus\n              onChange={handlePasswordChange}\n              error={passwordError}\n              helperText={passwordError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* Cancel and submit buttons */}\n            <Grid container spacing={2} className={classes.buttons}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  fullWidth\n                  onClick={handleCancel}\n                >\n                  Cancel\n              </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={authLoading}\n                >\n                  Delete\n              </Button>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  deleteAccountSuccess: state.auth.deleteAccountSuccess,\n})\n\nconst mapDispatchToProps = {\n  deleteAccount,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, Grid, TextField, Typography } from '@material-ui/core'\nimport { resendActivationEmail } from '../redux/auth/actions'\n\n// ResendActivationEmail consists of title, and ((confirmation text), or (email input and (cancel and submit buttons), dependent of submission)), from top to bottom. \nconst ResendActivationEmail = ({ authLoading, resendActivationEmailSuccess, resendActivationEmail }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [email, setEmail] = useState(\"\")\n  const [emailError, setEmailError] = useState(false)\n\n  // Handlers\n  const handleEmailChange = e => {\n    setEmail(e.target.value)\n    if (e.target.value === \"\") { setEmailError(true) } else { setEmailError(false) }\n  }\n  const handleCancel = () => history.go(-1)\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    setEmailError(false)\n\n    if (email === \"\") { setEmailError(true) }\n\n    if (email) {\n      resendActivationEmail(email)\n    }\n  }\n  \n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {resendActivationEmailSuccess\n          ?\n          // Confirmation text\n          <div>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              Kindly check your email for the activation email.\n            </Typography>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You may close this window.\n            </Typography>\n          </div>\n          :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* Email input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email\"\n              name=\"email\"\n              autoFocus\n              onChange={handleEmailChange}\n              error={emailError}\n              helperText={emailError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* Cancel and submit buttons */}\n            <Grid container spacing={2} className={classes.buttons}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  onClick={handleCancel}\n                >\n                  Cancel\n              </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={authLoading}\n                >\n                  Submit\n              </Button>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  resendActivationEmailSuccess: state.auth.resendActivationEmailSuccess,\n})\n\nconst mapDispatchToProps = {\n  resendActivationEmail,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResendActivationEmail)","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, Grid, TextField, Typography } from '@material-ui/core'\nimport { resetPassword } from '../redux/auth/actions'\n\n// ResetPassword consists of title, and ((confirmation text), or (email input and (cancel and submit buttons), dependent of submission)), from top to bottom. \nconst ResetPassword = ({ authLoading, resetPasswordSuccess, resetPassword }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [email, setEmail] = useState(\"\")\n  const [emailError, setEmailError] = useState(false)\n\n  // Handlers\n  const handleEmailChange = e => {\n    setEmail(e.target.value)\n    if (e.target.value === \"\") { setEmailError(true) } else { setEmailError(false) }\n  }\n  const handleCancel = () => history.go(-1)\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    setEmailError(false)\n\n    if (email === \"\") { setEmailError(true) }\n\n    if (email) {\n      resetPassword(email)\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {resetPasswordSuccess\n          ?\n          // Confirmation text\n          <div>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              Kindly check your email to reset your password.\n            </Typography>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You may close this window.\n            </Typography>\n          </div>\n          :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* Email input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email\"\n              name=\"email\"\n              autoFocus\n              onChange={handleEmailChange}\n              error={emailError}\n              helperText={emailError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* Cancel and submit buttons */}\n            <Grid container spacing={2} className={classes.buttons}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  onClick={handleCancel}\n                >\n                  Cancel\n              </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={authLoading}\n                >\n                  Submit\n              </Button>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  resetPasswordSuccess: state.auth.resetPasswordSuccess,\n})\n\nconst mapDispatchToProps = {\n  resetPassword,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword)\n","import React, { useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, TextField, Typography } from '@material-ui/core'\nimport { resetPasswordConfirm } from '../redux/auth/actions'\n\n// ResetPasswordConfirm consists of new password input, confirm new password input and reset password button, from top to bottom.\nconst ResetPasswordConfirm = ({ authLoading, resetPasswordConfirmSuccess, resetPasswordConfirm }) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n  const { uid, token } = useParams()\n\n  // States\n  const [newPassword, setNewPassword] = useState('')\n  const [confirmNewPassword, setConfirmNewPassword] = useState('')\n  const [newPasswordError, setNewPasswordError] = useState(false)\n  const [confirmNewPasswordError, setConfirmNewPasswordError] = useState(false)\n  const [samePasswordError, setSamePasswordError] = useState(false)\n\n  // Handlers\n  const handleNewPasswordChange = (e) => {\n    setNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (confirmNewPassword && e.target.value !== confirmNewPassword) {\n      setSamePasswordError(true)\n      setNewPasswordError(false)\n    } else {\n      setNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleConfirmNewPasswordChange = (e) => {\n    setConfirmNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setConfirmNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (e.target.value !== newPassword) {\n      setSamePasswordError(true)\n      setConfirmNewPasswordError(false)\n    } else {\n      setConfirmNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    setNewPasswordError(false)\n    setConfirmNewPasswordError(false)\n    setSamePasswordError(false)\n\n    if (newPassword === '') {\n      setNewPasswordError(true)\n    }\n    if (confirmNewPassword === '') {\n      setConfirmNewPasswordError(true)\n    }\n    if (confirmNewPassword !== newPassword) {\n      setSamePasswordError(true)\n    }\n\n    if (newPassword && confirmNewPassword && !samePasswordError) {\n      resetPasswordConfirm(uid, token, newPassword, confirmNewPassword)\n    }\n  }\n  const handleRedirect = e => { \n    e.preventDefault()\n    history.push('/login') \n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {resetPasswordConfirmSuccess\n          ?\n          <form onSubmit={handleRedirect}>\n            {/* Confirmation text */}\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully reset your password.\n            </Typography>\n\n            {/* Login button */}\n            < Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              autoFocus\n            >\n              Proceed to Login\n            </Button>\n          </form>\n          :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* New password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"New Password\"\n              name=\"newPassword\"\n              type=\"password\"\n              autoFocus\n              onChange={handleNewPasswordChange}\n              error={newPasswordError}\n              helperText={newPasswordError ? \"This is a required field\" : \"Minimum 8 characters with a mixture of lower and upper case letters, numbers and symbols\"}\n            />\n\n            {/* Confirm new password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Confim New Password\"\n              name=\"confirmNewPassword\"\n              type=\"password\"\n              onChange={handleConfirmNewPasswordChange}\n              error={confirmNewPasswordError || samePasswordError}\n              helperText={\n                confirmNewPasswordError\n                  ? \"This is a required field\"\n                  : samePasswordError\n                    ? \"Password does not match\"\n                    : \"\"\n              }\n            />\n\n            {/* Reset password button */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={authLoading}\n            >\n              Reset Password\n          </Button>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  resetPasswordConfirmSuccess: state.auth.resetPasswordConfirmSuccess,\n})\n\nconst mapDispatchToProps = {\n  resetPasswordConfirm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordConfirm)\n","export const GET_QUESTIONS_SUCCESS = 'GET_QUESTIONS_SUCCESS'\nexport const GET_QUESTIONS_FAIL = 'GET_QUESTIONS_FAIL'\n\nexport const FORM_LOADING = 'FORM_LOADING'\nexport const RESET_FORM_LOADING = 'RESET_FORM_LOADING'\n\nexport const RESET_FORM_ERROR_MSG = 'RESET_FORM_ERROR_MSG'\n","import axios from 'axios'\nimport {\n  GET_QUESTIONS_SUCCESS,\n  GET_QUESTIONS_FAIL,\n  FORM_LOADING,\n  RESET_FORM_LOADING,\n  RESET_FORM_ERROR_MSG,\n} from './types'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n// Error messages\nconst unableToLoadQuestionsErrorMsg = \"Unable to load questions\"\n\n// Async Action Createors\nexport const getQuestions = (formType) =>\n  async dispatch => {\n    dispatch(formLoading())\n\n    // Request\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n\n    // Get request\n    try {\n      const res = await axios.get(`/form/question-list/?form_type=${formType}`, config)\n\n      dispatch(getQuestionsSuccess(formType, res.data))\n    } catch (err) {\n      dispatch(getQuestionsFail(formType, unableToLoadQuestionsErrorMsg))\n    }\n  }\n\n\n\n// Action Creators\nexport const getQuestionsSuccess = (formType, questions) => ({\n  type: GET_QUESTIONS_SUCCESS,\n  payload: { formType, questions },\n})\nexport const getQuestionsFail = (formType, formErrorMsg) => ({\n  type: GET_QUESTIONS_FAIL,\n  payload: { formType, formErrorMsg },\n})\n\nexport const formLoading = () => ({ type: FORM_LOADING })\nexport const resetFormLoading = () => ({ type: RESET_FORM_LOADING })\n\nexport const resetFormErrorMsg = () => ({ type: RESET_FORM_ERROR_MSG })","import React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  Fab,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { getPostDetail, getUserPosts } from \"../redux/post/actions\";\nimport { getQuestions } from \"../redux/form/actions\";\nimport { ROOMMATE_FORM } from \"../globalConstants\";\n\n// RoommateDetail consists of profile pic, name, categories of tags and post button.\nconst RoommateDetail = ({\n  user,\n  userPost,\n  post,\n  roommateCategories,\n  getPostDetail,\n  getQuestions,\n  getUserPosts,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    avatar: {\n      height: 200,\n      width: 200,\n      marginBottom: 20,\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    tag: {\n      marginRight: 5,\n      marginTop: 5,\n    },\n    category: {\n      marginBottom: 30,\n    },\n    card: {\n      width: \"100%\",\n      marginLeft: 23,\n      marginRight: 23,\n    },\n    tooltip: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n  const { id } = useParams();\n\n  // Handlers\n  const handleBack = () => {\n    history.go(-1);\n  };\n  const handleClick = () => {\n    history.push(\"/roommate-form\");\n  };\n\n  // componentDidMount\n  useEffect(() => {\n    if (roommateCategories.length === 0) {\n      getQuestions(ROOMMATE_FORM);\n    }\n    getPostDetail(id);\n  }, []);\n  useEffect(() => (user ? getUserPosts(user.id) : null), [user]);\n\n  return (\n    <div className={classes.card}>\n      {post?.id.toString() === id.toString() ? (\n        <>\n          <Card>\n            {/* Back button */}\n            <CardHeader\n              avatar={\n                <IconButton onClick={handleBack}>\n                  <ArrowBackIcon />\n                </IconButton>\n              }\n            />\n\n            <CardContent className={classes.content}>\n              {/* Profile pic */}\n              <Avatar\n                className={classes.avatar}\n                src={post.owner.profile_pic}\n              />\n\n              {/* Name */}\n              <Typography variant=\"h5\">\n                {post.owner.first_name} {post.owner.last_name}\n              </Typography>\n\n              {/* Text */}\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                className={classes.category}\n              >\n                Looking for roommates who are:\n              </Typography>\n\n              {/* Categories of tags */}\n              <div>\n                {post.selected_choices.map((category, index) => (\n                  <div key={category} className={classes.category}>\n                    {/* Category */}\n                    <Typography\n                      variant=\"body1\"\n                      color=\"textPrimary\"\n                      gutterBottom\n                    >\n                      {roommateCategories[index]}\n                    </Typography>\n\n                    {/* Tags */}\n                    {category.map((question) =>\n                      Array.isArray(question.otherChoice) ? (\n                        // Multiple choice question\n                        question.otherChoice.map((choice) => (\n                          <Chip\n                            key={choice}\n                            className={classes.tag}\n                            label={choice}\n                            color=\"primary\"\n                          />\n                        ))\n                      ) : (\n                        // Single choice question\n                        <Chip\n                          key={question}\n                          className={classes.tag}\n                          label={question.otherChoice}\n                          color=\"primary\"\n                        />\n                      )\n                    )}\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Post button */}\n          {user && userPost?.length === 0 && (\n            <Tooltip title=\"\" onClick={handleClick}>\n              <Fab color=\"primary\" className={classes.tooltip}>\n                <AddIcon />\n              </Fab>\n            </Tooltip>\n          )}\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapPropsToState = (state) => ({\n  user: state.auth.user,\n  userPost: state.post.userPost,\n  post: state.post.post,\n  roommateCategories: state.form.roommateCategories,\n});\n\nconst mapDispatchToProps = {\n  getQuestions,\n  getPostDetail,\n  getUserPosts,\n};\n\nexport default connect(mapPropsToState, mapDispatchToProps)(RoommateDetail);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\n\n// Confirmation dialog\nconst Confirmation = ({\n  postLoading,\n  open, confirmationText, thankYouText, success,\n  handleCancel, handleSubmit, handleClose\n}) => {\n\n  return (\n    <Dialog open={open}>\n      {/* Confirmation title */}\n      <DialogTitle>Confirmation</DialogTitle>\n\n      {success\n        ?\n        <>\n          {/* Thank you text */}\n          <DialogContent>\n            <Typography variant=\"body1\">{thankYouText}</Typography>\n          </DialogContent>\n\n          {/* Close button */}\n          <DialogActions>\n            <Button autoFocus variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleClose}>Close</Button>\n          </DialogActions>\n        </>\n        :\n        <div>\n          <DialogContent>\n            {/* Confirmation text */}\n            <Typography variant=\"body1\">{confirmationText}</Typography>\n\n            {/* Loading spinner */}\n            {postLoading &&\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <CircularProgress style={{ marginTop: 10, marginBottom: 10 }} />\n              </div>\n            }\n          </DialogContent>\n\n          {/* Yes and no buttons */}\n          <DialogActions>\n            <Button variant=\"contained\" onClick={handleCancel}>No</Button>\n            <Button\n              color=\"primary\"\n              disabled={postLoading}\n              onClick={handleSubmit}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Yes\n            </Button>\n          </DialogActions>\n        </div>}\n    </Dialog>\n  )\n}\n\nconst mapStateToProps = state => ({\n  postLoading: state.post.postLoading,\n})\n\nexport default connect(mapStateToProps)(Confirmation)\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Box, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Paper, Radio, RadioGroup, Slider, Step, StepButton, Stepper, TextField, Typography } from '@material-ui/core'\nimport Confirmation from './Confirmation'\nimport { getQuestions } from '../redux/form/actions'\nimport { getUserPosts, getPostList, createPost, editPost, resetCreatePostSuccess, resetEditPostSuccess } from '../redux/post/actions'\nimport { ROOMMATE_FORM, HOUSING_FORM, PROFILE_FORM, MULTIPLE_CHOICE, SINGLE_CHOICE, PRIORITY, SELF, OTHER } from '../globalConstants'\n\n// Form consists of stepper, (((summary of questions and user inputs) and (back and submit buttons)), or ((list of questions with their corresponding list of choices based on category) and (back and next buttons))), dependent on current category. A confirmation dialog will popped up upon submission.\nconst Form = ({\n  user, posts, userPost,\n  getQuestions,\n  roommateQuestions, roommateCategories,\n  housingQuestions, housingCategories,\n  profileQuestions, profileCategories,\n  createPostSuccess, editPostSuccess,\n  createPost, resetCreatePostSuccess,\n  editPost, resetEditPostSuccess,\n  formType, initialFormFields, id,\n  getUserPosts, getPostList,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: 30,\n      paddingBottom: 50,\n      marginLeft: 23,\n      marginRight: 23,\n    },\n    flex: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    category: {\n      marginBottom: 10,\n    },\n    active: {\n      background: theme.palette.action.hover,\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // Helper functions\n  const completed = category => {\n    return questions\n      .filter(question => question.category === categories[category])\n      .reduce((prev, curr) => prev && formFields[category]?.[curr.id]?.myChoice && formFields[category]?.[curr.id]?.otherChoice && formFields[category]?.[curr.id]?.priority, true)\n  }\n\n  // Constants\n  const priorityChoices = [\"Irrelevant\", \"A little important\", \"Somewhat important\", \"Very important\", \"Mandatory\"]\n\n  // States\n  const [formFields, setFormFields] = useState({})\n  const [currentCategory, setCurrentCategory] = useState(0)\n  const [maxCategory, setMaxCategory] = useState(0)\n  const [categoryCompleted, setCategoryCompleted] = useState({})\n  const [open, setOpen] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [categories, setCategories] = useState([])\n\n  // Handlers\n  const handleNext = () => {\n    window.scrollTo(0, 0)\n    setCurrentCategory((prev) => prev + 1)\n    setMaxCategory((prev) =>\n      currentCategory >= maxCategory ? prev + 1 : prev\n    )\n    const newCategoryCompleted = categoryCompleted\n    newCategoryCompleted[currentCategory] = true\n    setCategoryCompleted(newCategoryCompleted)\n  }\n  const handleBack = () => {\n    window.scrollTo(0, 0)\n    setCurrentCategory((prev) => prev - 1)\n  }\n  const handleStep = (category) => () =>\n    category <= maxCategory ? setCurrentCategory(category) : null\n\n  const handleChange = (e, category, type, selfOther) => {\n    switch (type) {\n      case SINGLE_CHOICE:\n        switch (selfOther) {\n          case SELF:\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  question: e.target.name,\n                  myChoice: e.target.value,\n                },\n              }\n            })\n            break\n          case OTHER:\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  otherChoice: e.target.value,\n                },\n              }\n            })\n            break\n          default:\n            break\n        }\n        break\n\n      case MULTIPLE_CHOICE:\n        switch (selfOther) {\n          case SELF:\n            var myChoice = formFields[category]?.[e.target.name]?.myChoice || []\n            if (myChoice?.includes(e.target.value)) {\n              myChoice.splice(myChoice.indexOf(e.target.value), 1)\n            } else {\n              myChoice.push(e.target.value)\n            }\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  question: e.target.name,\n                  myChoice: myChoice,\n                },\n              }\n            })\n            break\n\n          case OTHER:\n            var otherChoice = formFields[category]?.[e.target.name]?.otherChoice || []\n            if (otherChoice?.includes(e.target.value)) {\n              otherChoice.splice(otherChoice.indexOf(e.target.value), 1)\n            } else {\n              otherChoice.push(e.target.value)\n            }\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  otherChoice: otherChoice,\n                },\n              }\n            })\n            break\n          default:\n            break\n        }\n        break\n\n      case PRIORITY:\n        setFormFields({\n          ...formFields,\n          [category]: {\n            ...formFields[category],\n            [e.target.name]: {\n              ...formFields[category]?.[e.target.name],\n              priority: e.target.value,\n            },\n          }\n        })\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleConfirmation = () => { setOpen(true) }\n  const handleCancel = () => setOpen(false)\n  const handleSubmit = () => {\n    const data = Object.values(formFields).map(category => Object.values(category))\n    const userObj = {\n      first_name: user.first_name,\n      last_name: user.last_name,\n    }\n    if (id) { editPost(id, formType, data, userObj) } else { createPost(formType, data, userObj) }\n  }\n  const handleClose = () => {\n    resetCreatePostSuccess()\n    resetEditPostSuccess()\n    setOpen(false)\n    history.push('/matchmaking')\n  }\n\n  // componentDidMount\n  useEffect(() => {\n    if (formType === ROOMMATE_FORM && roommateQuestions.length === 0 ||\n      formType === HOUSING_FORM && housingQuestions.length === 0 ||\n      formType === PROFILE_FORM && profileQuestions.length === 0\n    ) {\n      getQuestions(formType)\n    } else {\n      if (formType === ROOMMATE_FORM) {\n        setQuestions(roommateQuestions)\n        setCategories(roommateCategories)\n      } else if (formType === HOUSING_FORM) {\n        setQuestions(housingQuestions)\n        setCategories(housingCategories)\n      } else {\n        setQuestions(profileQuestions)\n        setCategories(profileCategories)\n      }\n    }\n  }, [])\n  useEffect(() => {\n    setQuestions(roommateQuestions)\n    setCategories(roommateCategories)\n  }, [roommateQuestions, formType === ROOMMATE_FORM ? questions : null])\n  useEffect(() => {\n    setQuestions(housingQuestions)\n    setCategories(housingCategories)\n  }, [housingQuestions, formType === HOUSING_FORM ? questions : null])\n  useEffect(() => {\n    setQuestions(profileQuestions)\n    setCategories(profileCategories)\n  }, [profileQuestions, formType === PROFILE_FORM ? questions : null])\n  useEffect(() => {\n    if (initialFormFields) {\n      setFormFields(initialFormFields)\n      const allCompleted = categories\n        .reduce((prev, curr, index) => ({ ...prev, [index]: true }), {})\n      setCategoryCompleted(allCompleted)\n      setMaxCategory(categories.length)\n    }\n  }, [initialFormFields, categories])\n  useEffect(() => { getPostList(ROOMMATE_FORM) }, [])\n  useEffect(() => user ? getUserPosts(user.id) : null, [user])\n\n  // Components\n  const SingleChoiceQuestion = ({ question }) => {\n    return (\n      <>\n        {/* Question */}\n        <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>{question.question_text}</Typography>\n\n        <Grid container spacing={8}>\n          {/* My choices */}\n          <Grid item xs={4}>\n            <FormControl>\n              <FormLabel>You are...</FormLabel>\n              <RadioGroup\n                name={question.id}\n                value={formFields[currentCategory]?.[question.id]?.myChoice}\n                onChange={e => handleChange(e, currentCategory, SINGLE_CHOICE, SELF)}\n              >\n                {question.choice_set.map(choice => (\n                  <FormControlLabel\n                    key={choice}\n                    control={<Radio color=\"primary\" />}\n                    value={choice}\n                    label={choice}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Other choices */}\n          <Grid item xs={4}>\n            <FormControl>\n              <FormLabel>Your ideal roommate is......</FormLabel>\n              <RadioGroup\n                name={question.id}\n                value={formFields[currentCategory]?.[question.id]?.otherChoice}\n                onChange={e => handleChange(e, currentCategory, SINGLE_CHOICE, OTHER)}\n              >\n                {question.choice_set.map(choice => (\n                  <FormControlLabel\n                    key={choice}\n                    control={<Radio color=\"primary\" />}\n                    value={choice}\n                    label={choice}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Priority */}\n          <Grid item xs={4}>\n            <FormControl>\n              <FormLabel>This question is...</FormLabel>\n              <RadioGroup\n                name={question.id}\n                value={formFields[currentCategory]?.[question.id]?.priority}\n                onChange={e => handleChange(e, currentCategory, PRIORITY)}\n              >\n                {priorityChoices.map(choice => (\n                  <FormControlLabel\n                    key={choice}\n                    control={<Radio color=\"primary\" />}\n                    value={choice}\n                    label={choice}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n\n  const MultipleChoiceQuestion = ({ question }) => {\n    return (\n      <>\n        {/* Question */}\n        <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>{question.question_text}</Typography>\n\n        <Grid container item spacing={8}>\n          {/* My choices */}\n          <Grid item xs={4}>\n            <FormControl>\n              <FormLabel>You are...</FormLabel>\n              <FormGroup>\n                {question.choice_set.map(choice => (\n                  <FormControlLabel\n                    key={choice}\n                    control={<Checkbox color=\"primary\" />}\n                    name={question.id}\n                    value={choice}\n                    label={choice}\n                    checked={formFields[currentCategory]?.[question.id]?.myChoice?.includes(choice)}\n                    onChange={e => handleChange(e, currentCategory, MULTIPLE_CHOICE, SELF)}\n                  />\n                ))}\n              </FormGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Other choices */}\n          <Grid item xs={4}>\n            <FormControl>\n              <FormLabel>Your ideal roommate is......</FormLabel>\n              <FormGroup>\n                {question.choice_set.map(choice => (\n                  <FormControlLabel\n                    name={question.id}\n                    value={choice}\n                    control={<Checkbox color=\"primary\" />}\n                    checked={formFields[currentCategory]?.[question.id]?.otherChoice?.includes(choice)}\n                    label={choice}\n                    key={choice}\n                    onChange={e => handleChange(e, currentCategory, MULTIPLE_CHOICE, OTHER)}\n                  />\n                ))}\n              </FormGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Priority */}\n          <Grid item xs={4}>\n            <FormControl>\n              <FormLabel>This question is...</FormLabel>\n              <RadioGroup\n                name={question.id}\n                value={formFields[currentCategory]?.[question.id]?.priority}\n                onChange={e => handleChange(e, currentCategory, PRIORITY)}\n              >\n                {priorityChoices.map(choice => (\n                  <FormControlLabel\n                    key={choice}\n                    control={<Radio color=\"primary\" />}\n                    value={choice}\n                    label={choice}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n\n  const TextQuestion = ({ question }) => {\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      fullWidth\n      label={question.question_text}\n      name={question.question_text}\n      onChange={e => handleChange(e)}\n    />\n  }\n\n  const stepper =\n    <Stepper nonLinear alternativeLabel activeStep={currentCategory}>\n      {categories.map((category, index) => (\n        <Step key={category}>\n          <StepButton\n            onClick={handleStep(index)}\n            completed={categoryCompleted[index]}\n            className={index === currentCategory ? classes.active : null}\n          >\n            {category}\n          </StepButton>\n        </Step>\n      ))}\n    </Stepper>\n\n  const summary =\n    <Grid container>\n      <Grid container item xs={12} style={{ padding: 48 }}>\n        {categories\n          .filter(category => category !== \"Confirmation\")\n          .map((category, categoryIndex) => (\n            // Category\n            <Grid item xs={12} key={category} style={{ marginBottom: 32 }}>\n              <Grid container>\n                <Grid item xs={3}>\n                  <Typography variant=\"h6\">{category}</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body1\" color=\"textSecondary\">You are...</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body1\" color=\"textSecondary\">Your ideal roommate is......</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography variant=\"body1\" color=\"textSecondary\">This question is...</Typography>\n                </Grid>\n              </Grid>\n\n              <Grid container>\n                {questions\n                  .filter(question => question.category === category)\n                  .map(question => (\n                    <Grid container item xs={12} spacing={8}>\n                      {/* Question */}\n                      <Grid item xs={3}>\n                        <Typography variant=\"body1\" gutterBottom>{question.question_text}</Typography>\n                      </Grid>\n                      {/* My choices */}\n                      <Grid item xs={3}>\n                        {question.question_type === MULTIPLE_CHOICE\n                          ?\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.myChoice?.reduce((prev, curr) => (prev ? prev + \", \" : prev) + curr, '')}\n                          </Typography>\n                          :\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.myChoice}\n                          </Typography>\n                        }\n                      </Grid>\n                      {/* Other choices */}\n                      <Grid item xs={3}>\n                        {question.question_type === MULTIPLE_CHOICE\n                          ?\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.otherChoice?.reduce((prev, curr) => (prev ? prev + \", \" : prev) + curr, '')}\n                          </Typography>\n                          :\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.otherChoice}\n                          </Typography>\n                        }\n                      </Grid>\n                      {/* Priority */}\n                      <Grid item xs={3}>\n                        <Typography variant=\"body1\" gutterBottom>\n                          {formFields[categoryIndex]?.[question.id]?.priority}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  ))}\n              </Grid>\n            </Grid>\n          ))}\n      </Grid>\n\n      {/* Back and submit buttons */}\n      {<Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n        <Button\n          onClick={handleBack}\n          style={{ marginRight: 8 }}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleConfirmation}\n        >\n          Submit\n        </Button>\n      </Grid>}\n    </Grid>\n\n  const questionsBasedOnCategory =\n    <Grid container>\n      <Grid container item xs={12} style={{ padding: 48 }}>\n        {questions\n          .filter(question => question.category === categories[currentCategory])\n          .map(question => (\n            <Grid item xs={12} style={{ marginBottom: 32 }}>\n              {question.question_type === SINGLE_CHOICE\n                ? <SingleChoiceQuestion question={question} />\n                : question.question_type === MULTIPLE_CHOICE\n                  ? <MultipleChoiceQuestion question={question} />\n                  : <TextQuestion question={question} />}\n            </Grid>\n          ))}\n      </Grid>\n\n      {/* Back and next buttons */}\n      {<Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n        <Button\n          onClick={handleBack}\n          disabled={currentCategory === 0}\n          style={{ marginRight: 8 }}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleNext}\n          disabled={!completed(currentCategory)}\n        >\n          Next\n        </Button>\n      </Grid>}\n    </Grid>\n\n  const confirmationDialog =\n    <Confirmation\n      open={open}\n      confirmationText={\"Are you sure you want to submit?\"}\n      thankYouText={\"Thank you for your submission!\"}\n      success={id ? editPostSuccess : createPostSuccess}\n      handleCancel={handleCancel}\n      handleSubmit={handleSubmit}\n      handleClose={handleClose}\n    />\n\n  return (\n    <>\n      {questions.length !== 0 && categories.length !== 0\n        ?\n        <Paper className={classes.paper}>\n          {stepper}\n\n          <div>\n            {currentCategory === categories.length - 1 ? summary : questionsBasedOnCategory}\n          </div>\n\n          {confirmationDialog}\n        </Paper>\n        :\n        null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  roommateQuestions: state.form.roommateQuestions,\n  roommateCategories: state.form.roommateCategories,\n  housingQuestions: state.form.housingQuestions,\n  housingCategories: state.form.housingCategories,\n  profileQuestions: state.form.profileQuestions,\n  profileCategories: state.form.profileCategories,\n  createPostSuccess: state.post.createPostSuccess,\n  editPostSuccess: state.post.editPostSuccess,\n  userPost: state.post.userPost,\n  posts: state.post.posts,\n})\n\nconst mapDispatchToProps = {\n  getQuestions,\n  createPost,\n  editPost,\n  resetCreatePostSuccess,\n  resetEditPostSuccess,\n  getUserPosts,\n  getPostList,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)","import React from 'react'\nimport Form from '../components/Form'\nimport { ROOMMATE_FORM } from '../globalConstants'\n\nconst RoommateForm = () => {\n  return (\n    <Form formType={ROOMMATE_FORM} />\n  )\n}\n\nexport default RoommateForm\n\n","import React from 'react'\nimport Form from '../components/Form'\nimport { PROFILE_FORM } from '../globalConstants'\n\nconst ProfileForm = () => {\n  return (\n    <Form formType={PROFILE_FORM}/>\n  )\n}\n\nexport default ProfileForm","import React from 'react'\nimport Form from '../components/Form'\nimport { HOUSING_FORM } from '../globalConstants'\n\nconst HousingForm = () => {\n  return (\n    <Form formType={HOUSING_FORM}/>\n  )\n}\n\nexport default HousingForm","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Chip,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  deletePost,\n  getPostList,\n  getUserPosts,\n  resetDeletePostSuccess,\n} from \"../redux/post/actions\";\nimport Confirmation from \"../components/Confirmation\";\nimport { ROOMMATE_FORM } from \"../globalConstants\";\nimport { loadUser } from \"../redux/auth/actions\";\n\n// RoommateCard consists of poster's description: pic, name, gender, bio and top 3 preferred roommate tags.fUSER\nconst RoommateCard = ({\n  user,\n  userPost,\n  post,\n  deletePostSuccess,\n  deletePost,\n  resetDeletePostSuccess,\n  getUserPosts,\n  getPostList,\n  loadUser,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    card: {\n      width: 345,\n      cursor: \"pointer\",\n      alignSelf: \"center\",\n    },\n    media: {\n      height: 160,\n    },\n    tag: {\n      marginRight: 5,\n      marginTop: 5,\n    },\n    text: {\n      height: 150,\n    },\n    edit: {\n      float: \"right\",\n      marginRight: 5,\n      marginTop: 5,\n    },\n    delete: {\n      float: \"right\",\n      marginRight: -15,\n      marginTop: 5,\n    },\n    icon: {\n      color: \"black\",\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n\n  // States\n  const [open, setOpen] = useState(false);\n\n  // Handlers\n  const handleEdit = () => {\n    history.push(`/edit-form/${post.id}`);\n  };\n  const handleOpenConfirmationDialog = () => {\n    setOpen(true);\n  };\n  const handleCancel = () => {\n    setOpen(false);\n  };\n  const handleDelete = () => {\n    deletePost(post.id);\n  };\n  const handleClose = () => {\n    resetDeletePostSuccess();\n    getPostList(ROOMMATE_FORM);\n    getUserPosts(user.id);\n    setOpen(false);\n  };\n\n  // componentDidMount\n  useEffect(() => loadUser(), []);\n  useEffect(() => (user ? getUserPosts(user.id) : null), [user]);\n\n  return (\n    <>\n      <Card className={classes.card}>\n        {user?.id === post.owner.id && (\n          <>\n            {/* Edit button */}\n            <Tooltip title=\"\" className={classes.edit} onClick={handleEdit}>\n              <IconButton className={classes.icon}>\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n\n            {/* Delete button */}\n            <Tooltip\n              title=\"\"\n              className={classes.delete}\n              onClick={handleOpenConfirmationDialog}\n            >\n              <IconButton className={classes.icon}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </>\n        )}\n\n        <Link\n          to={`/roommates/${post.id}`}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          {/* Pic */}\n          <CardMedia\n            className={classes.media}\n            image={post.owner.profile_pic}\n            title={post.owner.first_name + \" \" + post.owner.last_name}\n          />\n\n          <CardActionArea>\n            {/* Poster's description */}\n            <CardContent>\n              {/* Name */}\n              <Typography variant=\"h5\" gutterBottom>\n                {post.owner.first_name} {post.owner.last_name}{\" \"}\n                {post.score_list[userPost?.[0]?.id]?.score &&\n                  post.score_list[userPost?.[0]?.id]?.score + \"%\"}\n              </Typography>\n\n              {/* Age, gender and bio */}\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                className={classes.text}\n              >\n                {post?.owner.bio?.length > 220\n                  ? post.owner.bio.substring(0, 220) + \"...\"\n                  : post.owner.bio}\n              </Typography>\n\n              <br />\n\n              <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                Looking for roommates who are:\n              </Typography>\n\n              {/* Top 3 preferred roommate tags */}\n              {/* {post?.specs.map(spec => */}\n              {/* <Chip key={spec} label={spec} color=\"primary\" className={classes.tag} /> */}\n              {/* )} */}\n            </CardContent>\n          </CardActionArea>\n        </Link>\n      </Card>\n\n      {/* Confirmation dialog */}\n      <Confirmation\n        open={open}\n        confirmationText={\"Are you sure you want to delete?\"}\n        thankYouText={\"You have successfully deleted your post\"}\n        success={deletePostSuccess}\n        handleCancel={handleCancel}\n        handleSubmit={handleDelete}\n        handleClose={handleClose}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  userPost: state.post.userPost,\n  deletePostSuccess: state.post.deletePostSuccess,\n});\n\nconst mapDispatchToProps = {\n  deletePost,\n  resetDeletePostSuccess,\n  getPostList,\n  getUserPosts,\n  loadUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoommateCard);\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Posts from '../components/Posts'\nimport RoommateCard from '../components/RoommateCard'\nimport { ROOMMATE_FORM } from '../globalConstants'\n\n// Roommates consists of list of RoommateCard and post button.\nconst Roommates = () => {\n  // Hooks\n  const history = useHistory()\n\n  // Handlers\n  const handlePost = () => { history.push('/roommate-form') }\n\n  return (\n    <div>\n      <Posts\n        postType={ROOMMATE_FORM}\n        handlePost={handlePost}\n        PostComponent={RoommateCard}\n        xs={12}\n        md={6}\n        lg={4}\n      />\n    </div>\n  )\n}\n\nexport default Roommates\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\n// Footer consists of copyright.\nconst Footer = () => {\n  return (\n    // Copyright\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      Team Eclipse\n      {\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  )\n}\n\nexport default Footer\n","import React from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\n\r\n// SideNav consists of list of tabs.\r\nconst SideNav = ({ drawerWidth, menuOpen, hoverOpen, drawerOpen, handleMouseEnter, handleMouseLeave }) => {\r\n  // Styling\r\n  const useStyles = makeStyles(theme => ({\r\n    active: {\r\n      background: theme.palette.action.hover,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n      position: 'absolute',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerOpenDelay: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      transitionDelay: '1s'\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(7) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      minHeight: theme.mixins.toolbar.minHeight + 8,\r\n    },\r\n  }))\r\n  \r\n  // Content\r\n  const categories = [\r\n    {\r\n      text: 'Housings',\r\n      icon: <HomeIcon color=\"primary\" />,\r\n      path: '/housings',\r\n    },\r\n    {\r\n      text: 'Roommates',\r\n      icon: <PeopleIcon color=\"primary\" />,\r\n      path: '/roommates',\r\n    },\r\n  ]\r\n\r\n  // Hooks\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: drawerOpen,\r\n        [classes.drawerOpenDelay]: !menuOpen && hoverOpen,\r\n        [classes.drawerClose]: !drawerOpen,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: drawerOpen,\r\n          [classes.drawerOpenDelay]: !menuOpen && hoverOpen,\r\n          [classes.drawerClose]: !drawerOpen,\r\n        }),\r\n      }}\r\n    >\r\n      <div className={classes.toolbar} />\r\n\r\n      {/* List of tabs */}\r\n      <List>\r\n        {categories.map(category => (\r\n          <ListItem\r\n            key={category.text}\r\n            button\r\n            onClick={() => {\r\n              // setHoverOpen(true)\r\n              history.push(category.path)\r\n            }}\r\n            className={location.pathname === category.path ? classes.active : null}\r\n          >\r\n            <ListItemIcon>{category.icon}</ListItemIcon>\r\n            <ListItemText primary={category.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default SideNav\r\n","export default __webpack_public_path__ + \"static/media/housemates-logo-without-text-white.46ea2238.svg\";","import React, { useState, Fragment } from \"react\";\r\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { logout } from \"../redux/auth/actions\";\r\nimport Logo from \"../static/housemates-logo-without-text-white.svg\";\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { searchPost, cancelSearch } from \"../redux/post/actions\";\r\nimport { ROOMMATE_FORM } from \"../globalConstants\";\r\n\r\nexport const light = {\r\n  palette: {\r\n    // primary: indigo,\r\n    type: \"light\",\r\n  },\r\n};\r\n\r\nexport const dark = {\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n};\r\n\r\n// NavBar consists of menu button, logo, title, search bar, and welcome text and profile pic, or login and register buttons, dependent of user authentication, from left to right.\r\nconst NavBar = ({\r\n  handleMenuButton,\r\n  isAuthenticated,\r\n  logout,\r\n  user,\r\n  searchPost,\r\n  cancelSearch,\r\n}) => {\r\n  // Styling (from left to right)\r\n  const useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      paddingLeft: 24,\r\n      minHeight: theme.mixins.toolbar.minHeight + 8,\r\n    },\r\n    menuButton: {\r\n      marginRight: 25,\r\n      marginLeft: -20,\r\n    },\r\n    logo: {\r\n      marginRight: 10,\r\n    },\r\n    title: {\r\n      marginRight: 30,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: 400,\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n    },\r\n    buttons: {\r\n      textDecoration: \"none\",\r\n      color: \"white\",\r\n    },\r\n    profilePic: {\r\n      marginLeft: 10,\r\n      cursor: \"pointer\",\r\n    },\r\n  }));\r\n\r\n  const [theme, setTheme] = useState(true);\r\n  const icon = !theme ? <Brightness7Icon /> : <Brightness3Icon />; // Icons imported from `@material-ui/icons`\r\n  const appliedTheme = createMuiTheme(theme ? light : dark);\r\n\r\n  // Hooks\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // States\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [data, setData] = useState({ search: \"\" });\r\n\r\n  // Handlers\r\n  const handleMenuOpen = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleProfile = () => {\r\n    setAnchorEl(null);\r\n    history.push(\"/profile\");\r\n  };\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    logout();\r\n    history.push(\"/login\");\r\n  };\r\n  const handleClick = () => {\r\n    history.push(\"/profile\");\r\n  };\r\n\r\n  const handleSearch = (searchItem) => {\r\n    searchPost(ROOMMATE_FORM, searchItem);\r\n  };\r\n\r\n  const handleCancelSearch = () => {\r\n    cancelSearch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          {/* Menu button */}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleMenuButton}\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          {/* Logo */}\r\n          <img\r\n            alt=\"logo\"\r\n            src={Logo}\r\n            width=\"45\"\r\n            height=\"45\"\r\n            className={classes.logo}\r\n            onClick={handleClick}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n\r\n          {/* Title */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            onClick={handleClick}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            HouseMates\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n\r\n          {/* Search bar */}\r\n          {location.pathname === \"/roommates\" && (\r\n            <SearchBar\r\n              className={classes.search}\r\n              value={data.search}\r\n              onChange={(newValue) => setData({ search: newValue })}\r\n              onRequestSearch={() => handleSearch(data.search)}\r\n              onCancelSearch={handleCancelSearch}\r\n              cancelOnEscape\r\n            />\r\n          )}\r\n\r\n          <div className={classes.grow} />\r\n\r\n          {/* Welcome text and profile pic, or login and register buttons */}\r\n          {isAuthenticated && user ? (\r\n            <Fragment style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div style={{ alignSelf: \"center\" }}>\r\n                <Typography noWrap>\r\n                  Welcome {user.first_name} {user.last_name}!\r\n                </Typography>\r\n              </div>\r\n\r\n              <div>\r\n                <Avatar\r\n                  className={classes.profilePic}\r\n                  onClick={handleMenuOpen}\r\n                  src={user.profile_pic}\r\n                />\r\n              </div>\r\n\r\n              <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n              >\r\n                {/* <MenuItem>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"mode\"\r\n                    onClick={() => setTheme(!theme)}\r\n                  >\r\n                    {icon}\r\n                  </IconButton>\r\n                </MenuItem> */}\r\n                <MenuItem onClick={handleProfile}>Profile</MenuItem>\r\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n              </Menu>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button>\r\n                <Link to=\"/login\" className={classes.buttons}>\r\n                  Login\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/register\" className={classes.buttons}>\r\n                  Register\r\n                </Link>\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logout: () => (dispatch) => dispatch(logout()),\r\n  searchPost,\r\n  cancelSearch,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CircularProgress } from '@material-ui/core'\nimport Footer from '../components/Footer'\nimport SideNav from '../components/SideNav'\nimport NavBar from '../components/NavBar'\n\n// LayoutTwo consists of NavBar on top of the component, SideNav at the side and Footer at the bottom.\nconst LayoutTwo = ({ children, formLoading, postLoading, profileLoading }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      minHeight: theme.mixins.toolbar.minHeight + 8,\n    },\n    closeSize: {\n      minHeight: 100,\n      width: theme.spacing(8) + 1,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    openSize: {\n      minHeight: 100,\n      width: drawerWidth + 60,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n  }))\n\n  // Constants\n  const drawerWidth = 190\n\n  // Hooks\n  const classes = useStyles()\n\n  // States\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [hoverOpen, setHoverOpen] = useState(false)\n  const drawerOpen = menuOpen || (!menuOpen && hoverOpen)\n\n  // Handlers\n  const handleMenuButton = () => { setMenuOpen(!menuOpen) }\n  const handleMouseEnter = () => { setHoverOpen(true) }\n  const handleMouseLeave = () => { setHoverOpen(false) }\n\n  return (\n    <div className={classes.root}>\n      {/* NavBar */}\n      <NavBar\n        handleMenuButton={handleMenuButton}\n      />\n\n      {/* SideNav */}\n      <SideNav\n        drawerWidth={drawerWidth}\n        menuOpen={menuOpen}\n        hoverOpen={hoverOpen}\n        drawerOpen={drawerOpen}\n        handleMouseEnter={handleMouseEnter}\n        handleMouseLeave={handleMouseLeave}\n      />\n\n      {/* Content */}\n      <main className={classes.content}>\n        {/* Top padding */}\n        <div className={classes.toolbar} />\n\n        <div style={{ display: 'flex' }}>\n          {/* Side padding */}\n          <div className={!menuOpen ? classes.closeSize : classes.openSize} />\n\n          <div style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            {/* Loading spinner */}\n            {(postLoading || formLoading || profileLoading) && <CircularProgress style={{ marginBottom: 40 }} />}\n\n            {/* Main content */}\n            <div style={{ width: '100%' }}>{children}</div>\n\n            {/* Footer */}\n            <div style={{ marginTop: 60 }}>\n              <Footer />\n            </div>\n          </div>\n        </div>\n      </main>\n    </div >\n  )\n}\n\n\n// Redux\nconst mapStateToProps = state => ({\n  formLoading: state.form.formLoading,\n  postLoading: state.post.postLoading,\n  profileLoading: state.auth.profileLoading,\n})\n\nexport default connect(mapStateToProps)(LayoutTwo)\n","export default __webpack_public_path__ + \"static/media/housemates-logo-with-text-black.34fb629a.svg\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport { CircularProgress, Typography } from '@material-ui/core'\nimport Footer from '../components/Footer'\nimport Logo from '../static/housemates-logo-with-text-black.svg'\n\n// LayoutOne consists of logo at the top of the component and footer at the bottom.\nconst LayoutOne = ({ children, title, authLoading }) => {\n \n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      {/* Logo */}\n      <img\n        alt=\"logo\"\n        src={Logo}\n        width=\"150\"\n        height=\"150\"\n        style={{ marginTop: 50 }}\n      />\n\n      {/* Title */}\n      <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n      {/* Loading spinner */}\n      {authLoading && <CircularProgress />}\n\n      {/* Content */}\n      {children}\n\n      {/* Footer */}\n      <div style={{ marginTop: 60 }}><Footer /></div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  authLoading: state.auth.authLoading,\n});\n\nexport default connect(mapStateToProps)(LayoutOne)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst RouteWrapper = ({\n  title,\n  component: Component, \n  layout: Layout, \n  ...rest\n}) => {\n  return (\n    <Route {...rest} render={(props) =>\n      <Layout {...props} title={title}>\n        <Component {...props} />\n      </Layout>\n    } />\n  )\n}\n\nexport default RouteWrapper\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { Snackbar } from '@material-ui/core'\nimport { checkAuthentication, resetAuthErrorMsg, setPrevPath } from '../redux/auth/actions'\nimport { resetFormErrorMsg } from '../redux/form/actions'\nimport { resetPostErrorMsg } from '../redux/post/actions'\nimport './layout.css'\n\nconst Layout = ({\n  children,\n  checkAuthentication,\n  prevPath, setPrevPath,\n  authErrorMsg, formErrorMsg, postErrorMsg,\n  resetAuthErrorMsg, resetFormErrorMsg, resetPostErrorMsg,\n}) => {\n\n  // Handlers\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return\n\n    if (authErrorMsg) resetAuthErrorMsg()\n    if (formErrorMsg) resetFormErrorMsg()\n    if (postErrorMsg) resetPostErrorMsg()\n  }\n  const handleFocus = e => {\n    e.target.style.outline = \"none\"\n    e.target.style.backgroundColor = \"rgb(211, 47, 47)\"\n    e.target.classList.add(\"grow\")\n  }\n  const handleBlur = e => {\n    button.current.style.backgroundColor = \"rgb(244, 67, 54)\"\n    button.current.classList.remove(\"grow\")\n    e.target.classList.remove(\"grow\")\n  }\n  const handleMouseEnter = e => {\n    if (button.current.style.backgroundColor !== \"rgb(211, 47, 47)\")\n      button.current.style.backgroundColor = \"rgb(234, 64, 51)\"\n  }\n  const handleMouseLeave = e => {\n    button.current.style.backgroundColor = \"rgb(244, 67, 54)\"\n    button.current.classList.remove(\"grow\")\n    e.target.classList.remove(\"grow\")\n  }\n\n  // Hooks\n  const location = useLocation()\n  const button = useRef()\n\n  // componentDidUpdate\n  useEffect(() => { \n    window.scroll(0, 0) \n    return () => { if (location.pathname !== prevPath) setPrevPath(location.pathname) }\n  }, [location.pathname])\n\n  // componentDidMount\n  useEffect(() => { checkAuthentication() }, [])\n\n  return (\n    <div>\n      {/* Error message */}\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={authErrorMsg || formErrorMsg || postErrorMsg}\n        onClose={handleClose}\n        style={{ zIndex: 1502 }}\n      >\n        <MuiAlert\n          action={\n            <div className={\"buttonHolder\"}>\n              <div\n                className={\"div\"}\n                style={{ zIndex: 1504 }}\n                onClick={handleClose}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n              />\n              <div\n                className={\"close\"}\n                style={{ zIndex: 1503 }}\n              >\n                &#10006;\n              </div>\n              <button\n                autoFocus\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                onClick={handleClose}\n                ref={button}\n                className={\"button\"}\n              />\n            </div>\n          }\n          severity=\"error\"\n          variant=\"filled\"\n        >\n          {authErrorMsg ? authErrorMsg : formErrorMsg ? formErrorMsg : postErrorMsg}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Sheild */}\n      {(authErrorMsg || formErrorMsg || postErrorMsg) &&\n        <div\n          className={\"sheild\"}\n          style={{ zIndex: 1501 }}\n        />}\n\n      {/* Layout */}\n      {children}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authErrorMsg: state.auth.authErrorMsg,\n  formErrorMsg: state.form.formErrorMsg,\n  postErrorMsg: state.post.postErrorMsg,\n  prevPath: state.auth.prevPath,\n})\n\nconst mapDispatchToProps = {\n  checkAuthentication,\n  resetAuthErrorMsg,\n  resetFormErrorMsg,\n  resetPostErrorMsg,\n  setPrevPath,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  ACTIVATE_SUCCESS,\n  ACTIVATE_FAIL,\n  RESEND_ACTIVATION_EMAIL_SUCCESS,\n  RESEND_ACTIVATION_EMAIL_FAIL,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  CHECK_AUTHENTICATION_SUCCESS,\n  CHECK_AUTHENTICATION_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  DELETE_ACCOUNT_SUCCESS,\n  DELETE_ACCOUNT_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAIL,\n  AUTH_LOADING,\n  PROFILE_LOADING,\n  RESET_AUTH_LOADING,\n  RESET_AUTH_ERROR_MSG,\n  RESET_CHANGE_PASSWORD_SUCCESS,\n  RESET_EDIT_BIO_SUCCESS,\n  CHANGE_PROFILE_PIC_SUCCESS,\n  CHANGE_PROFILE_PIC_FAIL,\n  EDIT_BIO_SUCCESS,\n  EDIT_BIO_FAIL,\n  SET_PREV_PATH,\n} from \"./types\";\n\n// Initial states\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: false,\n  user: null,\n  registrationSuccess: false,\n  activationSuccess: false,\n  resendActivationEmailSuccess: false,\n  deleteAccountSuccess: false,\n  resetPasswordSuccess: false,\n  resetPasswordConfirmSuccess: false,\n  changePasswordSuccess: false,\n  editBioSuccess: false,\n  authErrorMsg: \"\",\n  authLoading: false,\n  profileLoading: false,\n  prevPath: \"\",\n};\n\n// Reducer\nconst authReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        registrationSuccess: true,\n        authLoading: false,\n      };\n\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        registrationSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case ACTIVATE_SUCCESS:\n      return {\n        ...state,\n        activationSuccess: true,\n        authLoading: false,\n      };\n\n    case ACTIVATE_FAIL:\n      return {\n        ...state,\n        activationSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case RESEND_ACTIVATION_EMAIL_SUCCESS:\n      return {\n        ...state,\n        resendActivationEmailSuccess: true,\n        authLoading: false,\n      };\n\n    case RESEND_ACTIVATION_EMAIL_FAIL:\n      return {\n        ...state,\n        resendActivationEmailSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n        authLoading: false,\n      };\n\n    case LOAD_USER_FAIL:\n      return {\n        ...state,\n        user: null,\n        authLoading: false,\n      };\n\n    case CHECK_AUTHENTICATION_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n\n    case CHECK_AUTHENTICATION_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      localStorage.setItem(\"refresh\", payload.refresh);\n      return {\n        ...state,\n        access: payload.access,\n        refresh: payload.refresh,\n        authLoading: false,\n      };\n\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n\n    case DELETE_ACCOUNT_SUCCESS:\n      return {\n        ...state,\n        deleteAccountSuccess: true,\n        authLoading: false,\n      };\n\n    case DELETE_ACCOUNT_FAIL:\n      return {\n        ...state,\n        deleteAccountSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        resetPasswordSuccess: true,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_FAIL:\n      return {\n        ...state,\n        resetPasswordSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_CONFIRM_SUCCESS:\n      return {\n        ...state,\n        resetPasswordConfirmSuccess: true,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_CONFIRM_FAIL:\n      return {\n        ...state,\n        resetPasswordConfirmSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case CHANGE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        changePasswordSuccess: true,\n        authLoading: false,\n      };\n\n    case CHANGE_PASSWORD_FAIL:\n      return {\n        ...state,\n        changePasswordSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case AUTH_LOADING:\n      return {\n        ...state,\n        authLoading: true,\n      };\n\n    case RESET_AUTH_LOADING:\n      return {\n        ...state,\n        authLoading: false,\n      };\n\n    case RESET_AUTH_ERROR_MSG:\n      return {\n        ...state,\n        authErrorMsg: \"\",\n      };\n\n    case RESET_CHANGE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        changePasswordSuccess: false,\n      };\n\n    case PROFILE_LOADING:\n      return {\n        ...state,\n        profileLoading: true,\n      };\n\n    case CHANGE_PROFILE_PIC_SUCCESS:\n      const updatedUser = { ...state.user };\n      updatedUser.profile_pic = payload;\n\n      return {\n        ...state,\n        profileLoading: false,\n        user: updatedUser,\n      };\n\n    case CHANGE_PROFILE_PIC_FAIL:\n      return {\n        ...state,\n        profileLoading: false,\n        authErrorMsg: payload,\n      };\n\n    case EDIT_BIO_SUCCESS:\n      return {\n        ...state,\n        profileLoading: false,\n        editBioSuccess: true,\n      };\n\n    case EDIT_BIO_FAIL:\n      return {\n        ...state,\n        profileLoading: false,\n        authErrorMsg: payload,\n        editBioSuccess: false,\n      };\n\n    case RESET_EDIT_BIO_SUCCESS:\n      return {\n        ...state,\n        editBioSuccess: false,\n      };\n\n    case SET_PREV_PATH:\n      return {\n        ...state,\n        prevPath: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { ROOMMATE_FORM, HOUSING_FORM, PROFILE_FORM } from '../../globalConstants';\nimport {\n  GET_QUESTIONS_SUCCESS,\n  GET_QUESTIONS_FAIL,\n  FORM_LOADING,\n  RESET_FORM_LOADING,\n  RESET_FORM_ERROR_MSG,\n} from './types'\n\nconst initialState = {\n  formLoading: false,\n  roommateQuestions: [],\n  roommateCategories: [],\n  housingQuestions: [],\n  housingCategories: [],\n  profileQuestions: [],\n  profileCategories: [],\n  formErrorMsg: '',\n}\n\nconst formReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_QUESTIONS_SUCCESS:\n      const rawCategories = payload.questions.map(question => question.category)\n      const uniqueCategories = [...new Set(rawCategories)]\n      uniqueCategories.push(\"Confirmation\")\n      if (payload.formType === ROOMMATE_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          roommateQuestions: payload.questions,\n          roommateCategories: uniqueCategories,\n        }\n      } else if (payload.formType === HOUSING_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          housingQuestions: payload.questions,\n          housingCategories: uniqueCategories,\n        }\n      } else {\n        return {\n          ...state,\n          formLoading: false,\n          profileQuestions: payload.questions,\n          profileCategories: uniqueCategories,\n        }\n      }\n\n    case GET_QUESTIONS_FAIL:\n      if (payload.formType === ROOMMATE_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          roommateQuestions: [],\n          roommateCategories: [],\n          formErrorMsg: payload.formErrorMsg,\n        }\n      } else if (payload.formType === HOUSING_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          housingQuestions: [],\n          housingCategories: [],\n          formErrorMsg: payload.formErrorMsg,\n        }\n      } else {\n        return {\n          ...state,\n          formLoading: false,\n          profileQuestions: [],\n          profileCategories: [],\n          formErrorMsg: payload.formErrorMsg,\n        }\n      }\n\n    case FORM_LOADING:\n      return {\n        ...state,\n        formLoading: true,\n      };\n\n    case RESET_FORM_LOADING:\n      return {\n        ...state,\n        formLoading: false,\n      };\n\n    case RESET_FORM_ERROR_MSG:\n      return {\n        ...state,\n        formErrorMsg: '',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default formReducer;\n","import {\n  GET_POST_LIST_SUCCESS,\n  GET_POST_LIST_FAIL,\n  GET_POST_DETAIL_SUCCESS,\n  GET_POST_DETAIL_FAIL,\n  GET_USER_POST_SUCCESS,\n  GET_USER_POST_FAIL,\n  CREATE_POST_SUCCESS,\n  CREATE_POST_FAIL,\n  EDIT_POST_SUCCESS,\n  EDIT_POST_FAIL,\n  DELETE_POST_SUCCESS,\n  DELETE_POST_FAIL,\n  POST_LOADING,\n  RESET_POST_LOADING,\n  RESET_POST_ERROR_MSG,\n  RESET_CREATE_POST_SUCCESS,\n  RESET_EDIT_POST_SUCCESS,\n  RESET_DELETE_POST_SUCCESS,\n  SEARCH_POST_SUCCESS,\n  SEARCH_POST_FAIL,\n  CANCEL_SEARCH_SUCCESS,\n  CANCEL_SEARCH_FAIL,\n} from \"./types\";\n\nconst initialState = {\n  postLoading: false,\n  posts: [],\n  postsType: [],\n  post: null,\n  userPost: [],\n  postErrorMsg: '',\n  createPostSuccess: false,\n  editPostSuccess: false,\n  deletePostSuccess: false,\n  searchPostSuccess: false,\n  cancelSearchSuccess: false,\n};\n\nconst postReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POST_LIST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        posts: payload.posts,\n        postsType: payload.formType,\n      };\n\n    case GET_POST_LIST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n      };\n\n    case GET_POST_DETAIL_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        post: payload,\n      };\n\n    case GET_POST_DETAIL_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        post: null,\n        postErrorMsg: payload,\n      }\n\n    case GET_USER_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        userPost: payload,\n      }\n\n    case GET_USER_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        userPost: null,\n        postErrorMsg: payload,\n      };\n\n    case CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        createPostSuccess: true,\n      };\n\n    case CREATE_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n        createPostSuccess: false,\n      };\n\n    case EDIT_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        editPostSuccess: true,\n      };\n\n    case EDIT_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n        editPostSuccess: false,\n      };\n\n    case DELETE_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        deletePostSuccess: true,\n      };\n\n    case DELETE_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n        deletePostFail: false,\n      };\n\n    case POST_LOADING:\n      return {\n        ...state,\n        postLoading: true,\n      };\n\n    case RESET_POST_LOADING:\n      return {\n        ...state,\n        postLoading: false,\n      };\n\n    case RESET_POST_ERROR_MSG:\n      return {\n        ...state,\n        postErrorMsg: \"\",\n      };\n\n    case RESET_CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        createPostSuccess: false,\n      };\n\n    case RESET_EDIT_POST_SUCCESS:\n      return {\n        ...state,\n        editPostSuccess: false,\n      };\n\n    case RESET_DELETE_POST_SUCCESS:\n      return {\n        ...state,\n        deletePostSuccess: false,\n      };\n\n    case SEARCH_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        searchPostSuccess: true,\n        searchedPost: payload,\n      };\n\n    case SEARCH_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n      };\n\n    case CANCEL_SEARCH_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        cancelSearchSuccess: true,\n        searchedPost: null,\n      };\n\n    case CANCEL_SEARCH_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import { combineReducers } from 'redux'\nimport authReducer from './auth/reducer'\nimport formReducer from './form/reducer'\nimport postReducer from './post/reducer'\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  post: postReducer,\n})\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'LOGOUT') {\n    state = undefined;\n  }\n  return appReducer(state, action)\n}\n\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 })\nconst middlewares = [ thunk ]\n\nconst store = createStore(\n  rootReducer, \n  composeEnhancers(applyMiddleware(...middlewares))\n)\n\nexport default store","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router'\nimport Form from '../components/Form'\nimport { getPostDetail } from '../redux/post/actions'\nimport { ROOMMATE_FORM } from '../globalConstants'\n\nconst EditForm = ({ post, getPostDetail }) => {\n  // Hooks\n  const { id } = useParams()\n  const [initialFormFields, setInitialFormFields] = useState({})\n\n  // componentDidMount\n  useEffect(() => { getPostDetail(id) }, [])\n\n  useEffect(() => {\n    const categories = post?.selected_choices\n      .map(category => category\n        .reduce((prev, curr) => ({ ...prev, [curr.question]: curr}), {})\n      )\n    const initialFormFields = Object.assign({}, categories)\n    setInitialFormFields(initialFormFields)\n  }, [post])\n\n  return (\n    <div>\n      <Form\n        formType={ROOMMATE_FORM}\n        initialFormFields={initialFormFields}\n        id={id}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n})\n\nconst mapDispatchToProps = {\n  getPostDetail,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Paper, Typography } from '@material-ui/core'\nimport {\n  ROOMMATE_FORM,\n  IRRELEVANT, A_LITTLE_IMPORTANT, SOMEWHAT_IMPORTANT, VERY_IMPORTANT, MANDATORY\n} from '../globalConstants'\nimport { loadUser } from '../redux/auth/actions'\nimport { getUserPosts, getPostList, editPost, postLoading, resetEditPostSuccess } from '../redux/post/actions'\nimport './components.css'\n\nconst Matchmaking = ({ user, userPost, posts, loadUser, getUserPosts, getPostList, editPost, postLoading, loading, resetEditPostSuccess }) => {\n\n  // States\n  const history = useHistory()\n\n  // Helper functions\n  const getScore = priorityLevel => {\n    switch (priorityLevel) {\n      case IRRELEVANT: return 0\n      case A_LITTLE_IMPORTANT: return 1\n      case SOMEWHAT_IMPORTANT: return 10\n      case VERY_IMPORTANT: return 50\n      case MANDATORY: return 250\n      default: return 0\n    }\n  }\n  const equals = (arr1, arr2) => (\n    arr1.reduce((prev, curr) => prev && arr2.includes(curr), true) && arr2.reduce((prev, curr) => prev && arr1.includes(curr), true)\n  )\n\n\n  // Handlers\n  const handleMatchmaking = () => {\n    postLoading()\n\n    // Get my post\n    const myPost = userPost[0]\n    // Get my post score list\n    var myScoreList = myPost.score_list\n    if (Array.isArray(myScoreList)) {\n      myScoreList = myScoreList\n        .reduce((prev, curr) => ({ ...prev, [curr.post]: curr }), {})\n      myScoreList = Object.assign({}, myScoreList)\n    }\n\n    for (let k = 0; k < posts.length; k++) {\n      // Get other post\n      const otherPost = posts[k]\n      // Get other post score list\n      var otherScoreList = otherPost.score_list\n      if (Array.isArray(otherScoreList)) {\n        otherScoreList = otherScoreList\n          .reduce((prev, curr) => ({ ...prev, [curr.post]: curr }), {})\n        otherScoreList = Object.assign({}, otherScoreList)\n      }\n\n      if (otherPost.owner.id !== myPost.owner.id) {\n        var myScore = 0\n        var myTotalScore = 0\n        var otherScore = 0\n        var otherTotalScore = 0\n        var numOfQuestions = 0\n\n        for (let i = 0; i < otherPost.selected_choices.length; i++) {\n          for (let j = 0; j < otherPost.selected_choices[i].length; j++) {\n            // Update my post score\n            if (otherPost.selected_choices[i][j].myChoice === myPost.selected_choices[i][j].otherChoice ||\n              Array.isArray(otherPost.selected_choices[i][j].myChoice) && equals(otherPost.selected_choices[i][j].myChoice, myPost.selected_choices[i][j].otherChoice)\n            ) myScore += getScore(myPost.selected_choices[i][j].priority)\n\n            // Update my post total score\n            myTotalScore += getScore(myPost.selected_choices[i][j].priority)\n\n            // Update other post score\n            if (myPost.selected_choices[i][j].myChoice === otherPost.selected_choices[i][j].otherChoice ||\n              Array.isArray(myPost.selected_choices[i][j].myChoice) && equals(myPost.selected_choices[i][j].myChoice, otherPost.selected_choices[i][j].otherChoice)\n            )\n              otherScore += getScore(otherPost.selected_choices[i][j].priority)\n\n            // Update other post total score\n            otherTotalScore += getScore(otherPost.selected_choices[i][j].priority)\n\n            // Update number of questions\n            numOfQuestions++\n          }\n        }\n\n        // Calculate average score\n        const averageScore = (Math.pow((myScore / myTotalScore) * (otherScore / otherTotalScore), 1 / numOfQuestions) * 100).toFixed(0)\n\n        // Update my post score list\n        myScoreList = {\n          ...myScoreList,\n          [otherPost.id]: {\n            post: otherPost.id,\n            score: averageScore,\n          }\n        }\n        // Update other post score list\n        otherScoreList = {\n          ...otherScoreList,\n          [myPost.id]: {\n            post: myPost.id,\n            score: averageScore,\n          }\n        }\n\n        // Save other post score list and total score\n        editPost(otherPost.id, otherPost.post_form_type, undefined, undefined, otherScoreList, otherTotalScore)\n      }\n    }\n    // Save my post score list and total score\n    editPost(myPost.id, myPost.post_form_type, undefined, undefined, myScoreList, myTotalScore)\n  }\n  const handleClose = () => {\n    resetEditPostSuccess()\n    history.push('/roommates')\n}\n\n  // componentDidMount\n  useEffect(() => { getPostList(ROOMMATE_FORM) }, [])\n  useEffect(() => user ? getUserPosts(user.id) : null, [user])\n  useEffect(() => userPost.length > 0 ? handleMatchmaking() : null, [userPost])\n\n  return (\n    <Paper style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20 }}>\n      {/* <div id=\"heart\" /> */}\n      {loading\n        ?\n        <Typography variant=\"h6\">Matching the perfect roommate for you...</Typography>\n        :\n        <>\n          <Typography gutterBottom variant=\"h6\">Matching completed</Typography>\n          <Button autoFocus variant=\"contained\" color=\"primary\" onClick={handleClose}>Return to roommate dashboard</Button>\n        </>}\n    </Paper>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  userPost: state.post.userPost,\n  posts: state.post.posts,\n  loading: state.post.postLoading,\n})\n\nconst mapDispatchToProps = {\n  loadUser,\n  getUserPosts,\n  getPostList,\n  editPost,\n  postLoading: () => (dispatch) => dispatch(postLoading()),\n  resetEditPostSuccess,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Matchmaking)\n\n// preliminaries \n// https://www.youtube.com/watch?v=m9PiPlRuy6E&t=304s\n\n//  (only for roommates post, in profile form its empty )\n// radiogroup for importance of each question, value stored in selected_choices\n// theres a score_list, total_score field in post model\n\n// assume only 1 post per user first \n\n\n\n\n// algo\n// get current_post.selected_choices (posts)\n// get current_post.owner.selected_choices (profile)\n\n// get other_post.selected_choices (posts)\n// get other_post.owner.selected_choices (profile)\n\n// n = 0\n\n// loop through length of selected_choices (posts), at every iteration:\n//     get score1 of current_post.choice, add to current_post.total_score (if dh)\n//     get score2 of other_post.choice, add to other_post.total_score (if dh)\n\n//     if current_post.choice === other_post.owner.choice:\n//         other_post.obtained_score += score1\n\n//     if current_post.owner.choice === other_post.choice:\n//         current_post.obtained_score += score2\n\n//     n += 1\n\n\n// percentage of other_post matching current_post = other_post.obtained_score / current_post.total_score \n// percentage of current_post matching other_post = current_post.obtained_score / other_post.total_score \n\n// matching percentage = nth root of 2 percentages\n\n// add to score_list of both posts:\n//     in other_post -> \"current_post.owner.id\":\"matching percentage\"\n//     in current_post -> \"other_post.owner.id\":\"matching percentage\"\n\n\n\n\n\n\n// displaying \n// at each post, if current user.id === score_list key, display matching percentage\n\n\n\n","import React from 'react'\nimport { BrowserRouter, Switch, useLocation } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { indigo } from '@material-ui/core/colors'\nimport Activate from './pages/Activate'\nimport Dashboard from './pages/Dashboard'\nimport Home from './pages/Home'\nimport Housings from './pages/Housings'\nimport Login from './pages/Login'\nimport Profile from './pages/Profile'\nimport Register from './pages/Register'\nimport ChangePassword from './pages/ChangePassword'\nimport DeleteAccount from './pages/DeleteAccount'\nimport ResendActivationEmail from './pages/ResendActivationEmail'\nimport ResetPassword from './pages/ResetPassword'\nimport ResetPasswordConfirm from './pages/ResetPasswordConfirm'\nimport RoommateDetail from './pages/RoommateDetail'\nimport RoommateForm from './pages/RoommateForm'\nimport ProfileForm from './pages/ProfileForm'\nimport HousingForm from './pages/HousingForm'\nimport Roommates from './pages/Roommates'\nimport LayoutTwo from './layout/LayoutTwo'\nimport LayoutOne from './layout/LayoutOne'\nimport RouteWrapper from './layout/RouteWrapper'\nimport Layout from './hocs/Layout'\nimport store from './redux/store'\nimport EditForm from './pages/EditForm'\nimport Matchmaking from './components/Matchmaking'\n\nconst App = () => {\n  // Styling\n  const theme = createMuiTheme({\n    palette: {\n      primary: indigo,\n    },\n  });\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Layout>\n            <Switch>\n              {/* Routes with LayoutOne */}\n              <RouteWrapper path=\"/login\" title={\"Login\"} component={Login} layout={LayoutOne} />\n              <RouteWrapper path=\"/delete-account\" title={\"Delete Account\"} component={DeleteAccount} layout={LayoutOne} />\n              <RouteWrapper path=\"/register\" title={\"Registration\"} component={Register} layout={LayoutOne} />\n              <RouteWrapper path=\"/change-password\" title={\"Change Password\"} component={ChangePassword} layout={LayoutOne} />\n              <RouteWrapper path=\"/reset-password\" title={\"Reset Password\"} component={ResetPassword} layout={LayoutOne} />\n              <RouteWrapper\n                path=\"/password/reset/confirm/:uid/:token\"\n                title={\"Reset Password\"}\n                component={ResetPasswordConfirm}\n                layout={LayoutOne} />\n              <RouteWrapper path=\"/activate/:uid/:token\" title={\"Account Activation\"} component={Activate} layout={LayoutOne} />\n              <RouteWrapper path=\"/resend-activation-email\" title={\"Resend Activation Email\"} component={ResendActivationEmail} layout={LayoutOne} />\n\n              {/* Routes with LayoutTwo */}\n              <RouteWrapper exact path=\"/\" component={Home} layout={LayoutTwo} />\n              <RouteWrapper exact path=\"/dashboard\" component={Dashboard} layout={LayoutTwo} />\n              <RouteWrapper path=\"/housings\" component={Housings} layout={LayoutTwo} />\n              <RouteWrapper exact path=\"/roommates\" component={Roommates} layout={LayoutTwo} />\n              <RouteWrapper path=\"/roommates/:id\" component={RoommateDetail} layout={LayoutTwo} />\n              <RouteWrapper path=\"/roommate-form\" component={RoommateForm} layout={LayoutTwo} />\n              <RouteWrapper path=\"/edit-profile\" component={ProfileForm} layout={LayoutTwo} />\n              <RouteWrapper path=\"/housing-form\" component={HousingForm} layout={LayoutTwo} />\n              <RouteWrapper path=\"/edit-form/:id\" component={EditForm} layout={LayoutTwo} />\n              <RouteWrapper path=\"/profile\" component={Profile} layout={LayoutTwo} />\n              <RouteWrapper path=\"/matchmaking\" component={Matchmaking} layout={LayoutTwo} />\n              <RouteWrapper path=\"*\" component={Home} layout={LayoutTwo} />\n            </Switch>\n          </Layout>\n        </BrowserRouter>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n\n// import React, { useEffect, useLocalStorage, useMedia } from \"react\";\n// import Button from \"@material-ui/core/Button\";\n// import useDarkMode from './useDarkMode'\n\n// // Usage\n// function App() {\n//   const [darkMode, setDarkMode] = useDarkMode();\n//   return (\n//     <div>\n//       <div className=\"navbar\">\n//         <Button darkMode={darkMode} setDarkMode={setDarkMode} />\n//       </div>\n//       {/* <Content /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}