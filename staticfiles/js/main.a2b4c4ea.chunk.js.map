{"version":3,"sources":["redux/auth/types.js","redux/auth/actions.js","pages/Activate.js","pages/Dashboard.js","globalConstants.js","redux/post/types.js","redux/post/actions.js","redux/chat/types.js","redux/chat/actions.js","components/ProfileComponent.js","components/Footer.js","static/housemates-logo-without-text-black.svg","static/home.jpg","static/mates.jpg","static/house.jpg","static/chat.png","components/Confirmation.js","components/RoommateCard.js","components/HousingCard.js","static/housing.jpg","pages/Home.js","pages/Housings.js","pages/Login.js","static/roommates-button.png","static/roommate-matchmake.png","static/dashboard.png","static/housing2.jfif","pages/UserGuide.js","pages/Profile.js","pages/Register.js","pages/ChangePassword.js","pages/DeleteAccount.js","pages/ResendActivationEmail.js","pages/ResetPassword.js","pages/ResetPasswordConfirm.js","redux/form/types.js","redux/form/actions.js","pages/RoommateDetail.js","pages/RoommateForm.js","pages/HousingForm.js","pages/Roommates.js","components/SideNav.js","static/housemates-logo-without-text-white.svg","components/NavBar.js","layout/LayoutTwo.js","static/housemates-logo-with-text-black.svg","layout/LayoutOne.js","layout/RouteWrapper.js","hocs/Layout.js","redux/auth/reducer.js","redux/form/reducer.js","redux/post/reducer.js","redux/chat/reducer.js","redux/rootReducer.js","redux/store.js","components/Matchmaking.js","pages/EditHousingForm.js","components/ImageGallery.js","pages/HousingDetail.js","pages/EditRoommateForm.js","components/ChatListItem.js","components/ChatMessage.js","pages/Chat.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","ACTIVATE_SUCCESS","ACTIVATE_FAIL","RESEND_ACTIVATION_EMAIL_SUCCESS","RESEND_ACTIVATION_EMAIL_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","CHECK_AUTHENTICATION_SUCCESS","CHECK_AUTHENTICATION_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","DELETE_ACCOUNT_SUCCESS","DELETE_ACCOUNT_FAIL","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","RESET_PASSWORD_CONFIRM_SUCCESS","RESET_PASSWORD_CONFIRM_FAIL","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAIL","AUTH_LOADING","RESET_AUTH_LOADING","PROFILE_LOADING","RESET_AUTH_ERROR_MSG","RESET_CHANGE_PASSWORD_SUCCESS","RESET_EDIT_BIO_SUCCESS","RESET_EDIT_FAVOURITES_SUCCESS","CHANGE_PROFILE_PIC_SUCCESS","CHANGE_PROFILE_PIC_FAIL","EDIT_BIO_SUCCESS","EDIT_BIO_FAIL","EDIT_FAVOURITES_SUCCESS","EDIT_FAVOURITES_FAIL","SET_PREV_PATH","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","SET_JUST_REGISTERED_SUCCESS","SET_JUST_REGISTERED_FAIL","axios","defaults","xsrfCookieName","xsrfHeaderName","incorrectPasswordErrorMsg","unableToDeleteAccountErrorMsg","unableToResetPasswordErrorMsg","newPasswordTooWeakErrorMsg","loadUser","dispatch","a","authLoading","token","localStorage","getItem","config","headers","Authorization","Accept","get","res","loadUserSuccess","data","loadUserFail","checkAuthentication","body","JSON","stringify","post","code","checkAuthenticationSuccess","checkAuthenticationFail","registerSuccess","type","registerFail","authErrorMsg","payload","activateSuccess","activateFail","resendActivationEmailSuccess","resendActivationEmailFail","user","loginSuccess","tokens","loginFail","deleteAccountSuccess","deleteAccountFail","resetPasswordSuccess","resetPasswordFail","resetPasswordConfirmSuccess","resetPasswordConfirmFail","changePasswordSuccess","changePasswordFail","profileLoading","changeProfilePicSuccess","picture","changeProfilePicFail","editBioSuccess","editBioFail","editFavouritesSuccess","editFavouritesFail","editJustRegisteredSuccess","just_registered","editJustRegisteredFail","err","mapDispatchToProps","activate","uid","response","connect","state","auth","activationSuccess","classes","makeStyles","theme","paper","display","flexDirection","alignItems","button","margin","spacing","useStyles","history","useHistory","useParams","Container","maxWidth","className","onSubmit","e","preventDefault","push","Typography","variant","noWrap","style","textAlign","Button","autoFocus","fullWidth","color","disabled","Grid","container","justify","item","to","Dashboard","SINGLE_CHOICE","MULTIPLE_CHOICE","PRIORITY","SELF","OTHER","MY_POSTS","ALL_POSTS","GET_POST_LIST_SUCCESS","GET_POST_LIST_FAIL","GET_POST_DETAIL_SUCCESS","GET_POST_DETAIL_FAIL","GET_USER_POSTS_SUCCESS","GET_USER_POSTS_FAIL","CREATE_POST_SUCCESS","CREATE_POST_FAIL","EDIT_POST_SUCCESS","EDIT_POST_FAIL","DELETE_POST_SUCCESS","DELETE_POST_FAIL","POST_LOADING","RESET_POST_LOADING","RESET_POST_ERROR_MSG","RESET_CREATE_POST_SUCCESS","RESET_EDIT_POST_SUCCESS","RESET_DELETE_POST_SUCCESS","SEARCH_POST_SUCCESS","SEARCH_POST_FAIL","CANCEL_SEARCH_SUCCESS","CANCEL_SEARCH_FAIL","SET_PAGE","SET_FILTER","s3config","bucketName","dirName","region","accessKeyId","secretAccessKey","createPostErrorMsg","editPostErrorMsg","getPostList","page","postLoading","undefined","getPostListSuccess","getPostListFail","getPostDetail","id","getPostDetailSuccess","getPostDetailFail","getUserPosts","owner","getUserPostsSuccess","getUserPostsFail","createPost","post_form_type","selected_choices","images","Array","from","length","keys","forEach","i","S3FileUpload","uploadFile","then","location","createPostSuccess","createPostFail","editPost","score_list","total_score","put","editPostSuccess","editPostFail","deletePost","delete","deletePostSuccess","deletePostFail","searchPost","formType","searchItems","searchQuery","join","searchPostSuccess","searchPostFail","resdata","postErrorMsg","userPosts","resetCreatePostSuccess","resetEditPostSuccess","resetDeletePostSuccess","searchedPost","searchItem","searchPostErrorMsg","cancelSearchSuccess","cancelSearchFail","cancelSearchErrorMsg","setPage","setFilter","filter","GET_ROOM_LIST_SUCCESS","GET_ROOM_LIST_FAIL","CHECK_CHAT_HISTORY_SUCCESS","CHECK_CHAT_HISTORY_FAIL","GET_ROOM_DETAIL_SUCCESS","GET_ROOM_DETAIL_FAIL","POST_ROOM_LIST_SUCCESS","POST_ROOM_LIST_FAIL","EDIT_MSG_SUCCESS","EDIT_MSG_FAIL","SET_CHAT_USER","RESET_CHAT_HISTORY","getRoomList","getRoomListSuccess","getRoomListFail","checkChatHistorySuccess","checkChatHistoryFail","postRoomSuccess","postRoomFail","editMsgSuccess","editMsgFail","setChatUser","chatUser","name","desc","pic","scoreList","unreadMsgs","onClick","textDecoration","Card","CardMedia","image","title","width","CardActionArea","CardContent","justifyContent","Chip","label","score","size","height","backgroundColor","borderRadius","substring","Footer","align","Date","getFullYear","open","confirmationText","thankYouText","success","handleCancel","handleSubmit","handleClose","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","marginTop","marginBottom","userRoommatePosts","card","cursor","alignSelf","media","tag","marginRight","text","edit","float","icon","useState","setOpen","priorityChoices","useEffect","Tooltip","IconButton","profile_pic","first_name","last_name","map","userPost","bio","gutterBottom","categories","topThreeTags","j","k","priority","isArray","otherChoice","h","getTopThreeTags","editFavourites","favourites","patch","resetEditFavouritesSuccess","position","content","flex","right","red","white","clsx","includes","splice","indexOf","choice","facility","index","posts","housingPosts","palette","primary","main","handleSeeMore","Paper","padding","xs","alt","src","Pic","opacity","Logo","Mates","slice","md","lg","House","Chat","userHousingPosts","count","userHousingPostsCount","searchedPostCount","tooltip","bottom","grid","anchorRef","useRef","handleMyPosts","handleAllPosts","handleFilter","postToRender","countToRender","marginLeft","ref","startIcon","Popper","anchorEl","current","role","transition","disablePortal","placement","zIndex","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","MenuItem","Box","Pagination","Math","ceil","onChange","event","value","window","scroll","Fab","login","email","password","isAuthenticated","submit","useLocation","setEmail","setPassword","account","emailError","setEmailError","passwordError","setPasswordError","setAccountError","continueWithGoogle","process","replace","authorization_url","noValidate","TextField","required","target","error","helperText","Transition","React","forwardRef","props","Slide","direction","UserGuide","editJustRegistered","currentCount","setCurrentCount","Media","border","allTexts","dashboardPic","roommateAddPic","roommateResultsPic","chatPic","housingPic","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogContentText","changeProfilePic","catch","console","log","editBio","resetEditBioSuccess","housingPost","roomList","chat","avatar","fileInput","editBioTextFieldOpen","setEditBioTextFieldOpen","setBio","topThreeRoommatesId","setTopThreeRoommatesId","topThreeRoommates","setTopThreeRoommates","starredHousings","setStarredHousings","newMsgs","setNewMsgs","sortedScoreList","Object","values","sort","b","temp","room","messages","reduce","prev","curr","hasRead","user_id","toString","minWidth","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","click","Avatar","accept","files","handleUpload","mb","placeholder","defaultValue","multiline","rows","owner1","owner2","message","register","re_password","registrationSuccess","lastName","setLastName","firstName","setFirstName","confirmPassword","setConfirmPassword","lastNameError","setLastNameError","firstNameError","setFirstNameError","confirmPasswordError","setConfirmPasswordError","samePasswordError","setSamePasswordError","sm","changePassword","current_password","new_password","re_new_password","resetChangePasswordSuccess","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","currentPasswordError","setCurrentPasswordError","newPasswordError","setNewPasswordError","confirmNewPasswordError","setConfirmNewPasswordError","go","deleteAccount","request","buttons","resendActivationEmail","resetPassword","resetPasswordConfirm","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAIL","FORM_LOADING","RESET_FORM_LOADING","RESET_FORM_ERROR_MSG","getQuestions","formLoading","getQuestionsSuccess","getQuestionsFail","questions","formErrorMsg","roommateCategories","form","prevPath","category","CardHeader","question","roommateQuestions","initialFormFields","paddingBottom","active","background","action","hover","formFields","setFormFields","currentCategory","setCurrentCategory","maxCategory","setMaxCategory","categoryCompleted","setCategoryCompleted","handleBack","scrollTo","handleStep","handleChange","selfOther","myChoice","allCompleted","SingleChoiceQuestion","question_text","FormControl","FormLabel","RadioGroup","choice_set","FormControlLabel","control","Radio","MultipleChoiceQuestion","FormGroup","Checkbox","checked","stepper","Stepper","nonLinear","alternativeLabel","activeStep","Step","StepButton","completed","summary","categoryIndex","question_type","questionsBasedOnCategory","newCategoryCompleted","confirmationDialog","userObj","TextQuestion","FileQuestion","handleCapture","multiple","housingQuestions","housingCategories","profileQuestions","profileCategories","selectedFile","setSelectedFile","file","SelectQuestion","Select","userRoommatePostsCount","drawerWidth","menuOpen","hoverOpen","drawerOpen","handleMouseEnter","handleMouseLeave","drawer","flexShrink","whiteSpace","transitions","create","easing","sharp","duration","enteringScreen","drawerOpenDelay","transitionDelay","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","minHeight","mixins","hidden","path","private","Drawer","onMouseEnter","onMouseLeave","List","ListItem","pathname","ListItemIcon","ListItemText","logout","cancelSearch","handleMenuButton","setTheme","appBar","paddingLeft","menuButton","logo","grow","flexGrow","search","shape","fade","common","searchIcon","pointerEvents","inputRoot","inputInput","profilePic","pointer","setData","handleMenuClose","handleProfile","handleLogout","handleClick","AppBar","Toolbar","aria-label","edge","newValue","onRequestSearch","onCancelSearch","cancelOnEscape","closeIcon","input","children","root","closeSize","openSize","setMenuOpen","setHoverOpen","elevation","RouteWrapper","Component","component","Layout","layout","rest","render","resetAuthErrorMsg","resetFormErrorMsg","resetPostErrorMsg","setPrevPath","googleAuthenticate","details","formBody","key","encodeURIComponent","reason","queryString","parse","Snackbar","onClose","classList","remove","onFocus","outline","add","onBlur","severity","initialState","access","refresh","authReducer","setItem","removeItem","updatedUser","updatedUser2","formReducer","rawCategories","uniqueCategories","Set","postsType","next","previous","postReducer","results","searchedItem","chatErrorMsg","chatHistory","chatReducer","appReducer","combineReducers","rootReducer","composeEnhancers","composeWithDevTools","trace","traceLimit","middlewares","thunk","store","createStore","applyMiddleware","loading","allPosts","setAllPosts","getScore","priorityLevel","myScore","myTotalScore","otherScore","otherTotalScore","numOfQuestions","myPost","myScoreList","assign","otherPost","otherScoreList","same","total","averageScore","pow","toFixed","handleMatchmaking","setInitialFormFields","AutoPlaySwipeableViews","autoPlay","SwipeableViews","ImageGallery","tutorialSteps","img","overflow","setActiveStep","maxSteps","axis","onChangeIndex","step","enableMouseEvents","abs","MobileStepper","steps","nextButton","prevActiveStep","backButton","ChatListItem","msg","time","animationDelay","setRoom","editMsg","enter","setEnter","ButtonBase","ListItemAvatar","split","ChatMessage","grey","textOverflow","blue","postRoom","user1","user2","checkChatHistory","resetChatHistory","list","setMessages","activeRoom","setActiveRoom","client","setClient","msgText","setMsgText","roomListByLabel","setRoomListByLabel","textInput","ws_scheme","protocol","host","W3CWebSocket","onopen","onmessage","dataFromServer","chatBody","document","getElementById","scrollHeight","focus","shortName","uniqueNamesGenerator","dictionaries","colors","adjectives","animals","dense","timestamp","paddingRight","send","inputRef","App","light","createMuiTheme","indigo","default","dark","appliedTheme","ThemeProvider","CssBaseline","Login","LayoutOne","DeleteAccount","Register","ChangePassword","ResetPassword","ResetPasswordConfirm","Activate","ResendActivationEmail","exact","LayoutTwo","Housings","HousingDetail","Roommates","RoommateDetail","RoommateForm","HousingForm","EditRoommateForm","EditHousingForm","Profile","Matchmaking","Home","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a2b4c4ea.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\n\nexport const ACTIVATE_SUCCESS = 'ACTIVATE_SUCCESS'\nexport const ACTIVATE_FAIL = 'ACTIVATE_FAIL'\n\nexport const RESEND_ACTIVATION_EMAIL_SUCCESS = 'RESEND_ACTIVATION_EMAIL_SUCCESS'\nexport const RESEND_ACTIVATION_EMAIL_FAIL = 'RESEND_ACTIVATION_EMAIL_FAIL'\n\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const CHECK_AUTHENTICATION_SUCCESS = 'CHECK_AUTHENTICATION_SUCCESS'\nexport const CHECK_AUTHENTICATION_FAIL = 'CHECK_AUTHENTICATION_FAIL'\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const LOGOUT = 'LOGOUT'\n\nexport const DELETE_ACCOUNT_SUCCESS = 'DELETE_ACCOUNT_SUCCESS'\nexport const DELETE_ACCOUNT_FAIL = 'DELETE_ACCOUNT_FAIL'\n\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL'\n\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS'\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL'\n\nexport const CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS'\nexport const CHANGE_PASSWORD_FAIL = 'CHANGE_PASSWORD_FAIL'\n\nexport const AUTH_LOADING = 'AUTH_LOADING'\nexport const RESET_AUTH_LOADING = 'RESET_AUTH_LOADING'\n\nexport const PROFILE_LOADING = 'PROFILE_LOADING'\n\nexport const RESET_AUTH_ERROR_MSG = 'RESET_AUTH_ERROR_MSG'\n\nexport const RESET_CHANGE_PASSWORD_SUCCESS = 'RESET_CHANGE_PASSWORD_SUCCESS'\nexport const RESET_EDIT_BIO_SUCCESS = 'RESET_EDIT_BIO_SUCCESS'\nexport const RESET_EDIT_FAVOURITES_SUCCESS = 'RESET_EDIT_FAVOURITES_SUCCESS'\n\nexport const CHANGE_PROFILE_PIC_SUCCESS = 'CHANGE_PROFILE_PIC_SUCCESS'\nexport const CHANGE_PROFILE_PIC_FAIL = 'CHANGE_PROFILE_PIC_FAIL'\n\nexport const EDIT_BIO_SUCCESS = 'EDIT_BIO_SUCCESS'\nexport const EDIT_BIO_FAIL = 'EDIT_BIO_FAIL'\n\nexport const EDIT_FAVOURITES_SUCCESS = 'EDIT_FAVOURITES_SUCCESS'\nexport const EDIT_FAVOURITES_FAIL = 'EDIT_FAVOURITES_FAIL'\n\nexport const SET_PREV_PATH = 'SET_PREV_PATH'\n\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n\nexport const SET_JUST_REGISTERED_SUCCESS = 'SET_JUST_REGISTERED_SUCCESS'\nexport const SET_JUST_REGISTERED_FAIL = 'SET_JUST_REGISTERED_FAIL'\n","import axios from \"axios\";\nimport S3FileUpload from \"react-s3\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  ACTIVATE_SUCCESS,\n  ACTIVATE_FAIL,\n  RESEND_ACTIVATION_EMAIL_FAIL,\n  RESEND_ACTIVATION_EMAIL_SUCCESS,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  CHECK_AUTHENTICATION_SUCCESS,\n  CHECK_AUTHENTICATION_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  DELETE_ACCOUNT_SUCCESS,\n  DELETE_ACCOUNT_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAIL,\n  AUTH_LOADING,\n  PROFILE_LOADING,\n  RESET_AUTH_LOADING,\n  RESET_AUTH_ERROR_MSG,\n  RESET_CHANGE_PASSWORD_SUCCESS,\n  RESET_EDIT_BIO_SUCCESS,\n  RESET_EDIT_FAVOURITES_SUCCESS,\n  CHANGE_PROFILE_PIC_SUCCESS,\n  CHANGE_PROFILE_PIC_FAIL,\n  EDIT_BIO_SUCCESS,\n  EDIT_BIO_FAIL,\n  EDIT_FAVOURITES_SUCCESS,\n  EDIT_FAVOURITES_FAIL,\n  SET_PREV_PATH,\n  GOOGLE_AUTH_SUCCESS,\n  GOOGLE_AUTH_FAIL,\n  SET_JUST_REGISTERED_SUCCESS,\n  SET_JUST_REGISTERED_FAIL,\n} from \"./types\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n// Error messages\n// Register\nconst unableToRegisterErrorMsg = \"Unable to register\";\nconst userAldExistsErrorMsg = \"User already exists\";\nconst passwordTooWeakErrorMsg = \"Password too weak\";\n\n// Activate\nconst unableToActivateErrorMsg = \"Unable to activate account\";\nconst expiredActivationTokenErrorMsg = \"Expired activation token\";\n\n// Resend activation email\nconst userDoesNotExistResendActivationEmailErrorMsg =\n  \"User does not exists or user has already successfully activated account\";\n\n// Login\nconst incorrectPasswordErrorMsg = \"Incorrect password\";\n\n// Delete account\nconst unableToDeleteAccountErrorMsg = \"Unable to delete account\";\n\n// Reset password\nconst unableToResetPasswordErrorMsg = \"Unable to reset passowrd\";\nconst userDoesNotExistResetPasswordErrorMsg = \"User does not exist\";\n\n// Reset password confirm\nconst expiredResetPasswordTokenErrorMsg = \"Expired reset password token\";\n\n// Change password\nconst changePasswordFailErrorMsg = \"Unable to change password\";\nconst incorrectCurrentPasswordErrorMsg = \"Incorrect current password\";\nconst newPasswordTooWeakErrorMsg = \"New password too weak\";\n\n// Change profile pic\nconst changeProfilePicFailErrorMsg = \"Unable to change profile pic\";\n\n// Edit bio\nconst editBioFailErrorMsg = \"Unable to edit bio\";\nconst bioCannotBeEmptyErrorMsg = \"Bio cannot be empty\";\n\n// Edit favourites\nconst editFavouritesFailErrorMsg = \"Unable to edit favourites\";\n\n// Async Action Creators\n// Register\nexport const register =\n  (first_name, last_name, email, password, re_password) => async (dispatch) => {\n    // Loading\n    dispatch(authLoading());\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({\n      first_name,\n      last_name,\n      email,\n      password,\n      re_password,\n    });\n\n    // Post request\n    try {\n      await axios.post(`/auth/users/`, body, config);\n      dispatch(registerSuccess());\n    } catch (err) {\n      if (err.response.data.password) {\n        dispatch(registerFail(passwordTooWeakErrorMsg));\n      } else if (err.response.data.email) {\n        dispatch(registerFail(userAldExistsErrorMsg));\n      } else {\n        dispatch(registerFail(unableToRegisterErrorMsg));\n      }\n    }\n  };\n\n// Activate\nexport const activate = (uid, token) => async (dispatch) => {\n  // Loading\n  dispatch(authLoading());\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ uid, token });\n\n  // Post request\n  try {\n    await axios.post(`/auth/users/activation/`, body, config);\n    dispatch(activateSuccess());\n  } catch (err) {\n    if (err.response.data.uid || err.response.data.token) {\n      dispatch(activateFail(expiredActivationTokenErrorMsg));\n    } else {\n      dispatch(activateFail(unableToActivateErrorMsg));\n    }\n  }\n};\n\n// Resend activation email\nexport const resendActivationEmail = (email) => async (dispatch) => {\n  // Loading\n  dispatch(authLoading());\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email });\n\n  // Post request\n  try {\n    await axios.post(`/auth/users/resend_activation/`, body, config);\n    dispatch(resendActivationEmailSuccess());\n  } catch (err) {\n    dispatch(\n      resendActivationEmailFail(userDoesNotExistResendActivationEmailErrorMsg)\n    );\n  }\n};\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n  // Loading\n  dispatch(authLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  if (token) {\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    // Get request\n    try {\n      const res = await axios.get(`/auth/users/me/`, config);\n      dispatch(loadUserSuccess(res.data));\n    } catch (err) {\n      dispatch(loadUserFail());\n    }\n  } else {\n    dispatch(loadUserFail());\n  }\n};\n\nexport const googleAuthenticate = (state, code) => async (dispatch) => {\n  if (state && code && !localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        (key) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(details[key])\n      )\n      .join(\"&\");\n\n    try {\n      const res = await axios.post(\n        `/auth/o/google-oauth2/?${formBody}`,\n        config\n      );\n\n      dispatch({\n        type: GOOGLE_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(loadUser());\n    } catch (err) {\n      dispatch({\n        type: GOOGLE_AUTH_FAIL,\n      });\n    }\n  }\n};\n\n// Check authentication\nexport const checkAuthentication = () => async (dispatch) => {\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  if (token) {\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n    const body = JSON.stringify({ token });\n\n    // Post request\n    try {\n      const res = await axios.post(`/auth/jwt/verify/`, body, config);\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch(checkAuthenticationSuccess());\n        dispatch(loadUser());\n      } else {\n        dispatch(checkAuthenticationFail());\n      }\n    } catch (err) {\n      dispatch(checkAuthenticationFail());\n    }\n  } else {\n    dispatch(checkAuthenticationFail());\n  }\n};\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  // Loading\n  dispatch(authLoading());\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email, password });\n\n  // Post request\n  try {\n    const res = await axios.post(`/auth/jwt/create/`, body, config);\n    dispatch(loginSuccess(res.data));\n    dispatch(checkAuthentication());\n  } catch (err) {\n    dispatch(loginFail(incorrectPasswordErrorMsg));\n  }\n};\n\n// Delete account\nexport const deleteAccount = (current_password) => async (dispatch) => {\n  // Loading\n  dispatch(authLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  if (token) {\n    // Draft request\n    const request = {\n      data: JSON.stringify({ current_password }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n\n    // Delete request\n    try {\n      await axios.delete(`/auth/users/me/`, request);\n      dispatch(deleteAccountSuccess());\n    } catch (err) {\n      if (err.response.data.current_password) {\n        dispatch(deleteAccountFail(incorrectPasswordErrorMsg));\n      } else {\n        dispatch(deleteAccountFail(unableToDeleteAccountErrorMsg));\n      }\n    }\n  } else {\n    dispatch(deleteAccountFail(unableToDeleteAccountErrorMsg));\n  }\n};\n\n// Reset password\nexport const resetPassword = (email) => async (dispatch) => {\n  // Loading\n  dispatch(authLoading());\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email });\n\n  // Post request\n  try {\n    await axios.post(`/auth/users/reset_password/`, body, config);\n    dispatch(resetPasswordSuccess());\n  } catch (err) {\n    if (err.response.data) {\n      dispatch(resetPasswordFail(userDoesNotExistResetPasswordErrorMsg));\n    } else {\n      dispatch(resetPasswordFail(unableToResetPasswordErrorMsg));\n    }\n  }\n};\n\n// Reset password confirm\nexport const resetPasswordConfirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    // Loading\n    dispatch(authLoading());\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    // Post request\n    try {\n      await axios.post(`/auth/users/reset_password_confirm/`, body, config);\n      dispatch(resetPasswordConfirmSuccess());\n    } catch (err) {\n      if (err.response.data.uid || err.response.data.token) {\n        dispatch(resetPasswordConfirmFail(expiredResetPasswordTokenErrorMsg));\n      } else if (err.response.data.new_password) {\n        dispatch(resetPasswordFail(newPasswordTooWeakErrorMsg));\n      } else {\n        dispatch(resetPasswordConfirmFail(unableToResetPasswordErrorMsg));\n      }\n    }\n  };\n\n// Change password\nexport const changePassword =\n  (current_password, new_password, re_new_password) => async (dispatch) => {\n    // Loading\n    dispatch(authLoading());\n\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n    const body = JSON.stringify({\n      current_password,\n      new_password,\n      re_new_password,\n    });\n\n    // Post request\n    try {\n      await axios.post(`/auth/users/set_password/`, body, config);\n      dispatch(changePasswordSuccess());\n    } catch (err) {\n      if (err.response.data.current_password) {\n        dispatch(changePasswordFail(incorrectCurrentPasswordErrorMsg));\n      } else if (err.response.data.new_password) {\n        dispatch(changePasswordFail(newPasswordTooWeakErrorMsg));\n      } else {\n        dispatch(changePasswordFail(changePasswordFailErrorMsg));\n      }\n    }\n  };\n\n// Change Profile Picture\nexport const changeProfilePic =\n  (first_name, last_name, id, picture) => async (dispatch) => {\n    // Loading\n    dispatch(profileLoading());\n\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    const s3config = {\n      bucketName: \"housematesorbital\",\n      dirName: \"images\",\n      region: \"us-east-2\",\n      accessKeyId: \"AKIA2VQMUMOWCECPYUOU\",\n      secretAccessKey: \"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\",\n    };\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n\n    // Patch request\n    let body;\n    let profile_pic;\n    try {\n      S3FileUpload.uploadFile(picture, s3config)\n        .then((data) => {\n          profile_pic = data.location;\n          body = JSON.stringify({ first_name, last_name, profile_pic });\n        })\n        .then(async () => {\n          await axios.patch(`/accounts/profiles/${id}/`, body, config);\n          dispatch(changeProfilePicSuccess(profile_pic));\n        })\n        .catch(err => console.log(err));\n    } catch (err) {\n      dispatch(changeProfilePicFail(changeProfilePicFailErrorMsg));\n    }\n  };\n\n// Edit bio\nexport const editBio = (first_name, last_name, id, bio) => async (dispatch) => {\n  // Loading\n  dispatch(profileLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${token}`,\n    },\n  };\n  const body = JSON.stringify({ first_name, last_name, bio });\n\n  // Put request\n  try {\n    await axios.patch(`/accounts/profiles/${id}/`, body, config);\n    dispatch(editBioSuccess());\n  } catch (err) {\n    if (err.response.data.bio) {\n      dispatch(editBioFail(bioCannotBeEmptyErrorMsg));\n    } else {\n      dispatch(editBioFail(editBioFailErrorMsg));\n    }\n  }\n};\n\n// Edit favourites\nexport const editFavourites =\n  (first_name, last_name, id, favourites) => async (dispatch) => {\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n    const body = JSON.stringify({ first_name, last_name, favourites });\n\n    // Put request\n    try {\n      await axios.patch(`/accounts/profiles/${id}/`, body, config);\n      dispatch(editFavouritesSuccess());\n    } catch (err) {\n      dispatch(editFavouritesFail(editFavouritesFailErrorMsg));\n    }\n  };\n\n// Edit favourites\nexport const editJustRegistered =\n  (first_name, last_name, id, just_registered) => async (dispatch) => {\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n    const body = JSON.stringify({ first_name, last_name, just_registered });\n\n    // Put request\n    try {\n      await axios.patch(`/accounts/profiles/${id}/`, body, config);\n      dispatch(editJustRegisteredSuccess(just_registered));\n    } catch (err) {\n      dispatch(editJustRegisteredFail(err));\n    }\n  };\n\n// Action Creators\nexport const registerSuccess = () => ({ type: REGISTER_SUCCESS });\nexport const registerFail = (authErrorMsg) => ({\n  type: REGISTER_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const activateSuccess = () => ({ type: ACTIVATE_SUCCESS });\nexport const activateFail = (authErrorMsg) => ({\n  type: ACTIVATE_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const resendActivationEmailSuccess = () => ({\n  type: RESEND_ACTIVATION_EMAIL_SUCCESS,\n});\nexport const resendActivationEmailFail = (authErrorMsg) => ({\n  type: RESEND_ACTIVATION_EMAIL_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const loadUserSuccess = (user) => ({\n  type: LOAD_USER_SUCCESS,\n  payload: user,\n});\nexport const loadUserFail = () => ({ type: LOAD_USER_FAIL });\n\nexport const checkAuthenticationSuccess = () => ({\n  type: CHECK_AUTHENTICATION_SUCCESS,\n});\nexport const checkAuthenticationFail = () => ({\n  type: CHECK_AUTHENTICATION_FAIL,\n});\n\nexport const loginSuccess = (tokens) => ({\n  type: LOGIN_SUCCESS,\n  payload: tokens,\n});\nexport const loginFail = (authErrorMsg) => ({\n  type: LOGIN_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const logout = () => ({ type: LOGOUT });\n\nexport const deleteAccountSuccess = () => ({ type: DELETE_ACCOUNT_SUCCESS });\nexport const deleteAccountFail = (authErrorMsg) => ({\n  type: DELETE_ACCOUNT_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const resetPasswordSuccess = () => ({ type: RESET_PASSWORD_SUCCESS });\nexport const resetPasswordFail = (authErrorMsg) => ({\n  type: RESET_PASSWORD_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const resetPasswordConfirmSuccess = () => ({\n  type: RESET_PASSWORD_CONFIRM_SUCCESS,\n});\nexport const resetPasswordConfirmFail = (authErrorMsg) => ({\n  type: RESET_PASSWORD_CONFIRM_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const changePasswordSuccess = () => ({ type: CHANGE_PASSWORD_SUCCESS });\nexport const changePasswordFail = (authErrorMsg) => ({\n  type: CHANGE_PASSWORD_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const authLoading = () => ({ type: AUTH_LOADING });\nexport const resetAuthLoading = () => ({ type: RESET_AUTH_LOADING });\n\nexport const profileLoading = () => ({ type: PROFILE_LOADING });\n\nexport const resetAuthErrorMsg = () => ({ type: RESET_AUTH_ERROR_MSG });\n\nexport const resetChangePasswordSuccess = () => ({\n  type: RESET_CHANGE_PASSWORD_SUCCESS,\n});\nexport const resetEditBioSuccess = () => ({ type: RESET_EDIT_BIO_SUCCESS });\nexport const resetEditFavouritesSuccess = () => ({\n  type: RESET_EDIT_FAVOURITES_SUCCESS,\n});\n\nexport const changeProfilePicSuccess = (picture) => ({\n  type: CHANGE_PROFILE_PIC_SUCCESS,\n  payload: picture,\n});\nexport const changeProfilePicFail = (authErrorMsg) => ({\n  type: CHANGE_PROFILE_PIC_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const editBioSuccess = () => ({ type: EDIT_BIO_SUCCESS });\nexport const editBioFail = (authErrorMsg) => ({\n  type: EDIT_BIO_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const editFavouritesSuccess = () => ({ type: EDIT_FAVOURITES_SUCCESS });\nexport const editFavouritesFail = (authErrorMsg) => ({\n  type: EDIT_FAVOURITES_FAIL,\n  payload: authErrorMsg,\n});\n\nexport const setPrevPath = (path) => ({\n  type: SET_PREV_PATH,\n  payload: path,\n});\n\nexport const editJustRegisteredSuccess = (just_registered) => ({\n  type: SET_JUST_REGISTERED_SUCCESS,\n  payload: just_registered,\n});\nexport const editJustRegisteredFail = (err) => ({\n  type: SET_JUST_REGISTERED_FAIL,\n  payload: err,\n});\n","import React from 'react'\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, Grid, Typography } from '@material-ui/core'\nimport { activate } from '../redux/auth/actions'\n\n// Activate consists of title and activate button, from top to bottom.\nconst Activate = ({ authLoading, activationSuccess, activate }) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    button: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n  const { uid, token } = useParams()\n\n  // Handlers\n  const handleActivation = e => {\n    e.preventDefault()\n    activate(uid, token)\n  }\n  const handleRedirect = e => {\n    e.preventDefault()\n    history.push('/login')\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {activationSuccess\n          ?\n          <form onSubmit={handleRedirect}>\n            {/* Confirmation text */}\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully activated your account.\n            </Typography>\n\n            {/* Login button */}\n            <Button\n              autoFocus\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Proceed to Login\n            </Button>\n          </form>\n          :\n          <form onSubmit={handleActivation}>\n            {/* Activate button */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={authLoading}\n              autoFocus\n            >\n              Activate\n            </Button>\n\n            {/* Resend activation email link */}\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <NavLink to=\"/resend-activation-email\" variant=\"body2\">\n                  Resend activation email\n                </NavLink>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container >\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  activationSuccess: state.auth.activationSuccess,\n})\n\nconst mapDispatchToProps = {\n  activate,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Activate)\n","import React from 'react'\n\n// Empty for now\nconst Dashboard = () => {\n    return (\n        <div>\n            User Dashboard\n        </div>\n    )\n}\n\nexport default Dashboard\n","export const ROOMMATE_FORM = 1\nexport const HOUSING_FORM = 2\nexport const PROFILE_FORM = 3\n\nexport const SINGLE_CHOICE = 'SingleChoice'\nexport const MULTIPLE_CHOICE = 'MultipleChoice'\nexport const TEXT = 'Text'\nexport const SELECT = 'Select'\nexport const FILE = 'File'\nexport const PRIORITY = 'Priority'\n\nexport const SELF = 'Self'\nexport const OTHER = 'Other'\n\nexport const IRRELEVANT = 'Irrelevant'\nexport const A_LITTLE_IMPORTANT = 'A little important'\nexport const SOMEWHAT_IMPORTANT = 'Somewhat important'\nexport const VERY_IMPORTANT = 'Very important'\nexport const MANDATORY = 'Mandatory'\n\nexport const PAGINATION = 2\n\nexport const MY_POSTS = 'My post(s)'\nexport const ALL_POSTS = 'Filter'\nexport const FILTERING = 'Filtering'\n","export const GET_POST_LIST_SUCCESS = \"GET_POST_LIST_SUCCESS\";\nexport const GET_POST_LIST_FAIL = \"GET_POST_LIST_FAIL\";\n\nexport const GET_POST_DETAIL_SUCCESS = \"GET_POST_DETAIL_SUCCESS\";\nexport const GET_POST_DETAIL_FAIL = \"GET_POST_DETAIL_FAIL\";\n\nexport const GET_USER_POSTS_SUCCESS = \"GET_USER_POSTS_SUCCESS\";\nexport const GET_USER_POSTS_FAIL = \"GET_USER_POSTS_FAIL\";\n\nexport const GET_USER_ROOMMATE_POSTS_SUCCESS = \"GET_USER_ROOMMATE_POSTS_SUCCESS\";\nexport const GET_USER_ROOMMATE_POSTS_FAIL = \"GET_USER_ROOMMATE_POSTS_FAIL\";\n\nexport const GET_USER_HOUSING_POSTS_SUCCESS = \"GET_USER_HOUSING_POSTS_SUCCESS\";\nexport const GET_USER_HOUSING_POSTS_FAIL = \"GET_USER_HOUSING_POSTS_FAIL\";\n\nexport const CREATE_POST_SUCCESS = \"CREATE_POST_SUCCESS\";\nexport const CREATE_POST_FAIL = \"CREATE_POST_FAIL\";\n\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\";\nexport const EDIT_POST_FAIL = \"EDIT_POST_FAIL\";\n\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\nexport const DELETE_POST_FAIL = \"DELETE_POST_FAIL\";\n\nexport const POST_LOADING = \"POST_LOADING\";\nexport const RESET_POST_LOADING = \"RESET_POST_LOADING\";\n\nexport const RESET_POST_ERROR_MSG = \"RESET_POST_ERROR_MSG\";\n\nexport const RESET_CREATE_POST_SUCCESS = \"RESET_CREATE_POST_SUCCESS\";\nexport const RESET_EDIT_POST_SUCCESS = \"RESET_EDIT_POST_SUCCESS\";\nexport const RESET_DELETE_POST_SUCCESS = \"RESET_DELETE_POST_SUCCESS\";\n\nexport const SEARCH_POST_SUCCESS = \"SEARCH_POST_SUCCESS\";\nexport const SEARCH_POST_FAIL = \"SEARCH_POST_FAIL\";\n\nexport const CANCEL_SEARCH_SUCCESS = \"CANCEL_SEARCH_SUCCESS\";\nexport const CANCEL_SEARCH_FAIL = \"CANCEL_SEARCH_FAIL\";\n\nexport const SET_PAGE = 'SET_PAGE'\nexport const SET_FILTER = 'SET_FILTER'\n","import axios from \"axios\";\nimport S3FileUpload from \"react-s3\";\nimport { HOUSING_FORM, ROOMMATE_FORM } from \"../../globalConstants\";\nimport {\n  GET_POST_LIST_SUCCESS,\n  GET_POST_LIST_FAIL,\n  GET_POST_DETAIL_SUCCESS,\n  GET_POST_DETAIL_FAIL,\n  GET_USER_POSTS_SUCCESS,\n  GET_USER_POSTS_FAIL,\n  CREATE_POST_SUCCESS,\n  CREATE_POST_FAIL,\n  EDIT_POST_SUCCESS,\n  EDIT_POST_FAIL,\n  DELETE_POST_SUCCESS,\n  DELETE_POST_FAIL,\n  POST_LOADING,\n  RESET_POST_LOADING,\n  RESET_POST_ERROR_MSG,\n  RESET_CREATE_POST_SUCCESS,\n  RESET_EDIT_POST_SUCCESS,\n  RESET_DELETE_POST_SUCCESS,\n  SEARCH_POST_SUCCESS,\n  SEARCH_POST_FAIL,\n  CANCEL_SEARCH_SUCCESS,\n  CANCEL_SEARCH_FAIL,\n  SET_PAGE,\n  SET_FILTER,\n} from \"./types\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nconst s3config = {\n  bucketName: \"housematesorbital\",\n  dirName: \"images\",\n  region: \"us-east-2\",\n  accessKeyId: \"AKIA2VQMUMOWCECPYUOU\",\n  secretAccessKey: \"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\",\n};\n\n// Error messages\nconst getPostListErrorMsg = \"Unable to load posts\";\nconst getPostDetailErrorMsg = \"Unable to load post\";\nconst getUserPostsErrorMsg = \"Unable to load user posts\";\nconst getUserRoommatePostsErrorMsg = \"Unable to load user roommate posts\";\nconst getUserHousingPostsErrorMsg = \"Unable to load user housing posts\";\nconst createPostErrorMsg = \"Unable to submit form\";\nconst editPostErrorMsg = \"Unable to edit post\";\nconst deletePostErrorMsg = \"Unable to delete post\";\n\nconst searchPostErrorMsg = \"Unable to search post\";\nconst cancelSearchErrorMsg = \" Unable to cancel search\";\nconst addPicFailErrorMsg = \" Unable to add pic\";\n\n// Async actions creators\nexport const getPostList = (type, page) => async (dispatch) => {\n  // Loading\n  dispatch(postLoading());\n\n  // Draft request\n  const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n  // Get request\n  try {\n    var res;\n    if (type === undefined && page == undefined) {\n      res = await axios.get(`/form/post-list/`, config);\n    } else if (type !== undefined && page === undefined) {\n      res = await axios.get(`/form/post-list/?form_type=${type}`, config);\n    } else if (type === undefined && page !== undefined) {\n      res = await axios.get(`/form/post-list/?page=${page}`, config);\n    } else {\n      res = await axios.get(\n        `/form/post-list/?form_type=${type}&page=${page}`,\n        config\n      );\n    }\n    dispatch(getPostListSuccess(type, res.data));\n  } catch (err) {\n    dispatch(getPostListFail(getPostListErrorMsg));\n  }\n};\n\nexport const getPostDetail = (id) => async (dispatch) => {\n  // Loading\n  dispatch(postLoading());\n\n  // Draft request\n  const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n  // Get request\n  try {\n    const res = await axios.get(`/form/post-list/${id}/`, config);\n    dispatch(getPostDetailSuccess(res.data));\n  } catch (err) {\n    dispatch(getPostDetailFail(getPostDetailErrorMsg));\n  }\n};\n\nexport const getUserPosts = (owner, type, page) => async (dispatch) => {\n  // Draft request\n  const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n  // Get request\n  try {\n    var res;\n    if (type !== undefined && page === undefined) {\n      res = await axios.get(\n        `/form/post-list/?owner=${owner}&form_type=${type}`,\n        config\n      );\n    } else if (type === undefined && page !== undefined) {\n      res = await axios.get(\n        `/form/post-list/?owner=${owner}&page=${page}`,\n        config\n      );\n    } else if (type !== undefined && page !== undefined) {\n      res = await axios.get(\n        `/form/post-list/?owner=${owner}&form_type=${type}&page=${page}`,\n        config\n      );\n    } else {\n      res = await axios.get(`/form/post-list/?owner=${owner}`, config);\n    }\n    dispatch(getUserPostsSuccess(type, res.data));\n  } catch (err) {\n    if (type === ROOMMATE_FORM) {\n      dispatch(getUserPostsFail(getUserRoommatePostsErrorMsg));\n    } else if (type === HOUSING_FORM) {\n      dispatch(getUserPostsFail(getUserHousingPostsErrorMsg));\n    } else {\n      dispatch(getUserPostsFail(getUserPostsErrorMsg));\n    }\n  }\n};\n\nexport const createPost =\n  (post_form_type, selected_choices, owner, picture) => async (dispatch) => {\n    // Loading\n    dispatch(postLoading());\n\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n    if (picture) {\n      const images = [];\n      const dummy = Array.from(Array(picture.length).keys());\n\n      dummy.forEach((i) => {\n        S3FileUpload.uploadFile(picture[i], s3config)\n          .then((data) => {\n            images.push(data.location);\n          })\n          .then(async () => {\n            if (images.length === picture.length) {\n              const body = JSON.stringify({\n                post_form_type,\n                selected_choices,\n                owner,\n                images,\n              });\n\n              // Post request\n              try {\n                await axios.post(`/form/post-list/`, body, config);\n\n                dispatch(createPostSuccess());\n              } catch (err) {\n                dispatch(createPostFail(createPostErrorMsg));\n              }\n            }\n          });\n      });\n    } else {\n      const body = JSON.stringify({\n        post_form_type,\n        selected_choices,\n        owner,\n      });\n\n      // Post request\n      try {\n        await axios.post(`/form/post-list/`, body, config);\n\n        dispatch(createPostSuccess());\n      } catch (err) {\n        dispatch(createPostFail(createPostErrorMsg));\n      }\n    }\n  };\n\nexport const editPost =\n  (\n    id,\n    post_form_type,\n    selected_choices,\n    owner,\n    score_list,\n    total_score,\n    picture\n  ) =>\n  async (dispatch) => {\n    // Loading\n    dispatch(postLoading());\n\n    // Get access token from local storage\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${token}`,\n      },\n    };\n\n    if (picture) {\n      const images = [];\n      const dummy = Array.from(Array(picture.length).keys());\n\n      dummy.forEach((i) => {\n        S3FileUpload.uploadFile(picture[i], s3config)\n          .then((data) => {\n            images.push(data.location);\n          })\n          .then(async () => {\n            if (images.length === picture.length) {\n              const body = JSON.stringify({\n                post_form_type,\n                selected_choices,\n                owner,\n                score_list,\n                total_score,\n                images,\n              });\n\n              // Put request\n              try {\n                await axios.put(`/form/post-list/${id}/`, body, config);\n                dispatch(editPostSuccess());\n              } catch (err) {\n                dispatch(editPostFail(editPostErrorMsg));\n              }\n            }\n          });\n      });\n    } else {\n      const body = JSON.stringify({\n        post_form_type,\n        selected_choices,\n        owner,\n        score_list,\n        total_score,\n      });\n\n      // Put request\n      try {\n        await axios.put(`/form/post-list/${id}/`, body, config);\n        dispatch(editPostSuccess());\n      } catch (err) {\n        dispatch(editPostFail(editPostErrorMsg));\n      }\n    }\n  };\n\nexport const deletePost = (id) => async (dispatch) => {\n  // Loading\n  dispatch(postLoading());\n\n  // Get access token from local storage\n  const token = localStorage.getItem(\"access\");\n\n  // Draft request\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${token}`,\n    },\n  };\n\n  // Post request\n  try {\n    await axios.delete(`/form/post-list/${id}/`, config);\n    dispatch(deletePostSuccess());\n  } catch (err) {\n    dispatch(deletePostFail(deletePostErrorMsg));\n  }\n};\n\nexport const searchPost = (formType, searchItems, page) => async (dispatch) => {\n  dispatch(postLoading());\n\n  // Request\n  const config = { headers: { \"Content-Type\": \"application/json\" } };\n  let searchQuery;\n\n  if (typeof searchItems === \"string\") {\n    searchQuery = searchItems;\n  } else {\n    searchQuery = searchItems.join(\",\");\n  }\n\n  // Get request\n  try {\n    var res;\n    if (page !== undefined) {\n      res = await axios.get(\n        `/form/post-list/?form_type=${formType}&search=${searchQuery}&page=${page}`,\n        config\n      );\n    } else {\n      res = await axios.get(\n        `/form/post-list/?form_type=${formType}&search=${searchQuery}`,\n        config\n      );\n    }\n    dispatch(searchPostSuccess(res.data, searchItems));\n  } catch (err) {\n    dispatch(searchPostFail(searchPostErrorMsg));\n  }\n};\n\nexport const cancelSearch = () => async (dispatch) => {\n  try {\n    dispatch(cancelSearchSuccess());\n  } catch (err) {\n    dispatch(cancelSearchFail(cancelSearchErrorMsg));\n  }\n};\n\n// Action Creators\nexport const getPostListSuccess = (type, resdata) => ({\n  type: GET_POST_LIST_SUCCESS,\n  payload: { type, resdata },\n});\nexport const getPostListFail = (postErrorMsg) => ({\n  type: GET_POST_LIST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const getPostDetailSuccess = (post) => ({\n  type: GET_POST_DETAIL_SUCCESS,\n  payload: post,\n});\nexport const getPostDetailFail = (postErrorMsg) => ({\n  type: GET_POST_DETAIL_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const getUserPostsSuccess = (type, userPosts) => ({\n  type: GET_USER_POSTS_SUCCESS,\n  payload: { type, userPosts },\n});\nexport const getUserPostsFail = (postErrorMsg) => ({\n  type: GET_USER_POSTS_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const createPostSuccess = () => ({ type: CREATE_POST_SUCCESS });\nexport const createPostFail = (postErrorMsg) => ({\n  type: CREATE_POST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const editPostSuccess = () => ({ type: EDIT_POST_SUCCESS });\nexport const editPostFail = (postErrorMsg) => ({\n  type: EDIT_POST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const deletePostSuccess = () => ({ type: DELETE_POST_SUCCESS });\nexport const deletePostFail = (postErrorMsg) => ({\n  type: DELETE_POST_FAIL,\n  payload: postErrorMsg,\n});\n\nexport const postLoading = () => ({ type: POST_LOADING });\nexport const resetPostLoading = () => ({ type: RESET_POST_LOADING });\n\nexport const resetPostErrorMsg = () => ({ type: RESET_POST_ERROR_MSG });\n\nexport const resetCreatePostSuccess = () => ({\n  type: RESET_CREATE_POST_SUCCESS,\n});\nexport const resetEditPostSuccess = () => ({ type: RESET_EDIT_POST_SUCCESS });\nexport const resetDeletePostSuccess = () => ({\n  type: RESET_DELETE_POST_SUCCESS,\n});\n\nexport const searchPostSuccess = (searchedPost, searchItem) => ({\n  type: SEARCH_POST_SUCCESS,\n  payload: { searchedPost, searchItem },\n});\nexport const searchPostFail = (searchPostErrorMsg) => ({\n  type: SEARCH_POST_FAIL,\n  payload: searchPostErrorMsg,\n});\n\nexport const cancelSearchSuccess = () => ({ type: CANCEL_SEARCH_SUCCESS });\nexport const cancelSearchFail = (cancelSearchErrorMsg) => ({\n  type: CANCEL_SEARCH_FAIL,\n  payload: cancelSearchErrorMsg,\n});\n\nexport const setPage = (page) => ({\n  type: SET_PAGE,\n  payload: page,\n})\n\nexport const setFilter = (filter) => ({\n  type: SET_FILTER,\n  payload: filter,\n})\n","export const GET_ROOM_LIST_SUCCESS = 'GET_ROOM_LIST_SUCCESS'\nexport const GET_ROOM_LIST_FAIL = 'GET_ROOM_LIST_FAIL'\n\nexport const CHECK_CHAT_HISTORY_SUCCESS = 'CHECK_CHAT_HISTORY_SUCCESS'\nexport const CHECK_CHAT_HISTORY_FAIL = 'CHECK_CHAT_HISTORY_FAIL'\n\nexport const GET_ROOM_DETAIL_SUCCESS = 'GET_ROOM_DETAIL_SUCCESS'\nexport const GET_ROOM_DETAIL_FAIL = 'GET_ROOM_DETAIL_FAIL'\n\nexport const POST_ROOM_LIST_SUCCESS = 'POST_ROOM_LIST_SUCCESS'\nexport const POST_ROOM_LIST_FAIL = 'POST_ROOM_LIST_FAIL'\n\nexport const EDIT_MSG_SUCCESS = 'EDIT_MSG_SUCCESS'\nexport const EDIT_MSG_FAIL = 'EDIT_MSG_FAIL'\n\nexport const SET_CHAT_USER = 'SET_CHAT_USER'\n\nexport const RESET_CHAT_HISTORY = 'RESET_CHAT_HISTORY'\n","import axios from \"axios\";\nimport {\n  GET_ROOM_LIST_SUCCESS,\n  GET_ROOM_LIST_FAIL,\n  CHECK_CHAT_HISTORY_SUCCESS,\n  CHECK_CHAT_HISTORY_FAIL,\n  GET_ROOM_DETAIL_SUCCESS,\n  GET_ROOM_DETAIL_FAIL,\n  POST_ROOM_LIST_SUCCESS,\n  POST_ROOM_LIST_FAIL,\n  EDIT_MSG_SUCCESS,\n  EDIT_MSG_FAIL,\n  SET_CHAT_USER,\n  RESET_CHAT_HISTORY,\n} from \"./types\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n\n\n// Error messages\nconst getRoomListErrorMsg = \"Unable to load rooms\";\nconst checkChatHistoryErrorMsg = \"Unable to check chat history\";\nconst getRoomDetailErrorMsg = \"Unable to load room\";\nconst postRoomErrorMsg = \"Unable to post room\";\nconst editMsgErrorMsg = \"Unable to edit message\";\n\n\n\n// Async action creators\nexport const getRoomList = (user) =>\n  async (dispatch) => {\n    // Draft request\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    // Get request\n    try {\n      const res = await axios.get(`/chat/room-list/?current=${user}`, config);\n      dispatch(getRoomListSuccess(res.data));\n    } catch (err) {\n      dispatch(getRoomListFail(getRoomListErrorMsg));\n    }\n  };\n\nexport const checkChatHistory = (user1, user2) =>\n  async (dispatch) => {\n    // Draft request\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    // Get request\n    try {\n      const res = await axios.get(`/chat/room-list/?user1=${user1}&user2=${user2}`, config);\n      dispatch(checkChatHistorySuccess(res.data));\n    } catch (err) {\n      dispatch(checkChatHistoryFail(checkChatHistoryErrorMsg));\n    }\n  };\n\nexport const getRoomDetail = (id) =>\n  async (dispatch) => {\n    // Draft request\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    // Get request\n    try {\n      const res = await axios.get(`/chat/room-list/?id=${id}`, config);\n      dispatch(getRoomDetailSuccess(res.data));\n    } catch (err) {\n      dispatch(getRoomDetailFail(getRoomDetailErrorMsg));\n    }\n  };\n\nexport const postRoom = (user1, user2, label) =>\n  async (dispatch) => {\n    // Draft request\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `JWT ${token}`,\n      },\n    };\n\n    const body = JSON.stringify({ user1, user2, label });\n    // Post request\n    try {\n      const res = await axios.post(`/chat/room-list/`, body, config);\n      dispatch(postRoomSuccess(res.data));\n    } catch (err) {\n      dispatch(postRoomFail(postRoomErrorMsg));\n    }\n  };\n\nexport const editMsg = (id, hasRead) =>\n  async dispatch => {\n    // Draft request\n    const token = localStorage.getItem(\"access\");\n\n    // Draft request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `JWT ${token}`,\n      },\n    };\n\n    const body = JSON.stringify({ hasRead });\n    // Patch request\n    try {\n      const res = await axios.patch(`/chat/message-list/${id}/`, body, config);\n      dispatch(editMsgSuccess(res.data));\n    } catch (err) {\n      dispatch(editMsgFail(editMsgErrorMsg));\n    }\n  }\n\n\n// Action creators\nexport const getRoomListSuccess = (data) => ({\n  type: GET_ROOM_LIST_SUCCESS,\n  payload: data,\n});\nexport const getRoomListFail = (err) => ({\n  type: GET_ROOM_LIST_FAIL,\n  payload: err,\n});\n\nexport const checkChatHistorySuccess = (data) => ({\n  type: CHECK_CHAT_HISTORY_SUCCESS,\n  payload: data,\n});\nexport const checkChatHistoryFail = (err) => ({\n  type: CHECK_CHAT_HISTORY_FAIL,\n  payload: err,\n});\n\nexport const getRoomDetailSuccess = (data) => ({\n  type: GET_ROOM_DETAIL_SUCCESS,\n  payload: data,\n});\nexport const getRoomDetailFail = (err) => ({\n  type: GET_ROOM_DETAIL_FAIL,\n  payload: err,\n});\n\nexport const postRoomSuccess = (data) => ({\n  type: POST_ROOM_LIST_SUCCESS,\n  payload: data,\n});\nexport const postRoomFail = (err) => ({\n  type: POST_ROOM_LIST_FAIL,\n  payload: err,\n});\n\nexport const editMsgSuccess = () => ({\n  type: EDIT_MSG_SUCCESS,\n});\nexport const editMsgFail = (err) => ({\n  type: EDIT_MSG_FAIL,\n  payload: err,\n});\n\nexport const setChatUser = (chatUser) => ({\n  type: SET_CHAT_USER,\n  payload: chatUser,\n})\n\nexport const resetChatHistory = () => ({ type: RESET_CHAT_HISTORY })","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, CardActionArea, CardContent, CardMedia, Chip, Typography } from '@material-ui/core'\nimport { useHistory, Link } from 'react-router-dom'\nimport { ROOMMATE_FORM } from '../globalConstants'\nimport { setChatUser } from '../redux/chat/actions'\n\nconst ProfileComponent = ({ name, desc, pic, scoreList, unreadMsgs, type, id, chatUser, setChatUser }) => {\n  // Hooks\n  const history = useHistory()\n\n  // Handlers\n  const handleClick = () => {\n    if (type === ROOMMATE_FORM) {\n      history.push(`/roommates/${id}`)\n    } else if (type === ROOMMATE_FORM) {\n      history.push(`/housings/${id}`)\n    } else {\n      setChatUser(chatUser)\n      history.push('/chat')\n    }\n  }\n  return (\n    <Link onClick={handleClick} style={{ textDecoration: 'none' }}>\n      <Card style={{ display: \"flex\", flexDirection: \"row\", margin: 10 }}>\n        <CardMedia\n          image={pic}\n          title={name}\n          style={{ width: 100 }}\n        />\n        <CardActionArea>\n          <CardContent>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"100%\" }}>\n              <Typography>{name}</Typography>\n              {type === ROOMMATE_FORM\n                ? <Chip label={scoreList[id]?.score + \"%\"} color=\"secondary\" size=\"small\" />\n                : !type\n                  ?\n                  <>\n                    {unreadMsgs !== 0 &&\n                      <div style={{ width: 20, height: 20, backgroundColor: \"red\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"50%\" }}>\n                        <div style={{ color: \"white\", textAlign: \"center\" }}>{unreadMsgs}</div>\n                      </div>}\n                  </>\n                  : null}\n            </div>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {desc.length > 25 ? desc.substring(0, 25) + \"...\" : desc}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  )\n}\n\nconst mapDispatchToProps = {\n  setChatUser,\n};\n\nexport default connect(null, mapDispatchToProps)(ProfileComponent);\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\n// Footer consists of copyright.\nconst Footer = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      Team Eclipse\n      {\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/housemates-logo-without-text-black.3fe185f4.svg\";","export default __webpack_public_path__ + \"static/media/home.1302a908.jpg\";","export default __webpack_public_path__ + \"static/media/mates.f0290a24.jpg\";","export default __webpack_public_path__ + \"static/media/house.0ebe15c4.jpg\";","export default __webpack_public_path__ + \"static/media/chat.c347d5c9.png\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\n\n// Confirmation dialog\nconst Confirmation = ({\n  postLoading,\n  open, confirmationText, thankYouText, success,\n  handleCancel, handleSubmit, handleClose\n}) => {\n\n  return (\n    <Dialog open={open}>\n      {/* Confirmation title */}\n      <DialogTitle>Confirmation</DialogTitle>\n\n      {success\n        ?\n        <>\n          {/* Thank you text */}\n          <DialogContent>\n            <Typography variant=\"body1\">{thankYouText}</Typography>\n          </DialogContent>\n\n          {/* Close button */}\n          <DialogActions>\n            <Button autoFocus variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleClose}>Close</Button>\n          </DialogActions>\n        </>\n        :\n        <div>\n          <DialogContent>\n            {/* Confirmation text */}\n            <Typography variant=\"body1\">{confirmationText}</Typography>\n\n            {/* Loading spinner */}\n            {postLoading &&\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <CircularProgress style={{ marginTop: 10, marginBottom: 10 }} />\n              </div>\n            }\n          </DialogContent>\n\n          {/* Yes and no buttons */}\n          <DialogActions>\n            <Button variant=\"contained\" onClick={handleCancel}>No</Button>\n            <Button\n              color=\"primary\"\n              disabled={postLoading}\n              onClick={handleSubmit}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Yes\n            </Button>\n          </DialogActions>\n        </div>}\n    </Dialog>\n  )\n}\n\nconst mapStateToProps = state => ({\n  postLoading: state.post.postLoading,\n})\n\nexport default connect(mapStateToProps)(Confirmation)\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Chip,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  deletePost,\n  getPostList,\n  getUserPosts,\n  getUserPostsFail,\n  resetDeletePostSuccess,\n} from \"../redux/post/actions\";\nimport Confirmation from \"../components/Confirmation\";\nimport { ROOMMATE_FORM } from \"../globalConstants\";\nimport { loadUser } from \"../redux/auth/actions\";\n\n// RoommateCard consists of poster's description: pic, name, gender, bio and top 3 preferred roommate tags.fUSER\nconst RoommateCard = ({\n  post,\n  page,\n  user,\n  loadUser,\n  deletePost,\n  deletePostSuccess,\n  resetDeletePostSuccess,\n  getPostList,\n  userRoommatePosts,\n  getUserPosts,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    card: {\n      width: 345,\n      cursor: \"pointer\",\n      alignSelf: \"center\",\n    },\n    media: {\n      height: 160,\n    },\n    tag: {\n      marginRight: 5,\n      marginTop: 5,\n    },\n    text: {\n      height: 80,\n    },\n    edit: {\n      float: \"right\",\n      marginRight: 5,\n      marginTop: 5,\n    },\n    delete: {\n      float: \"right\",\n      marginRight: -15,\n      marginTop: 5,\n    },\n    icon: {\n      color: \"black\",\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n\n  // States\n  const [open, setOpen] = useState(false);\n\n  // Handlers\n  const handleEdit = () => {\n    history.push(`/edit-roommate-form/${post.id}`);\n  };\n  const handleOpenConfirmationDialog = () => {\n    setOpen(true);\n  };\n  const handleCancel = () => {\n    setOpen(false);\n  };\n  const handleDelete = () => {\n    deletePost(post.id);\n  };\n  const handleClose = () => {\n    resetDeletePostSuccess();\n    getPostList(ROOMMATE_FORM, page);\n    getUserPosts(user.id, ROOMMATE_FORM);\n    setOpen(false);\n  };\n\n  // Constants\n  const priorityChoices = [\n    \"Irrelevant\",\n    \"A little important\",\n    \"Somewhat important\",\n    \"Very important\",\n    \"Mandatory\",\n  ];\n\n  // Helper Functions\n  const getTopThreeTags = (post) => {\n    const categories = post.selected_choices;\n    var topThreeTags = [];\n    for (let i = priorityChoices.length - 1; i >= 0; i--) {\n      for (let j = 0; j < categories.length; j++) {\n        for (let k = 0; k < categories[j].length; k++) {\n          if (\n            topThreeTags.length < 3 &&\n            categories[j][k].priority === priorityChoices[i]\n          ) {\n            if (Array.isArray(categories[j][k].otherChoice)) {\n              for (let h = 0; h < categories[j][k].otherChoice.length; h++) {\n                if (topThreeTags.length < 3)\n                  topThreeTags.push(categories[j][k].otherChoice[h]);\n              }\n            } else {\n              topThreeTags.push(categories[j][k].otherChoice);\n            }\n          }\n        }\n      }\n    }\n    return topThreeTags;\n  };\n\n  // componentDidMount\n  useEffect(() => loadUser(), []);\n  useEffect(() => (user ? getUserPosts(user.id) : null), [user]);\n\n  return (\n    <>\n      <Card className={classes.card}>\n        {user?.id === post.owner.id && (\n          <>\n            {/* Edit button */}\n            <Tooltip title=\"\" className={classes.edit} onClick={handleEdit}>\n              <IconButton className={classes.icon}>\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n\n            {/* Delete button */}\n            <Tooltip\n              title=\"\"\n              className={classes.delete}\n              onClick={handleOpenConfirmationDialog}\n            >\n              <IconButton className={classes.icon}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </>\n        )}\n\n        <Link\n          to={`/roommates/${post.id}`}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          {/* Pic */}\n          <CardMedia\n            className={classes.media}\n            image={post.owner.profile_pic}\n            title={post.owner.first_name + \" \" + post.owner.last_name}\n          />\n\n          <CardActionArea>\n            {/* Poster's description */}\n            <CardContent>\n              {/* Name */}\n              <Typography variant=\"h5\" color=\"textPrimary\">\n                {post.owner.first_name} {post.owner.last_name}{\" \"}\n                {userRoommatePosts?.map((userPost) =>\n                  userPost.owner.id !== post.owner.id &&\n                  userPost.post_form_type === ROOMMATE_FORM &&\n                  post.score_list[userPost.id]?.score ? (\n                    <Chip\n                      label={post.score_list[userPost.id]?.score + \"%\"}\n                      color=\"secondary\"\n                      className={classes.tag}\n                    />\n                  ) : null\n                )}\n              </Typography>\n\n              {/* Bio */}\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                className={classes.text}\n              >\n                {post?.owner.bio?.length > 150\n                  ? post.owner.bio.substring(0, 150) + \"...\"\n                  : post.owner.bio}\n              </Typography>\n\n              <br />\n\n              <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                Looking for roommates who are:\n              </Typography>\n\n              {/* Top 3 preferred roommate tags */}\n              {getTopThreeTags(post).map((tag) => (\n                <Chip\n                  key={tag}\n                  label={tag}\n                  color=\"primary\"\n                  className={classes.tag}\n                />\n              ))}\n            </CardContent>\n          </CardActionArea>\n        </Link>\n      </Card>\n\n      {/* Confirmation dialog */}\n      <Confirmation\n        open={open}\n        confirmationText={\"Are you sure you want to delete?\"}\n        thankYouText={\"You have successfully deleted your post\"}\n        success={deletePostSuccess}\n        handleCancel={handleCancel}\n        handleSubmit={handleDelete}\n        handleClose={handleClose}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  userRoommatePosts: state.post.userRoommatePosts,\n  deletePostSuccess: state.post.deletePostSuccess,\n});\n\nconst mapDispatchToProps = {\n  deletePost,\n  resetDeletePostSuccess,\n  getPostList,\n  getUserPosts,\n  loadUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoommateCard);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Pic from \"../static/housing.jpg\";\nimport {\n  deletePost,\n  resetDeletePostSuccess,\n  getPostList,\n} from \"../redux/post/actions\";\nimport Confirmation from \"../components/Confirmation\";\nimport { HOUSING_FORM } from \"../globalConstants\";\nimport {\n  editFavourites,\n  loadUser,\n  resetEditFavouritesSuccess,\n} from \"../redux/auth/actions\";\n\n// HousingCardCard consists of housing description: name and facilities, and pic.\nconst HousingCard = ({\n  post,\n  page,\n  user,\n  loadUser,\n  deletePost,\n  deletePostSuccess,\n  resetDeletePostSuccess,\n  getPostList,\n  editFavourites,\n  editFavouritesSuccess,\n  resetEditFavouritesSuccess,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    card: {\n      display: \"flex\",\n      height: 200,\n      cursor: \"pointer\",\n      position: \"relative\",\n    },\n    content: {\n      flex: \"1 0 auto\",\n    },\n    media: {\n      width: 400,\n    },\n    edit: {\n      position: \"absolute\",\n      right: 0,\n      marginRight: 5,\n      marginTop: 5,\n    },\n    delete: {\n      position: \"absolute\",\n      right: 40,\n      marginTop: 5,\n    },\n    icon: {\n      color: \"black\",\n    },\n    red: {\n      color: \"red\",\n    },\n    white: {\n      color: \"white\",\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n\n  // States\n  const [open, setOpen] = useState(false);\n\n  // Handlers\n  const handleEdit = () => {\n    history.push(`/edit-housing-form/${post.id}`);\n  };\n  const handleOpenConfirmationDialog = () => {\n    setOpen(true);\n  };\n  const handleCancel = () => {\n    setOpen(false);\n  };\n  const handleDelete = () => {\n    deletePost(post.id);\n  };\n  const handleClose = () => {\n    resetDeletePostSuccess();\n    getPostList(HOUSING_FORM, page);\n    setOpen(false);\n  };\n  const handleFavourites = () => {\n    resetEditFavouritesSuccess();\n    const favourites = user.favourites || [];\n    if (favourites.includes(post.id)) {\n      favourites.splice(favourites.indexOf(post.id), 1);\n      editFavourites(user.first_name, user.last_name, user.id, favourites);\n    } else {\n      favourites.push(post.id);\n      editFavourites(user.first_name, user.last_name, user.id, favourites);\n    }\n  };\n\n  useEffect(() => { if (editFavouritesSuccess) loadUser() }, [editFavouritesSuccess])\n\n  return (\n    <>\n      <Card className={classes.card}>\n        {user ? (\n          user?.id === post.owner.id ? (\n            <>\n              {/* Edit button */}\n              <Tooltip title=\"\" className={classes.edit} onClick={handleEdit}>\n                <IconButton className={classes.icon}>\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n\n              {/* Delete button */}\n              <Tooltip\n                title=\"\"\n                className={classes.delete}\n                onClick={handleOpenConfirmationDialog}\n              >\n                <IconButton className={classes.icon}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ) : (\n            // Favourite button\n            <Tooltip title=\"\" className={classes.edit}>\n              <IconButton\n                className={clsx({\n                  [classes.red]: user?.favourites?.includes(post.id),\n                  [classes.white]: !user?.favourites?.includes(post.id),\n                })}\n                onClick={handleFavourites}\n              >\n                <FavoriteIcon />\n              </IconButton>\n            </Tooltip>\n          )\n        ) : null}\n\n        <Link\n          to={`/housings/${post.id}`}\n          style={{\n            textDecoration: \"none\",\n            color: \"black\",\n            display: \"flex\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        >\n          <CardActionArea>\n            {/* HousingCard description */}\n            <CardContent className={classes.content}>\n              {/* Name */}\n              <Typography variant=\"h5\">\n                {post.selected_choices[0][0].choice}\n              </Typography>\n\n              {/* Location */}\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Located at {post.selected_choices[0][2].choice}\n              </Typography>\n\n              <br />\n\n              {/* Facilities */}\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {post.selected_choices[1][0].choice} &middot;{\" \"}\n                {post.selected_choices[1][1].choice} &middot;{\" \"}\n                {post.selected_choices[1][2].choice.map((facility, index) =>\n                  index === 0 ? (\n                    <Fragment key={facility}>{facility} </Fragment>\n                  ) : (\n                    <Fragment key={facility}>&middot; {facility} </Fragment>\n                  )\n                )}\n              </Typography>\n\n              <br />\n\n              {/* Price */}\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"h6\">\n                  SGD {post.selected_choices[0][3].choice}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  &nbsp;/ night\n                </Typography>\n              </div>\n            </CardContent>\n          </CardActionArea>\n\n          {/* Pic */}\n          <CardMedia\n            className={classes.media}\n            image={post?.images[0]}\n            title={post?.selected_choices[0][0].choice}\n          />\n        </Link>\n      </Card>\n\n      {/* Confirmation dialog */}\n      <Confirmation\n        open={open}\n        confirmationText={\"Are you sure you want to delete?\"}\n        thankYouText={\"You have successfully deleted your post\"}\n        success={deletePostSuccess}\n        handleCancel={handleCancel}\n        handleSubmit={handleDelete}\n        handleClose={handleClose}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  deletePostSuccess: state.post.deletePostSuccess,\n  editFavouritesSuccess: state.auth.editFavouritesSuccess,\n});\n\nconst mapDispatchToProps = {\n  deletePost,\n  resetDeletePostSuccess,\n  getPostList,\n  editFavourites,\n  loadUser,\n  resetEditFavouritesSuccess,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HousingCard);\n","export default __webpack_public_path__ + \"static/media/housing.e1a767d3.jpg\";","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { getPostList } from '../redux/post/actions'\nimport { Button, Grid, makeStyles, Paper, Typography } from '@material-ui/core'\nimport ProfileComponent from '../components/ProfileComponent'\nimport { HOUSING_FORM, ROOMMATE_FORM } from '../globalConstants'\nimport Footer from '../components/Footer'\nimport Logo from '../static/housemates-logo-without-text-black.svg'\nimport Pic from '../static/home.jpg'\nimport Mates from '../static/mates.jpg'\nimport House from '../static/house.jpg'\nimport Chat from '../static/chat.png'\nimport RoommateCard from '../components/RoommateCard'\nimport HousingCard from '../components/HousingCard'\n\nconst Home = ({ posts, housingPosts, postLoading, getPostList }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    button: {\n      borderRadius: 20,\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.main,\n        color: \"white\",\n      },\n    },\n  }))\n\n  // After render\n  useEffect(() => { getPostList(ROOMMATE_FORM) }, [])\n  useEffect(() => { getPostList(HOUSING_FORM) }, [])\n\n  // Hooks\n  const history = useHistory()\n  const classes = useStyles()\n\n  // Handlers\n  const handleLogin = () => history.push('/login')\n  const handleRegister = () => history.push('/register')\n  const handleSeeMore = () => history.push('/roommates')\n\n  return (\n    <Grid container>\n      <Paper style={{ width: \"100%\", margin: 20, marginTop: 20, padding: 10 }}>\n        <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <img\n            alt=\"home\"\n            src={Pic}\n            height=\"400\"\n            style={{ opacity: 0.3 }}\n          />\n\n          <div style={{ position: \"absolute\", width: \"100%\", height: 400, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <img alt=\"logo\" src={Logo} width=\"100\" height=\"100\" style={{ marginRight: 20 }} />\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Typography variant=\"h2\">\n                Welcome to HouseMates.\n              </Typography>\n              <Typography variant=\"h5\">\n                Your one stop solution to a warm stay in Singapore.\n              </Typography>\n            </div>\n          </div>\n        </Grid>\n      </Paper>\n\n      <Paper style={{ width: \"100%\", margin: 20, padding: 50, marginTop: 80 }}>\n        <Grid container item xs={12}>\n          {/* Video */}\n          <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            Video\n          </Grid>\n\n          {/* Login & register */}\n          <Grid item xs={6} style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Typography variant=\"body1\">\n              We cater towards your accomodation related needs,\n            </Typography>\n            <Typography variant=\"body1\">\n              be it finding an accomodation with a housemate, or hosting your housings.\n            </Typography>\n            <Typography variant=\"body1\">\n              Login or sign up now! No phone numbers required.\n            </Typography>\n            <div style={{ marginTop: 30 }}>\n              <Button variant=\"outlined\" style={{ marginRight: 10 }} onClick={handleLogin} className={classes.button}>Login</Button>\n              <Button variant=\"outlined\" onClick={handleRegister} className={classes.button}>Register</Button>\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Paper style={{ width: \"100%\", margin: 20, padding: 50, marginTop: 80 }}>\n        <Grid container item xs={12}>\n          <Grid item xs={6} style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Typography variant=\"body1\">\n              With our latest matchmaking algorithm,\n            </Typography>\n            <Typography variant=\"body1\">\n              you can now be automatically paired with the next best candidate.\n            </Typography>\n            <Typography variant=\"body1\">\n              Create an account to watch the algorithm does its magic!\n            </Typography>\n          </Grid>\n          <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <img alt=\"mates\" src={Mates} height=\"250\" />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Grid container item xs={12} style={{ marginTop: 80 }}>\n        {posts.length > 0\n          ?\n          <>\n            <Grid container item xs={12} >\n              {posts.slice(0, 3).map(post =>\n                <Grid item xs={12} md={6} lg={4} key={post.id} style={{ display: \"flex\", flexDirection: \"column\" }}>\n                  <RoommateCard post={post} />\n                </Grid>)}\n            </Grid>\n            <Grid item xs={12} style={{ marginTop: 20 }}>\n              <Typography align=\"center\">\n                <Link variant=\"body2\" onClick={handleSeeMore}>\n                  See more\n                </Link>\n              </Typography>\n            </Grid>\n          </>\n          :\n          <>\n            {!postLoading && (\n              <div style={{ textAlign: \"center\" }}>\n                {/* No post */}\n                <Typography variant=\"subtitle1\">No post.</Typography>\n              </div>\n            )}\n          </>\n        }\n      </Grid>\n\n      <Paper style={{ width: \"100%\", margin: 20, padding: 50, marginTop: 80 }}>\n        <Grid container item xs={12}>\n          <Grid item xs={6} style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Typography variant=\"body1\">\n              Have a room to spare?\n            </Typography>\n            <Typography variant=\"body1\">\n              We got you covered.\n            </Typography>\n            <Typography variant=\"body1\">\n              Showcase your properties with a comprehensive\n            </Typography>\n            <Typography variant=\"body1\">\n              tagging feature that ensure maximum customer traffic.\n            </Typography>\n          </Grid>\n          <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <img alt=\"house\" src={House} height=\"250\" />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Grid container item xs={12} style={{ marginTop: 80 }}>\n        {housingPosts.length > 0\n          ?\n          <>\n            <Grid container item xs={12}>\n              {housingPosts.slice(0, 3).map(post =>\n                <>\n                  <Grid item xs={1} />\n                  <Grid item xs={10} key={post.id} style={{ marginBottom: 30 }}>\n                    <HousingCard post={post} />\n                  </Grid>\n                  <Grid item xs={1} />\n                </>)}\n            </Grid>\n            <Grid item xs={12} style={{ marginTop: 20 }}>\n              <Typography align=\"center\">\n                <Link variant=\"body2\" onClick={handleSeeMore}>\n                  See more\n                </Link>\n              </Typography>\n            </Grid>\n          </>\n          :\n          <>\n            {!postLoading && (\n              <div style={{ textAlign: \"center\" }}>\n                {/* No post */}\n                <Typography variant=\"subtitle1\">No post.</Typography>\n              </div>\n            )}\n          </>\n        }\n      </Grid>\n\n      <Paper style={{ width: \"100%\", margin: 20, padding: 50, marginTop: 80 }}>\n        <Grid container item xs={12}>\n          <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <img alt=\"chat\" src={Chat} height=\"250\" />\n          </Grid>\n          <Grid item xs={6} style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Typography variant=\"body1\">\n              Your privacy is our priority.\n            </Typography>\n            <Typography variant=\"body1\">\n              Housing an in-built chat function,\n            </Typography>\n            <Typography variant=\"body1\">\n              contacting each other has never been more hassle-free.\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Grid item xs={12} style={{ marginTop: 80 }}>\n        <Footer />\n      </Grid>\n    </Grid >\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.post.posts,\n  housingPosts: state.post.housingPosts,\n  postLoading: state.post.postLoading,\n})\n\nconst mapDispatchToProps = {\n  getPostList,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Box, Button, Container, ClickAwayListener, Fab, Grid, Grow, MenuList, MenuItem, Paper, Popper, Tooltip, Typography } from '@material-ui/core'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport HousingCard from '../components/HousingCard'\r\nimport { getPostList, getUserPosts, searchPost, setPage, setFilter } from '../redux/post/actions'\r\nimport { HOUSING_FORM, ALL_POSTS, MY_POSTS, FILTERING, PAGINATION } from '../globalConstants'\r\n\r\n// Posts consists of list of Roommate and post button.\r\nconst Housings = ({\r\n  user,\r\n  postLoading,\r\n  housingPosts, count, getPostList,\r\n  userHousingPosts, userHousingPostsCount, getUserPosts,\r\n  searchedPost, searchedPostCount, searchItem, searchPost,\r\n  page, setPage,\r\n  filter, setFilter,\r\n}) => {\r\n  // Styling\r\n  const useStyles = makeStyles(theme => ({\r\n    tooltip: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(3),\r\n    },\r\n    grid: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n  }))\r\n\r\n  // Hooks\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const anchorRef = useRef(null);\r\n\r\n  // States\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Handlers\r\n  const handlePost = () => { history.push('/housing-form') }\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value)\r\n    if (searchedPost) {\r\n      searchPost(HOUSING_FORM, searchItem, value)\r\n    } else if (filter === MY_POSTS) {\r\n      getUserPosts(user.id, HOUSING_FORM, value)\r\n    } else {\r\n      getPostList(HOUSING_FORM, value)\r\n    }\r\n    window.scroll(0, 0)\r\n  }\r\n\r\n  const handleOpen = () => { setOpen(true); };\r\n  const handleClose = () => { setOpen(false); };\r\n  const handleMyPosts = () => {\r\n    setFilter(MY_POSTS)\r\n    setPage(1)\r\n    setOpen(false)\r\n    getUserPosts(user.id, HOUSING_FORM)\r\n  }\r\n  const handleAllPosts = () => {\r\n    setFilter(ALL_POSTS)\r\n    setPage(1)\r\n    setOpen(false)\r\n    getPostList(HOUSING_FORM)\r\n  }\r\n  const handleFilter = () => {\r\n    setPage(1)\r\n    setOpen(false)\r\n    setFilter(FILTERING)\r\n  }\r\n\r\n  // componentDidMount\r\n  useEffect(() => getPostList(HOUSING_FORM, page), [])\r\n  useEffect(() => { if (filter === MY_POSTS && user) getUserPosts(user.id, HOUSING_FORM, page) }, [user])\r\n\r\n  const postToRender = searchedPost ? searchedPost : filter === MY_POSTS ? userHousingPosts : housingPosts\r\n  const countToRender = searchedPost ? searchedPostCount : filter === MY_POSTS ? userHousingPostsCount : count\r\n\r\n  return (\r\n    <div>\r\n      {/* Filter button */}\r\n      {user &&\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 20, marginLeft: 30, marginRight: 30 }}>\r\n          <Typography variant=\"h6\">Housing Dashboard</Typography>\r\n          <Button\r\n            ref={anchorRef}\r\n            onClick={handleOpen}\r\n            startIcon={<FilterListIcon />}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            {filter}\r\n          </Button>\r\n          <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal placement={'bottom-end'} style={{ zIndex: 1 }}>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center bottom' : 'center top' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={handleMyPosts}>My post(s)</MenuItem>\r\n                      <MenuItem onClick={handleAllPosts}>All posts</MenuItem>\r\n                      <MenuItem onClick={handleFilter}>Filter</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>}\r\n\r\n      {postToRender.length !== 0\r\n        ?\r\n        // List of posts\r\n        <Container>\r\n          <Grid container spacing={2}>\r\n            {postToRender.map(post => (\r\n              <Grid item xs={12} key={post.id} className={classes.grid}>\r\n                <HousingCard post={post} page={page} />\r\n              </Grid>))}\r\n          </Grid>\r\n        </Container>\r\n        :\r\n        <>\r\n          {/* No post */}\r\n          {!postLoading &&\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Typography variant=\"subtitle1\">No post.</Typography>\r\n            </div>}\r\n        </>\r\n      }\r\n\r\n      {/* Pagination */}\r\n      {postToRender.length !== 0\r\n        ?\r\n        <Box style={{ width: \"100%\", display: 'flex', justifyContent: 'center', marginTop: 60 }}>\r\n          <Pagination color=\"primary\" count={Math.ceil(countToRender / PAGINATION)} page={page} onChange={handlePageChange} />\r\n        </Box>\r\n        :\r\n        null}\r\n\r\n      {/* Post button */}\r\n      {user &&\r\n        <Tooltip title=\"\" onClick={handlePost}>\r\n          <Fab color=\"primary\" className={classes.tooltip}><AddIcon /></Fab>\r\n        </Tooltip>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user,\r\n  userHousingPosts: state.post.userHousingPosts,\r\n  housingPosts: state.post.housingPosts,\r\n  postLoading: state.post.postLoading,\r\n  searchedPost: state.post.searchedPost,\r\n  count: state.post.count,\r\n  userHousingPostsCount: state.post.userHousingPostsCount,\r\n  searchedPostCount: state.post.searchedPostCount,\r\n  searchItem: state.post.searchItem,\r\n  page: state.post.page,\r\n  filter: state.post.filter,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  getPostList,\r\n  getUserPosts,\r\n  searchPost,\r\n  setPage,\r\n  setFilter,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Housings)\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../redux/auth/actions\";\r\nimport GoogleButton from \"react-google-button\";\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\n// Login consists of title, email input, password input, account input, login button, and (forgot password and register links), from top to bottom.\r\nconst Login = ({ isAuthenticated, authLoading, login }) => {\r\n  // Styling\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  // Hooks\r\n  const classes = useStyles();\r\n  const location = useLocation()\r\n\r\n  // States\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [account, setAccount] = useState(\"tenant\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [accountError, setAccountError] = useState(false);\r\n\r\n  // Handlers\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setEmailError(true);\r\n    } else {\r\n      setEmailError(false);\r\n    }\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setPasswordError(true);\r\n    } else {\r\n      setPasswordError(false);\r\n    }\r\n  };\r\n  // const handleAccountChange = (e) => {\r\n  //   setAccount(e.target.value);\r\n  //   if (e.target.value === \"\") {\r\n  //     setAccountError(true);\r\n  //   } else {\r\n  //     setAccountError(false);\r\n  //   }\r\n  // };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEmailError(false);\r\n    setPasswordError(false);\r\n    setAccountError(false);\r\n\r\n    if (email === \"\") {\r\n      setEmailError(true);\r\n    }\r\n    if (password === \"\") {\r\n      setPasswordError(true);\r\n    }\r\n    if (account === \"\") {\r\n      setAccountError(true);\r\n    }\r\n\r\n    if (email && password && account) {\r\n      login(email, password);\r\n    }\r\n\r\n    window.scroll(0, 0);\r\n  };\r\n\r\n  const continueWithGoogle = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`\r\n      );\r\n\r\n      window.location.replace(res.data.authorization_url);\r\n    } catch (err) { }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    if (location?.state?.from) {\r\n      return <Redirect to={location.state.from} />\r\n    } else {\r\n      return <Redirect to=\"/profile\" />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n          {/* Email input */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoFocus\r\n            onChange={handleEmailChange}\r\n            error={emailError}\r\n            helperText={emailError ? \"This is a required field\" : \"\"}\r\n          />\r\n\r\n          {/* Password input */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            onChange={handlePasswordChange}\r\n            error={passwordError}\r\n            helperText={passwordError ? \"This is a required field\" : \"\"}\r\n          />\r\n\r\n          {/* Account input\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={accountError}\r\n          >\r\n            <InputLabel>Account</InputLabel>\r\n            <Select\r\n              value={account}\r\n              onChange={handleAccountChange}\r\n              label=\"Account\"\r\n            >\r\n              <MenuItem value=\"tenant\">Tenant</MenuItem>\r\n              <MenuItem value=\"host\">Host</MenuItem>\r\n            </Select>\r\n            <FormHelperText>\r\n              {accountError ? \"This is a required field\" : \"\"}\r\n            </FormHelperText>\r\n          </FormControl> */}\r\n\r\n          {/* Login button*/}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={authLoading}\r\n          >\r\n            Login\r\n          </Button>\r\n          <div className={classes.paper}>\r\n            <GoogleButton\r\n              fullWidth\r\n              className=\"btn btn-danger mt-3\"\r\n              onClick={continueWithGoogle}\r\n            >\r\n              Continue With Google\r\n            </GoogleButton>\r\n          </div>\r\n          <br />\r\n          {/* Forgot password and register links */}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <NavLink to=\"/reset-password\" variant=\"body2\">\r\n                Forgot password?\r\n              </NavLink>\r\n            </Grid>\r\n            <Grid item>\r\n              <NavLink to=\"/register\" variant=\"body2\">\r\n                Don't have an account? Register now!\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  authLoading: state.auth.authLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","export default __webpack_public_path__ + \"static/media/roommates-button.977a8f19.png\";","export default __webpack_public_path__ + \"static/media/roommate-matchmake.8d1945c4.png\";","export default __webpack_public_path__ + \"static/media/dashboard.379e0bc1.png\";","export default __webpack_public_path__ + \"static/media/housing2.6a2f69a4.jfif\";","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nimport chatPic from \"../static/chat.png\";\nimport roommateAddPic from \"../static/roommates-button.png\";\nimport roommateResultsPic from \"../static/roommate-matchmake.png\";\nimport dashboardPic from \"../static/dashboard.png\";\nimport housingPic from \"../static/housing2.jfif\";\n\n// import { editJustRegistered } from \"../redux/auth/actions\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const UserGuide = ({ user, editJustRegistered }) => {\n  // states\n  const [open, setOpen] = React.useState(true);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState(\"lg\");\n  const [currentCount, setCurrentCount] = useState(0);\n\n  // handlers\n  const handleBack = () => {\n    setCurrentCount(currentCount - 1);\n  };\n\n  const handleNext = () => {\n    if (currentCount === allTexts.length - 1) {\n      editJustRegistered(user.first_name, user.last_name, user.id, false);\n    } else {\n      setCurrentCount(currentCount + 1);\n    }\n  };\n\n  // constants\n  const useStyles = makeStyles((theme) => ({\n    Card: {\n      width: 300,\n      margin: \"auto\",\n    },\n    Media: {\n      height: \"auto\",\n      width: \"90%\",\n      border: \"2px solid #555\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  // hardcoded display items\n  const allTexts = [\n    {\n      pic: dashboardPic,\n      text: \"This is your own personalised dashboard, where you can have an overview of the whole website. Go ahead and customize your picture and bio as you wish!\",\n    },\n    {\n      pic: roommateAddPic,\n      text: \"Click on the add button to find your ideal housemate\",\n    },\n    {\n      pic: roommateResultsPic,\n      text: \"Now you can see the results of the matchmaking algorithm as well as edit or delete your choices\",\n    },\n    {\n      pic: chatPic,\n      text: \"Click on any of the posts for more details. Inside, you can click on the chat icon to contact the other person\",\n    },\n    {\n      pic: housingPic,\n      text: \"Add housing posts to your favourites via the heart icon! You can conveniently see them in the dashboard afterwards\",\n    },\n  ];\n\n  return (\n    <div>\n      <Dialog\n        open={user && user.just_registered}\n        // open={false}\n        TransitionComponent={Transition}\n        keepMounted\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Welcome to HouseMates!\"}\n        </DialogTitle>\n        <DialogContent>\n          <div align=\"center\">\n            <img\n              src={allTexts[currentCount][\"pic\"]}\n              className={classes.Media}\n            />\n          </div>\n          <DialogContentText\n            id=\"alert-dialog-slide-description\"\n            align=\"center\"\n            variant=\"h6\"\n          >\n            {currentCount + 1}. {allTexts[currentCount][\"text\"]}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleBack}\n            color=\"primary\"\n            disabled={currentCount === 0}\n          >\n            Previous\n          </Button>\n          <Button color=\"primary\" onClick={handleNext}>\n            {currentCount === allTexts.length - 1 ? \"Done\" : \"Next\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => ({});\n\n// const mapDispatchToProps = {\n//   editJustRegistered,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(UserGuide);\nexport default UserGuide;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  MenuItem,\n  MenuList,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport {\n  loadUser,\n  changeProfilePic,\n  editBio,\n  resetEditBioSuccess,\n  editJustRegistered,\n} from \"../redux/auth/actions\";\nimport { getPostDetail, getUserPosts } from \"../redux/post/actions\";\nimport { getRoomList } from \"../redux/chat/actions\";\nimport ProfileComponent from \"../components/ProfileComponent\";\nimport UserGuide from \"../pages/UserGuide\";\nimport { HOUSING_FORM, ROOMMATE_FORM } from \"../globalConstants\";\n\n// Profile consists of profile pic, name and list of settings.\nconst Profile = ({\n  isAuthenticated,\n  user,\n  loadUser,\n  changeProfilePic,\n  editBio,\n  editBioSuccess,\n  resetEditBioSuccess,\n  userRoommatePosts,\n  getUserPosts,\n  post,\n  housingPost,\n  getPostDetail,\n  roomList,\n  getRoomList,\n  editJustRegistered,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    avatar: {\n      height: 200,\n      width: 200,\n      marginBottom: 20,\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    card: {\n      width: \"100%\",\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n  const fileInput = useRef();\n\n  // States\n  const [editBioTextFieldOpen, setEditBioTextFieldOpen] = useState(false);\n  const [bio, setBio] = useState(\"\");\n  const [topThreeRoommatesId, setTopThreeRoommatesId] = useState([]);\n  const [topThreeRoommates, setTopThreeRoommates] = useState([]);\n  const [starredHousings, setStarredHousings] = useState([]);\n  const [newMsgs, setNewMsgs] = useState([])\n\n  // Handlers\n  // Account settings\n  const handleChangePassword = () => {\n    history.push(\"/change-password\");\n  };\n  const handleDeleteAccount = () => {\n    history.push(\"/delete-account\");\n  };\n\n  // Change profile pic\n  const handleClickInput = () => {\n    fileInput.current.click();\n  };\n  const handleUpload = (e) => {\n    changeProfilePic(\n      user.first_name,\n      user.last_name,\n      user.id,\n      e.target.files[0]\n    );\n  };\n\n  // Edit bio\n  const handleClick = () => {\n    setEditBioTextFieldOpen(true);\n  };\n  const handleCancel = () => {\n    setEditBioTextFieldOpen(false);\n  };\n  const handleChange = (e) => {\n    setBio(e.target.value);\n  };\n  const handleEditBio = (e) => {\n    e.preventDefault();\n    editBio(user.first_name, user.last_name, user.id, bio);\n    setEditBioTextFieldOpen(false);\n  };\n  const handleEdit = () => {\n    setEditBioTextFieldOpen(true);\n  };\n\n  // componentDidMount\n  useEffect(() => {\n    loadUser();\n    resetEditBioSuccess();\n  }, [editBioSuccess]);\n\n  // Top 3 roommates\n  // Get user roommate post\n  useEffect(() => {\n    if (user) {\n      getUserPosts(user.id, ROOMMATE_FORM);\n      getRoomList(user.id);\n    }\n  }, [user]);\n  // Sort user roommate post score list and get top 3 roommates id\n  useEffect(() => {\n    if (userRoommatePosts.length > 0) {\n      const unsortedScoreList = Object.values(userRoommatePosts[0].score_list);\n      const sortedScoreList = unsortedScoreList.sort((a, b) =>\n        a.score > b.score\n          ? -1\n          : a.score === b.score\n            ? a.post < b.post\n              ? -1\n              : 1\n            : 1\n      );\n      const topThreeRoommatesId = [];\n      for (let i = 0; i < 3; i++) {\n        if (i < sortedScoreList.length)\n          topThreeRoommatesId.push(sortedScoreList[i].post);\n      }\n      setTopThreeRoommatesId(topThreeRoommatesId);\n    }\n  }, [userRoommatePosts]);\n  // Get post detail page of top 3 roommates id\n  useEffect(() => {\n    if (\n      topThreeRoommatesId.length > 0 &&\n      topThreeRoommates.length < topThreeRoommatesId.length\n    ) {\n      getPostDetail(topThreeRoommatesId[topThreeRoommates.length]);\n    }\n  }, [topThreeRoommatesId, topThreeRoommates]);\n  // Add to top 3 roommates array\n  useEffect(() => {\n    if (post && post.id === topThreeRoommatesId[topThreeRoommates.length]) {\n      setTopThreeRoommates([...topThreeRoommates, post]);\n    }\n  }, [post]);\n\n  // Starred Housings\n  // Get post detail page of starred housings\n  useEffect(() => {\n    if (\n      user?.favourites.length > 0 &&\n      starredHousings.length < user.favourites.length\n    ) {\n      getPostDetail(user.favourites[starredHousings.length]);\n    }\n  }, [user, starredHousings]);\n  // Add to starred housings array\n  useEffect(() => {\n    if (\n      housingPost &&\n      housingPost.id === user?.favourites[starredHousings.length]\n    ) {\n      setStarredHousings([...starredHousings, housingPost]);\n    }\n  }, [housingPost]);\n\n  // New messages\n  useEffect(() => {\n    const temp = roomList.slice(0, 3)\n      .filter((room) => room.messages.reduce((prev, curr) =>\n        prev || (!curr.hasRead && curr.user_id.toString() !== user.id.toString() ? true : false), false))\n    setNewMsgs(temp)\n  }, [roomList])\n\n  if (!isAuthenticated) { return <Redirect to=\"/login\" />; }\n\n  return (\n    <>\n      <UserGuide user={user} editJustRegistered={editJustRegistered} />\n      <div className={classes.card}>\n        {user && (\n          <Grid container spacing={3}>\n            <Grid container item xs={12} spacing={3}>\n              {/* Profile */}\n              <Grid container item xs={12} md={8}>\n                <Paper style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\", padding: 10, minWidth: 320 }}>\n                  {/* Profile pic */}\n                  <Grid item xs={12} md={5} align=\"right\">\n                    <Badge\n                      overlap=\"circle\"\n                      anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"right\",\n                      }}\n                      badgeContent={\n                        <IconButton onClick={handleClickInput}>\n                          <CreateIcon />\n                        </IconButton>\n                      }\n                    >\n                      <Avatar className={classes.avatar} src={user.profile_pic} />\n                    </Badge>\n\n                    <input\n                      type=\"file\"\n                      id=\"image\"\n                      accept=\"image/png, image/jpeg\"\n                      onChange={e => handleUpload(e)}\n                      ref={fileInput}\n                      style={{ display: 'none' }}\n                    />\n                  </Grid>\n                  <Grid item xs={0} md={1} />\n                  {/* Name and bio */}\n                  <Grid item xs={12} md={5} align=\"center\">\n                    {/* Name */}\n                    <Typography variant=\"h5\" style={{ marginTop: 50 }}>\n                      {user.first_name} {user.last_name}\n                    </Typography>\n                    {/* Bio */}\n                    <Box mb={3}>\n                      {editBioTextFieldOpen\n                        ?\n                        <form onSubmit={handleEditBio}>\n                          <Grid container>\n                            <Grid item xs={12}>\n                              <TextField\n                                variant=\"outlined\"\n                                placeholder=\"Describe yourself...\"\n                                defaultValue={user.bio}\n                                fullWidth\n                                multiline\n                                rows={3}\n                                onChange={handleChange}\n                              />\n                            </Grid>\n                            <Grid\n                              item\n                              xs={12}\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                marginTop: 8,\n                              }}\n                            >\n                              <Button size=\"small\"\n                                onClick={handleCancel}\n                                style={{ marginRight: 8 }}\n                              >\n                                Cancel\n                              </Button>\n                              <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                              >\n                                Save\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        </form>\n                        : user.bio\n                          ?\n                          // Bio\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                              {user.bio}\n                            </Typography>\n                            <Link variant=\"body2\" onClick={handleEdit}>\n                              Edit\n                            </Link>\n                          </div>\n                          :\n                          // Add bio link\n                          <Link variant=\"body2\" onClick={handleClick}>\n                            Add bio...\n                          </Link>}\n                    </Box>\n                  </Grid>\n                  <Grid item xs={0} md={1} />\n                </Paper>\n              </Grid>\n\n              {/* Account settings */}\n              <Grid item xs={12} md={4}>\n                <Paper style={{ padding: 20, height: 200, minWidth: 300 }}>\n                  <MenuList>\n                    <span style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <AccountBoxIcon style={{ marginRight: 10 }} />\n                      <Typography variant=\"h6\" display=\"inline\" noWrap>\n                        Account Settings\n                      </Typography>\n                    </span>\n                    <MenuItem\n                      style={{ marginLeft: -10 }}\n                      onClick={handleChangePassword}\n                    >\n                      <Typography noWrap>Change password</Typography>\n                    </MenuItem>\n                    <MenuItem\n                      style={{ marginLeft: -10 }}\n                      onClick={handleDeleteAccount}\n                    >\n                      <Typography noWrap>Delete account</Typography>\n                    </MenuItem>\n                  </MenuList>\n                </Paper>\n              </Grid>\n            </Grid>\n\n            <Grid container item xs={12} spacing={3}>\n              {/* Top 3 roommates */}\n              <Grid item xs={12} md={4}>\n                <Paper style={{ padding: 10, minWidth: 320 }}>\n                  <span style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <PeopleIcon style={{ marginRight: 10 }} />\n                    <Typography variant=\"h6\" display=\"inline\" noWrap>\n                      Top 3 Roommates\n                    </Typography>\n                  </span>\n                  {topThreeRoommates.length === 0 ? (\n                    <Typography\n                      variant=\"body1\"\n                      color=\"textSecondary\"\n                      align=\"center\"\n                    >\n                      Create posts to find your ideal roommates now!\n                    </Typography>\n                  ) : (\n                    topThreeRoommates.map((post) => (\n                      <ProfileComponent\n                        key={post.owner.id}\n                        name={post.owner.first_name + \" \" + post.owner.last_name}\n                        desc={post.owner.bio}\n                        pic={post.owner.profile_pic}\n                        scoreList={userRoommatePosts[0]?.score_list}\n                        type={ROOMMATE_FORM}\n                        id={post.id}\n                      />\n                    ))\n                  )}\n                </Paper>\n              </Grid>\n\n              {/* Starred housings */}\n              <Grid item xs={12} md={4}>\n                <Paper style={{ padding: 10, minWidth: 320 }}>\n                  <span style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <HomeIcon style={{ marginRight: 10 }} />\n                    <Typography variant=\"h6\" display=\"inline\" noWrap>\n                      Starred Housings\n                    </Typography>\n                  </span>\n                  {starredHousings.length === 0 ? (\n                    <Typography\n                      variant=\"body1\"\n                      color=\"textSecondary\"\n                      align=\"center\"\n                    >\n                      No starred housings.\n                    </Typography>\n                  ) : (\n                    starredHousings.map((post) => (\n                      <ProfileComponent\n                        key={post.id}\n                        name={post.selected_choices[0][0].choice}\n                        desc={post.selected_choices[0][1].choice}\n                        pic={post.images[0]}\n                        type={HOUSING_FORM}\n                        id={post.id}\n                      />\n                    ))\n                  )}\n                </Paper>\n              </Grid>\n\n              {/* New messages */}\n              <Grid item xs={12} md={4}>\n                <Paper style={{ padding: 10, minWidth: 320 }}>\n                  <span style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <ChatIcon style={{ marginRight: 10 }} />\n                    <Typography variant=\"h6\" display=\"inline\" noWrap>\n                      New messages\n                    </Typography>\n                  </span>\n                  {newMsgs.length === 0\n                    ?\n                    <Typography\n                      variant=\"body1\"\n                      color=\"textSecondary\"\n                      align=\"center\"\n                    >\n                      No new messages.\n                    </Typography>\n                    :\n                    <>\n                      {newMsgs.map((room) => (\n                        <ProfileComponent\n                          key={room.id}\n                          chatUser={user.id === room.owner1.id\n                            ? room.owner2\n                            : room.owner1}\n                          name={user.id === room.owner1.id\n                            ? room.owner2.first_name + \" \" + room.owner2.last_name\n                            : room.owner1.first_name + \" \" + room.owner1.last_name}\n                          desc={room.messages[room.messages.length - 1].message}\n                          pic={user.id === room.owner1.id\n                            ? room.owner2.profile_pic\n                            : room.owner1.profile_pic}\n                          unreadMsgs={room.messages.reduce((prev, curr) =>\n                            prev + (!curr.hasRead && curr.user_id.toString() !== user.id.toString() ? 1 : 0), 0)}\n                        />))}\n                    </>}\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </div>\n    </>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  editBioSuccess: state.auth.editBioSuccess,\n  userRoommatePosts: state.post.userRoommatePosts,\n  post: state.post.post,\n  housingPost: state.post.housingPost,\n  roomList: state.chat.roomList,\n});\n\nconst mapDispatchToProps = {\n  changeProfilePic,\n  editBio,\n  resetEditBioSuccess,\n  loadUser,\n  getPostDetail,\n  getUserPosts,\n  getRoomList,\n  editJustRegistered,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { register } from \"../redux/auth/actions\";\r\n\r\nimport GoogleButton from \"react-google-button\";\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\n// Register consists of title, ((confirmation text), or (first name input, last name input, email input, password input, confirm password input, account input, register button and login link)), from top to bottom.\r\nconst Register = ({\r\n  isAuthenticated,\r\n  authLoading,\r\n  registrationSuccess,\r\n  register,\r\n}) => {\r\n  // Styling\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  // Hooks\r\n  const classes = useStyles();\r\n\r\n  // States\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [account, setAccount] = useState(\"tenant\");\r\n  const [lastNameError, setLastNameError] = useState(false);\r\n  const [firstNameError, setFirstNameError] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n  const [samePasswordError, setSamePasswordError] = useState(false);\r\n  const [accountError, setAccountError] = useState(false);\r\n\r\n  // Handlers\r\n  const handleFirstNameChange = (e) => {\r\n    setFirstName(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setFirstNameError(true);\r\n    } else {\r\n      setFirstNameError(false);\r\n    }\r\n  };\r\n  const handleLastNameChange = (e) => {\r\n    setLastName(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setLastNameError(true);\r\n    } else {\r\n      setLastNameError(false);\r\n    }\r\n  };\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setEmailError(true);\r\n    } else {\r\n      setEmailError(false);\r\n    }\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setPasswordError(true);\r\n      setSamePasswordError(false);\r\n    } else if (confirmPassword && e.target.value !== confirmPassword) {\r\n      setSamePasswordError(true);\r\n      setPasswordError(false);\r\n    } else {\r\n      setPasswordError(false);\r\n      setSamePasswordError(false);\r\n    }\r\n  };\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setConfirmPasswordError(true);\r\n      setSamePasswordError(false);\r\n    } else if (e.target.value !== password) {\r\n      setSamePasswordError(true);\r\n      setConfirmPasswordError(false);\r\n    } else {\r\n      setConfirmPasswordError(false);\r\n      setSamePasswordError(false);\r\n    }\r\n  };\r\n  // const handleAccountChange = (e) => {\r\n  //   setAccount(e.target.value);\r\n  //   if (e.target.value === \"\") {\r\n  //     setAccountError(true);\r\n  //   } else {\r\n  //     setAccountError(false);\r\n  //   }\r\n  // };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setFirstNameError(false);\r\n    setLastNameError(false);\r\n    setEmailError(false);\r\n    setPasswordError(false);\r\n    setConfirmPasswordError(false);\r\n    setSamePasswordError(false);\r\n    setAccountError(false);\r\n\r\n    if (firstName === \"\") {\r\n      setFirstNameError(true);\r\n    }\r\n    if (lastName === \"\") {\r\n      setLastNameError(true);\r\n    }\r\n    if (email === \"\") {\r\n      setEmailError(true);\r\n    }\r\n    if (password === \"\") {\r\n      setPasswordError(true);\r\n    }\r\n    if (confirmPassword === \"\") {\r\n      setConfirmPasswordError(true);\r\n    }\r\n    if (confirmPassword !== password) {\r\n      setSamePasswordError(true);\r\n    }\r\n    if (account === \"\") {\r\n      setAccountError(true);\r\n    }\r\n\r\n    if (\r\n      firstName &&\r\n      lastName &&\r\n      email &&\r\n      password &&\r\n      confirmPassword &&\r\n      !samePasswordError &&\r\n      account\r\n    ) {\r\n      register(firstName, lastName, email, password, confirmPassword);\r\n    }\r\n\r\n    window.scroll(0, 0);\r\n  };\r\n  const continueWithGoogle = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`\r\n      );\r\n\r\n      window.location.replace(res.data.authorization_url);\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        {registrationSuccess ? (\r\n          // Confirmation text\r\n          <div>\r\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\r\n              Thank you for your registration.\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\r\n              Kindly check your email for account verification to complete the\r\n              registration process.\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\r\n              You may close this window.\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <form noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                {/* First name input */}\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"First Name\"\r\n                  name=\"firstName\"\r\n                  margin=\"normal\"\r\n                  autoFocus\r\n                  onChange={handleFirstNameChange}\r\n                  error={firstNameError}\r\n                  helperText={firstNameError ? \"This is a required field\" : \"\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                {/* Last name input */}\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  margin=\"normal\"\r\n                  onChange={handleLastNameChange}\r\n                  error={lastNameError}\r\n                  helperText={lastNameError ? \"This is a required field\" : \"\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Email input */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              margin=\"normal\"\r\n              onChange={handleEmailChange}\r\n              error={emailError}\r\n              helperText={emailError ? \"This is a required field\" : \"\"}\r\n            />\r\n\r\n            {/* Password input */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              margin=\"normal\"\r\n              onChange={handlePasswordChange}\r\n              error={passwordError}\r\n              helperText={\r\n                passwordError\r\n                  ? \"This is a required field\"\r\n                  : \"Minimum 8 characters with a mixture of lower and upper case letters, numbers and symbols\"\r\n              }\r\n            />\r\n\r\n            {/* Confirm password input */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              margin=\"normal\"\r\n              onChange={handleConfirmPasswordChange}\r\n              error={confirmPasswordError || samePasswordError}\r\n              helperText={\r\n                confirmPasswordError\r\n                  ? \"This is a required field\"\r\n                  : samePasswordError\r\n                  ? \"Password does not match\"\r\n                  : \"\"\r\n              }\r\n            />\r\n\r\n            {/* Account input\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              error={accountError}\r\n            >\r\n              <InputLabel>Account</InputLabel>\r\n              <Select\r\n                value={account}\r\n                onChange={handleAccountChange}\r\n                label=\"Account\"\r\n              >\r\n                <MenuItem value=\"tenant\">Tenant</MenuItem>\r\n                <MenuItem value=\"host\">Host</MenuItem>\r\n              </Select>\r\n              <FormHelperText>\r\n                {accountError ? \"This is a required field\" : \"\"}\r\n              </FormHelperText>\r\n            </FormControl> */}\r\n\r\n            {/* Register button */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={authLoading}\r\n            >\r\n              Register\r\n            </Button>\r\n            {/* Login link */}\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <NavLink to=\"/login\" variant=\"body2\">\r\n                  Already have an account? Login\r\n                </NavLink>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <div className={classes.paper}>\r\n              <GoogleButton\r\n                fullWidth\r\n                className=\"btn btn-danger mt-3\"\r\n                onClick={continueWithGoogle}\r\n              >\r\n                Continue With Google\r\n              </GoogleButton>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  authLoading: state.auth.authLoading,\r\n  registrationSuccess: state.auth.registrationSuccess,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  register,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, TextField, Typography } from '@material-ui/core'\nimport { changePassword, resetChangePasswordSuccess } from '../redux/auth/actions'\n\n// setPassword consists of current password input, new password input, confirm new password input and reset password button, from top to bottom.\nconst ChangePassword = ({ authLoading, changePasswordSuccess, changePassword, resetChangePasswordSuccess }) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [currentPassword, setCurrentPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [confirmNewPassword, setConfirmNewPassword] = useState('')\n  const [currentPasswordError, setCurrentPasswordError] = useState(false)\n  const [newPasswordError, setNewPasswordError] = useState(false)\n  const [confirmNewPasswordError, setConfirmNewPasswordError] = useState(false)\n  const [samePasswordError, setSamePasswordError] = useState(false)\n\n  // Handlers\n  const handleCurrentPasswordChange = (e) => {\n    setCurrentPassword(e.target.value)\n    if (e.target.value === '') {\n      setCurrentPasswordError(true)\n    } else {\n      setCurrentPasswordError(false)\n    }\n  }\n  const handleNewPasswordChange = (e) => {\n    setNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (confirmNewPassword && e.target.value !== confirmNewPassword) {\n      setSamePasswordError(true)\n      setNewPasswordError(false)\n    } else {\n      setNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleConfirmNewPasswordChange = (e) => {\n    setConfirmNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setConfirmNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (e.target.value !== newPassword) {\n      setSamePasswordError(true)\n      setConfirmNewPasswordError(false)\n    } else {\n      setConfirmNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    setCurrentPasswordError(false)\n    setNewPasswordError(false)\n    setConfirmNewPasswordError(false)\n    setSamePasswordError(false)\n\n    if (currentPassword === '') {\n      setCurrentPasswordError(true)\n    }\n    if (newPassword === '') {\n      setNewPasswordError(true)\n    }\n    if (confirmNewPassword === '') {\n      setConfirmNewPasswordError(true)\n    }\n    if (confirmNewPassword !== newPassword) {\n      setSamePasswordError(true)\n    }\n\n    if (currentPassword && newPassword && confirmNewPassword && !samePasswordError) {\n      changePassword(currentPassword, newPassword, confirmNewPassword)\n    }\n\n    window.scroll(0, 0)\n  }\n  const handleRedirect = e => { \n    e.preventDefault()\n    history.go(-1) \n    resetChangePasswordSuccess()\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {changePasswordSuccess\n          ?\n          <form onSubmit={handleRedirect}>\n            {/* Confirmation text */}\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully changed your password.\n            </Typography>\n\n            {/* Profile button */}\n            < Button\n              autoFocus\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Back to Profile\n            </Button>\n          </form>\n      :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* Current password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Current Password\"\n              name=\"currentPassword\"\n              type=\"password\"\n              autoFocus\n              onChange={handleCurrentPasswordChange}\n              error={currentPasswordError}\n              helperText={currentPasswordError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* New password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"New Password\"\n              name=\"newPassword\"\n              type=\"password\"\n              onChange={handleNewPasswordChange}\n              error={newPasswordError}\n              helperText={newPasswordError ? \"This is a required field\" : \"Minimum 8 characters with a mixture of lower and upper case letters, numbers and symbols\"}\n            />\n\n            {/* Confirm new password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Confim New Password\"\n              name=\"confirmNewPassword\"\n              type=\"password\"\n              onChange={handleConfirmNewPasswordChange}\n              error={confirmNewPasswordError || samePasswordError}\n              helperText={\n                confirmNewPasswordError\n                  ? \"This is a required field\"\n                  : samePasswordError\n                    ? \"Password does not match\"\n                    : \"\"\n              }\n            />\n\n            {/* Change password button */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={authLoading}\n            >\n              Change Password\n          </Button>\n          </form>\n        }\n\n\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  changePasswordSuccess: state.auth.changePasswordSuccess,\n})\n\nconst mapDispatchToProps = {\n  changePassword,\n  resetChangePasswordSuccess: () => dispatch => dispatch(resetChangePasswordSuccess()),\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword)","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Grid, Container, TextField, Typography } from '@material-ui/core'\nimport { deleteAccount } from '../redux/auth/actions'\n\n// DeleteAccount consists of title, and ((confirmation text), or (password input and (cancel and submit buttons), dependent of submission)), from top to bottom. \nconst DeleteAccount = ({ authLoading, deleteAccountSuccess, deleteAccount }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [password, setPassword] = useState(\"\")\n  const [passwordError, setPasswordError] = useState(false)\n\n  // Handlers\n  const handlePasswordChange = e => {\n    setPassword(e.target.value)\n    if (e.target.value === \"\") { setPasswordError(true) } else { setPasswordError(false) }\n  }\n  const handleCancel = () => history.go(-1)\n  const handleDelete = e => {\n    e.preventDefault()\n\n    setPasswordError(false)\n\n    if (password === \"\") { setPasswordError(true) }\n\n    if (password) {\n      deleteAccount(password)\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {deleteAccountSuccess\n          ?\n          // Confirmation text\n          <div>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully deleted your account.\n            </Typography>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You may close this window.\n            </Typography>\n          </div>\n          :\n          <form noValidate onSubmit={handleDelete}>\n            {/* Password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              autoFocus\n              onChange={handlePasswordChange}\n              error={passwordError}\n              helperText={passwordError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* Cancel and submit buttons */}\n            <Grid container spacing={2} className={classes.buttons}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  fullWidth\n                  onClick={handleCancel}\n                >\n                  Cancel\n              </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={authLoading}\n                >\n                  Delete\n              </Button>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  deleteAccountSuccess: state.auth.deleteAccountSuccess,\n})\n\nconst mapDispatchToProps = {\n  deleteAccount,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, Grid, TextField, Typography } from '@material-ui/core'\nimport { resendActivationEmail } from '../redux/auth/actions'\n\n// ResendActivationEmail consists of title, and ((confirmation text), or (email input and (cancel and submit buttons), dependent of submission)), from top to bottom. \nconst ResendActivationEmail = ({ authLoading, resendActivationEmailSuccess, resendActivationEmail }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [email, setEmail] = useState(\"\")\n  const [emailError, setEmailError] = useState(false)\n\n  // Handlers\n  const handleEmailChange = e => {\n    setEmail(e.target.value)\n    if (e.target.value === \"\") { setEmailError(true) } else { setEmailError(false) }\n  }\n  const handleCancel = () => history.go(-1)\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    setEmailError(false)\n\n    if (email === \"\") { setEmailError(true) }\n\n    if (email) {\n      resendActivationEmail(email)\n    }\n  }\n  \n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {resendActivationEmailSuccess\n          ?\n          // Confirmation text\n          <div>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              Kindly check your email for the activation email.\n            </Typography>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You may close this window.\n            </Typography>\n          </div>\n          :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* Email input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email\"\n              name=\"email\"\n              autoFocus\n              onChange={handleEmailChange}\n              error={emailError}\n              helperText={emailError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* Cancel and submit buttons */}\n            <Grid container spacing={2} className={classes.buttons}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  onClick={handleCancel}\n                >\n                  Cancel\n              </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={authLoading}\n                >\n                  Submit\n              </Button>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  resendActivationEmailSuccess: state.auth.resendActivationEmailSuccess,\n})\n\nconst mapDispatchToProps = {\n  resendActivationEmail,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResendActivationEmail)","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, Grid, TextField, Typography } from '@material-ui/core'\nimport { resetPassword } from '../redux/auth/actions'\n\n// ResetPassword consists of title, and ((confirmation text), or (email input and (cancel and submit buttons), dependent of submission)), from top to bottom. \nconst ResetPassword = ({ authLoading, resetPasswordSuccess, resetPassword }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // States\n  const [email, setEmail] = useState(\"\")\n  const [emailError, setEmailError] = useState(false)\n\n  // Handlers\n  const handleEmailChange = e => {\n    setEmail(e.target.value)\n    if (e.target.value === \"\") { setEmailError(true) } else { setEmailError(false) }\n  }\n  const handleCancel = () => history.go(-1)\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    setEmailError(false)\n\n    if (email === \"\") { setEmailError(true) }\n\n    if (email) {\n      resetPassword(email)\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {resetPasswordSuccess\n          ?\n          // Confirmation text\n          <div>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              Kindly check your email to reset your password.\n            </Typography>\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You may close this window.\n            </Typography>\n          </div>\n          :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* Email input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email\"\n              name=\"email\"\n              autoFocus\n              onChange={handleEmailChange}\n              error={emailError}\n              helperText={emailError ? \"This is a required field\" : \"\"}\n            />\n\n            {/* Cancel and submit buttons */}\n            <Grid container spacing={2} className={classes.buttons}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  onClick={handleCancel}\n                >\n                  Cancel\n              </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={authLoading}\n                >\n                  Submit\n              </Button>\n              </Grid>\n            </Grid>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  resetPasswordSuccess: state.auth.resetPasswordSuccess,\n})\n\nconst mapDispatchToProps = {\n  resetPassword,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword)\n","import React, { useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Container, TextField, Typography } from '@material-ui/core'\nimport { resetPasswordConfirm } from '../redux/auth/actions'\n\n// ResetPasswordConfirm consists of new password input, confirm new password input and reset password button, from top to bottom.\nconst ResetPasswordConfirm = ({ authLoading, resetPasswordConfirmSuccess, resetPasswordConfirm }) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    buttons: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n  const { uid, token } = useParams()\n\n  // States\n  const [newPassword, setNewPassword] = useState('')\n  const [confirmNewPassword, setConfirmNewPassword] = useState('')\n  const [newPasswordError, setNewPasswordError] = useState(false)\n  const [confirmNewPasswordError, setConfirmNewPasswordError] = useState(false)\n  const [samePasswordError, setSamePasswordError] = useState(false)\n\n  // Handlers\n  const handleNewPasswordChange = (e) => {\n    setNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (confirmNewPassword && e.target.value !== confirmNewPassword) {\n      setSamePasswordError(true)\n      setNewPasswordError(false)\n    } else {\n      setNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleConfirmNewPasswordChange = (e) => {\n    setConfirmNewPassword(e.target.value)\n    if (e.target.value === '') {\n      setConfirmNewPasswordError(true)\n      setSamePasswordError(false)\n    } else if (e.target.value !== newPassword) {\n      setSamePasswordError(true)\n      setConfirmNewPasswordError(false)\n    } else {\n      setConfirmNewPasswordError(false)\n      setSamePasswordError(false)\n    }\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    setNewPasswordError(false)\n    setConfirmNewPasswordError(false)\n    setSamePasswordError(false)\n\n    if (newPassword === '') {\n      setNewPasswordError(true)\n    }\n    if (confirmNewPassword === '') {\n      setConfirmNewPasswordError(true)\n    }\n    if (confirmNewPassword !== newPassword) {\n      setSamePasswordError(true)\n    }\n\n    if (newPassword && confirmNewPassword && !samePasswordError) {\n      resetPasswordConfirm(uid, token, newPassword, confirmNewPassword)\n    }\n  }\n  const handleRedirect = e => { \n    e.preventDefault()\n    history.push('/login') \n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        {resetPasswordConfirmSuccess\n          ?\n          <form onSubmit={handleRedirect}>\n            {/* Confirmation text */}\n            <Typography variant=\"h6\" noWrap style={{ textAlign: \"center\" }}>\n              You have successfully reset your password.\n            </Typography>\n\n            {/* Login button */}\n            < Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              autoFocus\n            >\n              Proceed to Login\n            </Button>\n          </form>\n          :\n          <form noValidate onSubmit={handleSubmit}>\n            {/* New password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"New Password\"\n              name=\"newPassword\"\n              type=\"password\"\n              autoFocus\n              onChange={handleNewPasswordChange}\n              error={newPasswordError}\n              helperText={newPasswordError ? \"This is a required field\" : \"Minimum 8 characters with a mixture of lower and upper case letters, numbers and symbols\"}\n            />\n\n            {/* Confirm new password input */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Confim New Password\"\n              name=\"confirmNewPassword\"\n              type=\"password\"\n              onChange={handleConfirmNewPasswordChange}\n              error={confirmNewPasswordError || samePasswordError}\n              helperText={\n                confirmNewPasswordError\n                  ? \"This is a required field\"\n                  : samePasswordError\n                    ? \"Password does not match\"\n                    : \"\"\n              }\n            />\n\n            {/* Reset password button */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={authLoading}\n            >\n              Reset Password\n          </Button>\n          </form>\n        }\n      </div>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  authLoading: state.auth.authLoading,\n  resetPasswordConfirmSuccess: state.auth.resetPasswordConfirmSuccess,\n})\n\nconst mapDispatchToProps = {\n  resetPasswordConfirm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordConfirm)\n","export const GET_QUESTIONS_SUCCESS = 'GET_QUESTIONS_SUCCESS'\nexport const GET_QUESTIONS_FAIL = 'GET_QUESTIONS_FAIL'\n\nexport const FORM_LOADING = 'FORM_LOADING'\nexport const RESET_FORM_LOADING = 'RESET_FORM_LOADING'\n\nexport const RESET_FORM_ERROR_MSG = 'RESET_FORM_ERROR_MSG'\n","import axios from 'axios'\nimport {\n  GET_QUESTIONS_SUCCESS,\n  GET_QUESTIONS_FAIL,\n  FORM_LOADING,\n  RESET_FORM_LOADING,\n  RESET_FORM_ERROR_MSG,\n} from './types'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n// Error messages\nconst unableToLoadQuestionsErrorMsg = \"Unable to load questions\"\n\n// Async Action Createors\nexport const getQuestions = (formType) =>\n  async dispatch => {\n    dispatch(formLoading())\n\n    // Request\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n\n    // Get request\n    try {\n      const res = await axios.get(`/form/question-list/?form_type=${formType}`, config)\n\n      dispatch(getQuestionsSuccess(formType, res.data))\n    } catch (err) {\n      dispatch(getQuestionsFail(formType, unableToLoadQuestionsErrorMsg))\n    }\n  }\n\n\n\n// Action Creators\nexport const getQuestionsSuccess = (formType, questions) => ({\n  type: GET_QUESTIONS_SUCCESS,\n  payload: { formType, questions },\n})\nexport const getQuestionsFail = (formType, formErrorMsg) => ({\n  type: GET_QUESTIONS_FAIL,\n  payload: { formType, formErrorMsg },\n})\n\nexport const formLoading = () => ({ type: FORM_LOADING })\nexport const resetFormLoading = () => ({ type: RESET_FORM_LOADING })\n\nexport const resetFormErrorMsg = () => ({ type: RESET_FORM_ERROR_MSG })","import React, { useEffect } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Avatar, Card, CardContent, CardHeader, Chip, Fab, IconButton, Tooltip, Typography } from \"@material-ui/core\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport ChatIcon from \"@material-ui/icons/Chat\"\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\"\nimport { getPostDetail, getUserPosts } from \"../redux/post/actions\"\nimport { getQuestions } from \"../redux/form/actions\"\nimport { setChatUser } from \"../redux/chat/actions\"\nimport { ROOMMATE_FORM } from \"../globalConstants\"\n\n// RoommateDetail consists of profile pic, name, categories of tags and post button.\nconst RoommateDetail = ({\n  user,\n  userPost, getUserPosts,\n  post, getPostDetail,\n  roommateCategories, getQuestions,\n  prevPath,\n  setChatUser,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    avatar: {\n      height: 200,\n      width: 200,\n      marginBottom: 20,\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    tag: {\n      marginRight: 5,\n      marginTop: 5,\n    },\n    category: {\n      marginBottom: 30,\n    },\n    card: {\n      width: \"100%\",\n      marginLeft: 23,\n      marginRight: 23,\n    },\n    tooltip: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n  const { id } = useParams()\n\n  // Handlers\n  const handleBack = () => { history.push(prevPath) }\n  const handleClick = () => { history.push(\"/roommate-form\") }\n  const handleChat = () => {\n    setChatUser(post.owner)\n    history.push(\"/chat\")\n  }\n\n  // componentDidMount\n  useEffect(() => {\n    if (roommateCategories.length === 0) getQuestions(ROOMMATE_FORM)\n    getPostDetail(id)\n  }, [])\n  useEffect(() => (user ? getUserPosts(user.id) : null), [user])\n\n  return (\n    <div className={classes.card}>\n      {post?.id.toString() === id.toString() ? (\n        <>\n          <Card>\n            {/* Back button */}\n            <CardHeader\n              avatar={\n                <IconButton onClick={handleBack}>\n                  <ArrowBackIcon />\n                </IconButton>\n              }\n            />\n\n            <CardContent className={classes.content}>\n              {/* Profile pic */}\n              <Avatar\n                className={classes.avatar}\n                src={post.owner.profile_pic}\n              />\n\n              {/* Name */}\n              <span style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                <Typography variant=\"h5\" display=\"inline\">\n                  {post.owner.first_name} {post.owner.last_name}\n                </Typography>\n                {user && user.id !== post.owner.id &&\n                  <IconButton style={{ marginLeft: 5 }} onClick={handleChat}><ChatIcon /></IconButton>}\n              </span>\n\n              {/* Text */}\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                className={classes.category}\n              >\n                Looking for roommates who are:\n              </Typography>\n\n              {/* Categories of tags */}\n              <div>\n                {post.selected_choices.map((category, index) => (\n                  <div key={category} className={classes.category}>\n                    {/* Category */}\n                    <Typography\n                      variant=\"body1\"\n                      color=\"textPrimary\"\n                      gutterBottom\n                    >\n                      {roommateCategories[index]}\n                    </Typography>\n\n                    {/* Tags */}\n                    {category.map((question) =>\n                      Array.isArray(question.otherChoice) ? (\n                        // Multiple choice question\n                        question.otherChoice.map((choice) => (\n                          <Chip\n                            key={choice}\n                            className={classes.tag}\n                            label={choice}\n                            color=\"primary\"\n                          />\n                        ))\n                      ) : (\n                        // Single choice question\n                        <Chip\n                          key={question}\n                          className={classes.tag}\n                          label={question.otherChoice}\n                          color=\"primary\"\n                        />\n                      )\n                    )}\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Post button */}\n          {user && userPost?.length === 0 && (\n            <Tooltip title=\"\" onClick={handleClick}>\n              <Fab color=\"primary\" className={classes.tooltip}>\n                <AddIcon />\n              </Fab>\n            </Tooltip>\n          )}\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapPropsToState = (state) => ({\n  user: state.auth.user,\n  userPost: state.post.userPost,\n  post: state.post.post,\n  roommateCategories: state.form.roommateCategories,\n  prevPath: state.auth.prevPath,\n})\n\nconst mapDispatchToProps = {\n  getQuestions,\n  getPostDetail,\n  getUserPosts,\n  setChatUser,\n}\n\nexport default connect(mapPropsToState, mapDispatchToProps)(RoommateDetail)\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Paper, Radio, RadioGroup, Step, StepButton, Stepper, Typography } from '@material-ui/core'\nimport Confirmation from '../components/Confirmation'\nimport { getQuestions } from '../redux/form/actions'\nimport { getUserPosts, getPostList, createPost, editPost, resetCreatePostSuccess, resetEditPostSuccess } from '../redux/post/actions'\nimport { ROOMMATE_FORM, MULTIPLE_CHOICE, SINGLE_CHOICE, PRIORITY, SELF, OTHER } from '../globalConstants'\n\n// RoommateForm consists of stepper, (((summary of roommateQuestions and user inputs) and (back and submit buttons)), or ((list of roommateQuestions with their corresponding list of choices based on category) and (back and next buttons))), dependent on current category. A confirmation dialog will popped up upon submission.\nconst RoommateForm = ({\n  user,\n  getQuestions, roommateQuestions,\n  getPostList, roommateCategories,\n  createPost, createPostSuccess, resetCreatePostSuccess,\n  editPost, editPostSuccess, resetEditPostSuccess,\n  initialFormFields, id,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: 30,\n      paddingBottom: 50,\n      marginLeft: 23,\n      marginRight: 23,\n    },\n    flex: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    category: {\n      marginBottom: 10,\n    },\n    active: {\n      background: theme.palette.action.hover,\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n\n  // Helper functions\n  const completed = category => {\n    return roommateQuestions\n      .filter(question => question.category === roommateCategories[category])\n      .reduce((prev, curr) =>\n      (prev &&\n        (Array.isArray(formFields[category]?.[curr.id]?.myChoice)\n          ? formFields[category]?.[curr.id]?.myChoice.length > 0\n          : formFields[category]?.[curr.id]?.myChoice) &&\n        (Array.isArray(formFields[category]?.[curr.id]?.otherChoice)\n          ? formFields[category]?.[curr.id]?.otherChoice.length > 0\n          : formFields[category]?.[curr.id]?.otherChoice) &&\n        formFields[category]?.[curr.id]?.priority),\n        true)\n  }\n\n  // Constants\n  const priorityChoices = [\"Irrelevant\", \"A little important\", \"Somewhat important\", \"Very important\", \"Mandatory\"]\n\n  // States\n  const [formFields, setFormFields] = useState({})\n  const [currentCategory, setCurrentCategory] = useState(0)\n  const [maxCategory, setMaxCategory] = useState(0)\n  const [categoryCompleted, setCategoryCompleted] = useState({})\n  const [open, setOpen] = useState(false)\n\n  // Handlers\n  const handleNext = () => {\n    window.scrollTo(0, 0)\n    setCurrentCategory((prev) => prev + 1)\n    setMaxCategory((prev) =>\n      currentCategory >= maxCategory ? prev + 1 : prev\n    )\n    const newCategoryCompleted = categoryCompleted\n    newCategoryCompleted[currentCategory] = true\n    setCategoryCompleted(newCategoryCompleted)\n  }\n  const handleBack = () => {\n    window.scrollTo(0, 0)\n    setCurrentCategory((prev) => prev - 1)\n  }\n  const handleStep = (category) => () =>\n    category <= maxCategory ? setCurrentCategory(category) : null\n\n  const handleChange = (e, category, type, selfOther) => {\n    switch (type) {\n      case SINGLE_CHOICE:\n        switch (selfOther) {\n          case SELF:\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  question: e.target.name,\n                  myChoice: e.target.value,\n                },\n              }\n            })\n            break\n          case OTHER:\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  otherChoice: e.target.value,\n                },\n              }\n            })\n            break\n          default:\n            break\n        }\n        break\n\n      case MULTIPLE_CHOICE:\n        switch (selfOther) {\n          case SELF:\n            var myChoice = formFields[category]?.[e.target.name]?.myChoice || []\n            if (myChoice?.includes(e.target.value)) {\n              myChoice.splice(myChoice.indexOf(e.target.value), 1)\n            } else {\n              myChoice.push(e.target.value)\n            }\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  question: e.target.name,\n                  myChoice: myChoice,\n                },\n              }\n            })\n            break\n\n          case OTHER:\n            var otherChoice = formFields[category]?.[e.target.name]?.otherChoice || []\n            if (otherChoice?.includes(e.target.value)) {\n              otherChoice.splice(otherChoice.indexOf(e.target.value), 1)\n            } else {\n              otherChoice.push(e.target.value)\n            }\n            setFormFields({\n              ...formFields,\n              [category]: {\n                ...formFields[category],\n                [e.target.name]: {\n                  ...formFields[category]?.[e.target.name],\n                  otherChoice: otherChoice,\n                },\n              }\n            })\n            break\n          default:\n            break\n        }\n        break\n\n      case PRIORITY:\n        setFormFields({\n          ...formFields,\n          [category]: {\n            ...formFields[category],\n            [e.target.name]: {\n              ...formFields[category]?.[e.target.name],\n              priority: e.target.value,\n            },\n          }\n        })\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleConfirmation = () => { setOpen(true) }\n  const handleCancel = () => setOpen(false)\n  const handleSubmit = () => {\n    const data = Object.values(formFields).map(category => Object.values(category))\n    const userObj = {\n      first_name: user.first_name,\n      last_name: user.last_name,\n    }\n    if (id) { editPost(id, ROOMMATE_FORM, data, userObj) } else { createPost(ROOMMATE_FORM, data, userObj) }\n  }\n  const handleClose = () => {\n    resetCreatePostSuccess()\n    resetEditPostSuccess()\n    setOpen(false)\n    history.push('/matchmaking')\n  }\n\n  // componentDidMount\n  // Get roommate form questions\n  useEffect(() => { if (roommateQuestions.length === 0) getQuestions(ROOMMATE_FORM) }, [])\n  // Get roommate form categories\n  useEffect(() => { getPostList(ROOMMATE_FORM) }, [])\n  // Get existing roommate form data\n  useEffect(() => {\n    if (initialFormFields) {\n      setFormFields(initialFormFields)\n      const allCompleted = roommateCategories\n        .reduce((prev, curr, index) => ({ ...prev, [index]: true }), {})\n      setCategoryCompleted(allCompleted)\n      setMaxCategory(roommateCategories.length)\n    }\n  }, [initialFormFields, roommateCategories])\n\n  // Components\n  const SingleChoiceQuestion = ({ question }) => (\n    <>\n      {/* Question */}\n      <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>{question.question_text}</Typography>\n\n      <Grid container spacing={8}>\n        {/* My choices */}\n        <Grid item xs={4}>\n          <FormControl>\n            <FormLabel>You are...</FormLabel>\n            <RadioGroup\n              name={question.id}\n              value={formFields[currentCategory]?.[question.id]?.myChoice}\n              onChange={e => handleChange(e, currentCategory, SINGLE_CHOICE, SELF)}\n            >\n              {question.choice_set.map(choice => (\n                <FormControlLabel\n                  key={choice}\n                  control={<Radio color=\"primary\" />}\n                  value={choice}\n                  label={choice}\n                />))}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Other choices */}\n        <Grid item xs={4}>\n          <FormControl>\n            <FormLabel>Your ideal roommate is......</FormLabel>\n            <RadioGroup\n              name={question.id}\n              value={formFields[currentCategory]?.[question.id]?.otherChoice}\n              onChange={e => handleChange(e, currentCategory, SINGLE_CHOICE, OTHER)}\n            >\n              {question.choice_set.map(choice => (\n                <FormControlLabel\n                  key={choice}\n                  control={<Radio color=\"primary\" />}\n                  value={choice}\n                  label={choice}\n                />))}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Priority */}\n        <Grid item xs={4}>\n          <FormControl>\n            <FormLabel>This question is...</FormLabel>\n            <RadioGroup\n              name={question.id}\n              value={formFields[currentCategory]?.[question.id]?.priority}\n              onChange={e => handleChange(e, currentCategory, PRIORITY)}\n            >\n              {priorityChoices.map(choice => (\n                <FormControlLabel\n                  key={choice}\n                  control={<Radio color=\"primary\" />}\n                  value={choice}\n                  label={choice}\n                />))}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </>\n  )\n\n  const MultipleChoiceQuestion = ({ question }) => (\n    <>\n      {/* Question */}\n      <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>{question.question_text}</Typography>\n\n      <Grid container item spacing={8}>\n        {/* My choices */}\n        <Grid item xs={4}>\n          <FormControl>\n            <FormLabel>You are...</FormLabel>\n            <FormGroup>\n              {question.choice_set.map(choice => (\n                <FormControlLabel\n                  key={choice}\n                  control={<Checkbox color=\"primary\" />}\n                  name={question.id}\n                  value={choice}\n                  label={choice}\n                  checked={formFields[currentCategory]?.[question.id]?.myChoice?.includes(choice)}\n                  onChange={e => handleChange(e, currentCategory, MULTIPLE_CHOICE, SELF)}\n                />))}\n            </FormGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Other choices */}\n        <Grid item xs={4}>\n          <FormControl>\n            <FormLabel>Your ideal roommate is......</FormLabel>\n            <FormGroup>\n              {question.choice_set.map(choice => (\n                <FormControlLabel\n                  name={question.id}\n                  value={choice}\n                  control={<Checkbox color=\"primary\" />}\n                  checked={formFields[currentCategory]?.[question.id]?.otherChoice?.includes(choice)}\n                  label={choice}\n                  key={choice}\n                  onChange={e => handleChange(e, currentCategory, MULTIPLE_CHOICE, OTHER)}\n                />))}\n            </FormGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Priority */}\n        <Grid item xs={4}>\n          <FormControl>\n            <FormLabel>This question is...</FormLabel>\n            <RadioGroup\n              name={question.id}\n              value={formFields[currentCategory]?.[question.id]?.priority}\n              onChange={e => handleChange(e, currentCategory, PRIORITY)}\n            >\n              {priorityChoices.map(choice => (\n                <FormControlLabel\n                  key={choice}\n                  control={<Radio color=\"primary\" />}\n                  value={choice}\n                  label={choice}\n                />))}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </>\n  )\n\n  const stepper =\n    <Stepper nonLinear alternativeLabel activeStep={currentCategory}>\n      {roommateCategories.map((category, index) => (\n        <Step key={category}>\n          <StepButton\n            onClick={handleStep(index)}\n            completed={categoryCompleted[index]}\n            className={index === currentCategory ? classes.active : null}\n          >\n            {category}\n          </StepButton>\n        </Step>))}\n    </Stepper>\n\n  const summary =\n    <Grid container>\n      <Grid container item xs={12} style={{ padding: 48 }}>\n        {roommateCategories\n          .filter(category => category !== \"Confirmation\")\n          .map((category, categoryIndex) => (\n            <Grid item xs={12} key={category} style={{ marginBottom: 32 }}>\n              <Grid container>\n                {/* Category */}\n                <Grid item xs={3}>\n                  <Typography variant=\"h6\">{category}</Typography>\n                </Grid>\n                {/* My choice */}\n                <Grid item xs={3}>\n                  <Typography variant=\"body1\" color=\"textSecondary\">You are...</Typography>\n                </Grid>\n                {/* Other choice */}\n                <Grid item xs={3}>\n                  <Typography variant=\"body1\" color=\"textSecondary\">Your ideal roommate is......</Typography>\n                </Grid>\n                {/* Priority */}\n                <Grid item xs={3}>\n                  <Typography variant=\"body1\" color=\"textSecondary\">This question is...</Typography>\n                </Grid>\n              </Grid>\n\n              <Grid container>\n                {roommateQuestions\n                  .filter(question => question.category === category)\n                  .map(question => (\n                    <Grid container item xs={12} spacing={8}>\n                      {/* Question */}\n                      <Grid item xs={3}>\n                        <Typography variant=\"body1\" gutterBottom>{question.question_text}</Typography>\n                      </Grid>\n                      {/* My choices */}\n                      <Grid item xs={3}>\n                        {question.question_type === MULTIPLE_CHOICE\n                          ?\n                          // Multiple choice\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.myChoice?.reduce((prev, curr) => (prev ? prev + \", \" : prev) + curr, '')}\n                          </Typography>\n                          :\n                          // Single choice\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.myChoice}\n                          </Typography>}\n                      </Grid>\n                      {/* Other choices */}\n                      <Grid item xs={3}>\n                        {question.question_type === MULTIPLE_CHOICE\n                          ?\n                          // Multiple choice\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.otherChoice?.reduce((prev, curr) => (prev ? prev + \", \" : prev) + curr, '')}\n                          </Typography>\n                          :\n                          // Single choice\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.otherChoice}\n                          </Typography>}\n                      </Grid>\n                      {/* Priority */}\n                      <Grid item xs={3}>\n                        <Typography variant=\"body1\" gutterBottom>\n                          {formFields[categoryIndex]?.[question.id]?.priority}\n                        </Typography>\n                      </Grid>\n                    </Grid>))}\n              </Grid>\n            </Grid>\n          ))}\n      </Grid>\n\n      {/* Back and submit buttons */}\n      {<Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n        <Button\n          onClick={handleBack}\n          style={{ marginRight: 8 }}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleConfirmation}\n        >\n          Submit\n        </Button>\n      </Grid>}\n    </Grid>\n\n  const questionsBasedOnCategory =\n    <Grid container>\n      <Grid container item xs={12} style={{ padding: 48 }}>\n        {roommateQuestions\n          .filter(question => question.category === roommateCategories[currentCategory])\n          .map(question => (\n            <Grid item xs={12} style={{ marginBottom: 32 }}>\n              {question.question_type === SINGLE_CHOICE\n                ? <SingleChoiceQuestion question={question} />\n                : <MultipleChoiceQuestion question={question} />}\n            </Grid>))}\n      </Grid>\n\n      {/* Back and next buttons */}\n      {<Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n        <Button\n          onClick={handleBack}\n          disabled={currentCategory === 0}\n          style={{ marginRight: 8 }}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleNext}\n          disabled={!completed(currentCategory)}\n        >\n          Next\n        </Button>\n      </Grid>}\n    </Grid>\n\n  const confirmationDialog =\n    <Confirmation\n      open={open}\n      confirmationText={\"Are you sure you want to submit?\"}\n      thankYouText={\"Thank you for your submission!\"}\n      success={id ? editPostSuccess : createPostSuccess}\n      handleCancel={handleCancel}\n      handleSubmit={handleSubmit}\n      handleClose={handleClose}\n    />\n\n  return (\n    <>\n      {roommateQuestions.length !== 0 && roommateCategories.length !== 0\n        ?\n        <Paper className={classes.paper}>\n          {stepper}\n\n          <div>\n            {currentCategory === roommateCategories.length - 1 ? summary : questionsBasedOnCategory}\n          </div>\n\n          {confirmationDialog}\n        </Paper>\n        :\n        null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  roommateQuestions: state.form.roommateQuestions,\n  roommateCategories: state.form.roommateCategories,\n  createPostSuccess: state.post.createPostSuccess,\n  editPostSuccess: state.post.editPostSuccess,\n})\n\nconst mapDispatchToProps = {\n  getQuestions,\n  createPost,\n  editPost,\n  resetCreatePostSuccess,\n  resetEditPostSuccess,\n  getUserPosts,\n  getPostList,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoommateForm)\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Checkbox, FormControl, FormControlLabel, FormGroup, Grid, MenuItem, Paper, Radio, RadioGroup, Select, Step, StepButton, Stepper, TextField, Typography } from '@material-ui/core'\nimport Confirmation from '../components/Confirmation'\nimport { getQuestions } from '../redux/form/actions'\nimport { getUserPosts, getPostList, createPost, editPost, resetCreatePostSuccess, resetEditPostSuccess } from '../redux/post/actions'\nimport { HOUSING_FORM, MULTIPLE_CHOICE, SINGLE_CHOICE, TEXT, SELECT, FILE } from '../globalConstants'\n\n// HousingForm consists of stepper, (((summary of questions and user inputs) and (back and submit buttons)), or ((list of questions with their corresponding list of choices based on category) and (back and next buttons))), dependent on current category. A confirmation dialog will popped up upon submission.\n\nconst TextQuestion = ({ question, formFields, handleChange, currentCategory }) => (\n  <>\n    {/* Question */}\n    <Typography variant=\"h6\" color=\"textPrimary\">\n      {question.question_text}\n    </Typography>\n\n    {/* Input */}\n    <TextField\n      variant=\"outlined\"\n      fullWidth\n      name={question.id}\n      value={formFields[currentCategory]?.[question.id]?.choice}\n      onChange={(e) => handleChange(e, currentCategory, SINGLE_CHOICE)}\n    />\n  </>\n);\n\nconst FileQuestion = ({ question, formFields, handleCapture, currentCategory }) => {\n  // Hooks\n  const fileInput = useRef()\n\n  // Handlers\n  const handleClick = () => { fileInput.current.click() }\n\n  return (\n    <>\n      {/* Question */}\n      <Typography variant=\"h6\" color=\"textPrimary\">\n        {question.question_text}\n      </Typography>\n\n      {/* Choices */}\n      <input\n        type=\"file\"\n        id=\"image\"\n        accept=\"image/png, image/jpeg\"\n        multiple\n        onChange={(e) => handleCapture(e, currentCategory)}\n        name={question.id}\n        ref={fileInput}\n        style={{ display: \"none\" }}\n      />\n\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Upload</Button>\n\n      <Typography variant=\"body1\" display=\"inline\" style={{ marginLeft: 10 }}>\n        {formFields[currentCategory]?.[question.id]?.choice?.join(', ') || \"No photo(s) uploaded.\"}\n      </Typography>\n    </>\n  )\n}\n\nconst HousingForm = ({\n  user,\n  getQuestions, housingQuestions,\n  getPostList, housingCategories,\n  createPost, createPostSuccess, resetCreatePostSuccess,\n  editPost, editPostSuccess, resetEditPostSuccess,\n  initialFormFields, id,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: 30,\n      paddingBottom: 50,\n      marginLeft: 23,\n      marginRight: 23,\n    },\n    flex: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    category: {\n      marginBottom: 10,\n    },\n    active: {\n      background: theme.palette.action.hover,\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n\n  // Helper functions\n  const completed = (category) => {\n    return housingQuestions\n      .filter((question) => question.category === housingCategories[category])\n      .reduce(\n        (prev, curr) =>\n          prev &&\n          (Array.isArray(formFields[category]?.[curr.id]?.choice)\n            ? formFields[category]?.[curr.id]?.choice.length > 0\n            : formFields[category]?.[curr.id]?.choice),\n        true\n      );\n  };\n\n  // States\n  const [formFields, setFormFields] = useState({});\n  const [currentCategory, setCurrentCategory] = useState(0);\n  const [maxCategory, setMaxCategory] = useState(0);\n  const [categoryCompleted, setCategoryCompleted] = useState({});\n  const [open, setOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(undefined);\n\n  // Handlers\n  // Stepper\n  const handleNext = () => {\n    window.scrollTo(0, 0);\n    setCurrentCategory((prev) => prev + 1);\n    setMaxCategory((prev) =>\n      currentCategory >= maxCategory ? prev + 1 : prev\n    );\n    const newCategoryCompleted = categoryCompleted;\n    newCategoryCompleted[currentCategory] = true;\n    setCategoryCompleted(newCategoryCompleted);\n  };\n  const handleBack = () => {\n    window.scrollTo(0, 0);\n    setCurrentCategory((prev) => prev - 1);\n  };\n  const handleStep = (category) => () => category <= maxCategory ? setCurrentCategory(category) : null;\n\n  // Form fields\n  const handleChange = (e, category, type) => {\n    switch (type) {\n      case SINGLE_CHOICE:\n        setFormFields({\n          ...formFields,\n          [category]: {\n            ...formFields[category],\n            [e.target.name]: {\n              ...formFields[category]?.[e.target.name],\n              question: e.target.name,\n              choice: e.target.value,\n            },\n          },\n        });\n        break;\n\n      case MULTIPLE_CHOICE:\n        var choice = formFields[category]?.[e.target.name]?.choice || [];\n        if (choice?.includes(e.target.value)) {\n          choice.splice(choice.indexOf(e.target.value), 1);\n        } else {\n          choice.push(e.target.value);\n        }\n        setFormFields({\n          ...formFields,\n          [category]: {\n            ...formFields[category],\n            [e.target.name]: {\n              ...formFields[category]?.[e.target.name],\n              question: e.target.name,\n              choice: choice,\n            },\n          },\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleCapture = (e, category) => {\n    setSelectedFile(e.target.files);\n    setFormFields({\n      ...formFields,\n      [category]: {\n        ...formFields[category],\n        [e.target.name]: {\n          ...formFields[category]?.[e.target.name],\n          question: e.target.name,\n          choice: Array.from(e.target.files).map(file => file.name),\n        },\n      },\n    });\n  };\n\n  // Confirmation dialog\n  const handleConfirmation = () => { setOpen(true); };\n  const handleCancel = () => setOpen(false);\n  const handleSubmit = () => {\n    const data = Object.values(formFields).map((category) => Object.values(category));\n    const userObj = {\n      first_name: user.first_name,\n      last_name: user.last_name,\n    };\n    if (id) {\n      editPost(id, HOUSING_FORM, data, userObj, undefined, undefined, selectedFile);\n    } else {\n      createPost(HOUSING_FORM, data, userObj, selectedFile);\n    }\n  };\n  const handleClose = () => {\n    resetCreatePostSuccess();\n    resetEditPostSuccess();\n    setOpen(false);\n    history.push(\"/housings\");\n  };\n\n  // componentDidMount\n  // Get housing form questions\n  useEffect(() => { if (housingQuestions.length === 0) getQuestions(HOUSING_FORM); }, []);\n  // Get housing form categories\n  useEffect(() => { if (housingCategories.length === 0) getPostList(HOUSING_FORM); }, []);\n  // Get existing housing form data\n  useEffect(() => {\n    if (initialFormFields) {\n      setFormFields(initialFormFields);\n      const allCompleted = housingCategories.reduce((prev, curr, index) => ({ ...prev, [index]: true }), {});\n      setCategoryCompleted(allCompleted);\n      setMaxCategory(housingCategories.length);\n    }\n  }, [initialFormFields, housingCategories]);\n\n  // Components\n  const SingleChoiceQuestion = ({ question }) => (\n    <>\n      {/* Question */}\n      <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n        {question.question_text}\n      </Typography>\n\n      {/* Choices */}\n      <FormControl>\n        <RadioGroup\n          name={question.id}\n          value={formFields[currentCategory]?.[question.id]?.choice}\n          onChange={(e) => handleChange(e, currentCategory, SINGLE_CHOICE)}\n        >\n          {question.choice_set.map((choice) => (\n            <FormControlLabel\n              key={choice}\n              control={<Radio color=\"primary\" />}\n              value={choice}\n              label={choice}\n            />\n          ))}\n        </RadioGroup>\n      </FormControl>\n    </>\n  );\n\n  const MultipleChoiceQuestion = ({ question }) => (\n    <>\n      {/* Question */}\n      <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n        {question.question_text}\n      </Typography>\n\n      {/* Choices */}\n      <FormControl>\n        <FormGroup>\n          {question.choice_set.map((choice) => (\n            <FormControlLabel\n              key={choice}\n              control={<Checkbox color=\"primary\" />}\n              name={question.id}\n              value={choice}\n              label={choice}\n              checked={formFields[currentCategory]?.[\n                question.id\n              ]?.choice?.includes(choice)}\n              onChange={(e) =>\n                handleChange(e, currentCategory, MULTIPLE_CHOICE)\n              }\n            />\n          ))}\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n\n  const SelectQuestion = ({ question }) => (\n    <>\n      {/* Question */}\n      <Typography variant=\"h6\" color=\"textPrimary\">\n        {question.question_text}\n      </Typography>\n\n      {/* Choices */}\n      <Select\n        variant=\"outlined\"\n        fullWidth\n        name={question.id}\n        value={formFields[currentCategory]?.[question.id]?.choice}\n        onChange={(e) => handleChange(e, currentCategory, SINGLE_CHOICE)}\n      >\n        {question.choice_set.map((choice) => (\n          <MenuItem key={choice} value={choice}>\n            {choice}\n          </MenuItem>\n        ))}\n      </Select>\n    </>\n  );\n\n  const stepper = (\n    <Stepper nonLinear alternativeLabel activeStep={currentCategory}>\n      {housingCategories.map((category, index) => (\n        <Step key={category}>\n          <StepButton\n            onClick={handleStep(index)}\n            completed={categoryCompleted[index]}\n            className={index === currentCategory ? classes.active : null}\n          >\n            {category}\n          </StepButton>\n        </Step>\n      ))}\n    </Stepper>\n  );\n\n  const summary = (\n    <Grid container>\n      <Grid container item xs={12} style={{ padding: 48 }}>\n        {housingCategories\n          .filter((category) => category !== \"Confirmation\")\n          .map((category, categoryIndex) => (\n            <Grid\n              container\n              item\n              xs={12}\n              key={category}\n              style={{ marginBottom: 32 }}\n            >\n              <Grid container item xs={12}>\n                <Grid item xs={1} />\n                {/* Category */}\n                <Grid item xs={11}>\n                  <Typography variant=\"h6\">{category}</Typography>\n                </Grid>\n              </Grid>\n\n              <Grid container item xs={12}>\n                {housingQuestions\n                  .filter((question) => question.category === category)\n                  .map((question) => (\n                    <Grid container item xs={12}>\n                      <Grid item xs={1} />\n\n                      {/* Question */}\n                      <Grid item xs={5}>\n                        <Typography variant=\"body1\" gutterBottom>\n                          {question.question_text}\n                        </Typography>\n                      </Grid>\n\n                      <Grid item xs={1} />\n                      \n                      {/* Choices */}\n                      <Grid item xs={5}>\n                        {question.question_type === MULTIPLE_CHOICE ||\n                          question.question_type === FILE\n                          ?\n                          // Multiple choice\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.choice?.join(\", \")}\n                          </Typography>\n                          :\n                          // Single choice\n                          <Typography variant=\"body1\" gutterBottom>\n                            {formFields[categoryIndex]?.[question.id]?.choice}\n                          </Typography>\n                        }\n                      </Grid>\n                    </Grid>))}\n              </Grid>\n            </Grid>))}\n      </Grid>\n\n      {/* Back and submit buttons */}\n      <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button onClick={handleBack} style={{ marginRight: 8 }}>\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleConfirmation}\n        >\n          Submit\n        </Button>\n      </Grid>\n    </Grid>\n  );\n\n  const questionsBasedOnCategory = (\n    <Grid container>\n      <Grid container item xs={12} style={{ padding: 48 }}>\n        {housingQuestions\n          .filter(\n            (question) =>\n              question.category === housingCategories[currentCategory]\n          )\n          .map((question) => (\n            <Grid item xs={12} key={question.id} style={{ marginBottom: 32 }}>\n              {question.question_type === SINGLE_CHOICE\n                ? <SingleChoiceQuestion question={question} />\n                : question.question_type === MULTIPLE_CHOICE\n                  ? <MultipleChoiceQuestion question={question} />\n                  : question.question_type === TEXT\n                    ? <TextQuestion\n                      question={question}\n                      formFields={formFields}\n                      handleChange={handleChange}\n                      currentCategory={currentCategory}\n                    />\n                    : question.question_type === SELECT\n                      ? <SelectQuestion question={question} />\n                      : <FileQuestion\n                        question={question}\n                        formFields={formFields}\n                        handleCapture={handleCapture}\n                        currentCategory={currentCategory}\n                      />}\n            </Grid>))}\n      </Grid>\n\n      {/* Back and next buttons */}\n      <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button\n          onClick={handleBack}\n          disabled={currentCategory === 0}\n          style={{ marginRight: 8 }}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleNext}\n          disabled={!completed(currentCategory)}\n        >\n          Next\n        </Button>\n      </Grid>\n    </Grid>\n  );\n\n  const confirmationDialog = (\n    <Confirmation\n      open={open}\n      confirmationText={\"Are you sure you want to submit?\"}\n      thankYouText={\"Thank you for your submission!\"}\n      success={id ? editPostSuccess : createPostSuccess}\n      handleCancel={handleCancel}\n      handleSubmit={handleSubmit}\n      handleClose={handleClose}\n    />\n  );\n\n  return (\n    <>\n      {housingQuestions.length !== 0 && housingCategories.length !== 0 ? (\n        <Paper className={classes.paper}>\n          {stepper}\n\n          <div>\n            {currentCategory === housingCategories.length - 1\n              ? summary\n              : questionsBasedOnCategory}\n          </div>\n\n          {confirmationDialog}\n        </Paper>\n      ) : null}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  roommateQuestions: state.form.roommateQuestions,\n  roommateCategories: state.form.roommateCategories,\n  housingQuestions: state.form.housingQuestions,\n  housingCategories: state.form.housingCategories,\n  profileQuestions: state.form.profileQuestions,\n  profileCategories: state.form.profileCategories,\n  createPostSuccess: state.post.createPostSuccess,\n  editPostSuccess: state.post.editPostSuccess,\n  userPost: state.post.userPost,\n});\n\nconst mapDispatchToProps = {\n  getQuestions,\n  createPost,\n  editPost,\n  resetCreatePostSuccess,\n  resetEditPostSuccess,\n  getUserPosts,\n  getPostList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HousingForm);\n","import React, { useState, useEffect, useRef } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core\"\nimport { Box, Button, Container, ClickAwayListener, Fab, Grid, Grow, MenuList, MenuItem, Paper, Popper, Tooltip, Typography } from \"@material-ui/core\"\nimport Pagination from '@material-ui/lab/Pagination'\nimport AddIcon from \"@material-ui/icons/Add\"\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport RoommateCard from '../components/RoommateCard'\nimport { getPostList, getUserPosts, searchPost, setPage, setFilter } from \"../redux/post/actions\"\nimport { ALL_POSTS, MY_POSTS, PAGINATION, ROOMMATE_FORM } from '../globalConstants'\n\n// Posts consists of list of Roommate and post button.\nconst Roommates = ({\n  user,\n  postLoading,\n  userRoommatePosts, userRoommatePostsCount, getUserPosts,\n  posts, count, getPostList,\n  searchedPost, searchedPostCount, searchItem, searchPost,\n  page, setPage,\n  filter, setFilter,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    tooltip: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n    grid: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const history = useHistory()\n  const anchorRef = useRef(null);\n\n  // States\n  const [open, setOpen] = useState(false);\n\n  // Handlers\n  const handlePost = () => { history.push('/roommate-form') }\n  const handlePageChange = (event, value) => {\n    setPage(value)\n    if (searchedPost) {\n      searchPost(ROOMMATE_FORM, searchItem, value)\n    } else if (filter === MY_POSTS) {\n      getUserPosts(user.id, ROOMMATE_FORM, value)\n    } else {\n      getPostList(ROOMMATE_FORM, value)\n    }\n    window.scroll(0, 0)\n  }\n\n  const handleOpen = () => { setOpen(true); };\n  const handleClose = () => { setOpen(false); };\n  const handleMyPosts = () => {\n    setFilter(MY_POSTS)\n    setPage(1)\n    setOpen(false)\n    getUserPosts(user.id, ROOMMATE_FORM)\n  }\n  const handleAllPosts = () => {\n    setFilter(ALL_POSTS)\n    setPage(1)\n    setOpen(false)\n    getPostList(ROOMMATE_FORM)\n  }\n\n  // componentDidMount\n  useEffect(() => { getPostList(ROOMMATE_FORM, page) }, [])\n  useEffect(() => { if (filter === MY_POSTS && user) getUserPosts(user.id, ROOMMATE_FORM, page) }, [user])\n\n  const postToRender = searchedPost ? searchedPost : filter === MY_POSTS ? userRoommatePosts : posts\n  const countToRender = searchedPost ? searchedPostCount : filter === MY_POSTS ? userRoommatePostsCount : count\n\n  return (\n    <div>\n      {/* Filter button */}\n      {user &&\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 20, marginLeft: 30, marginRight: 30 }}>\n          <Typography variant=\"h6\">Roommate Dashboard</Typography>\n          <Button\n            ref={anchorRef}\n            onClick={handleOpen}\n            startIcon={<FilterListIcon />}\n            style={{ textDecoration: \"none\" }}\n          >\n            {filter}\n          </Button>\n          <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal placement={'bottom-end'}>\n            {({ TransitionProps, placement }) => (\n              <Grow\n                {...TransitionProps}\n                style={{ transformOrigin: placement === 'bottom' ? 'center bottom' : 'center top' }}\n              >\n                <Paper>\n                  <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList>\n                      <MenuItem onClick={handleMyPosts}>My post(s)</MenuItem>\n                      <MenuItem onClick={handleAllPosts}>All posts</MenuItem>\n                    </MenuList>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            )}\n          </Popper>\n        </div>}\n\n      {postToRender.length !== 0\n        ?\n        // List of posts \n        <Container>\n          <Grid container spacing={2}>\n            {postToRender.map((post) => (\n              <Grid\n                item\n                xs={12}\n                md={6}\n                lg={4}\n                key={post.id}\n                className={classes.grid}\n              >\n                <RoommateCard post={post} page={page} />\n              </Grid>))}\n          </Grid>\n        </Container>\n        :\n        <>\n          {/* No post */}\n          {!postLoading && (\n            <div style={{ textAlign: \"center\" }}>\n              <Typography variant=\"subtitle1\">No post.</Typography>\n            </div>)}\n        </>}\n\n      {/* Pagination */}\n      {postToRender.length !== 0\n        ?\n        <Box style={{ width: \"100%\", display: 'flex', justifyContent: 'center', marginTop: 60 }}>\n          <Pagination color=\"primary\" count={Math.ceil(countToRender / PAGINATION)} page={page} onChange={handlePageChange} />\n        </Box>\n        :\n        null}\n\n      {/* Post button */}\n      {user && userRoommatePosts?.length === 0 &&\n        <Tooltip title=\"\" onClick={handlePost}>\n          <Fab color=\"primary\" className={classes.tooltip}>\n            <AddIcon />\n          </Fab>\n        </Tooltip>}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  userRoommatePosts: state.post.userRoommatePosts,\n  posts: state.post.posts,\n  postLoading: state.post.postLoading,\n  searchedPost: state.post.searchedPost,\n  count: state.post.count,\n  userRoommatePostsCount: state.post.userRoommatePostsCount,\n  searchedPostCount: state.post.searchedPostCount,\n  searchItem: state.post.searchItem,\n  page: state.post.page,\n  filter: state.post.filter,\n})\n\nconst mapDispatchToProps = {\n  getPostList,\n  getUserPosts,\n  searchPost,\n  setPage,\n  setFilter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Roommates)\n","import React from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport ChatIcon from \"@material-ui/icons/Chat\"\r\nimport { setPage } from \"../redux/post/actions\"\r\n\r\n// SideNav consists of list of tabs.\r\nconst SideNav = ({ \r\n  user,\r\n  drawerWidth, \r\n  menuOpen, hoverOpen, drawerOpen, \r\n  handleMouseEnter, handleMouseLeave, \r\n  setPage,\r\n}) => {\r\n  // Styling\r\n  const useStyles = makeStyles(theme => ({\r\n    active: {\r\n      background: theme.palette.action.hover,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n      position: 'absolute',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerOpenDelay: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      transitionDelay: '1s'\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(7) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      minHeight: theme.mixins.toolbar.minHeight + 8,\r\n    },\r\n    hidden: {\r\n      display: \"none\",\r\n    },\r\n  }))\r\n\r\n  // Content\r\n  const categories = [\r\n    {\r\n      text: 'Housings',\r\n      icon: <HomeIcon color=\"primary\" />,\r\n      path: '/housings',\r\n      private: false,\r\n    },\r\n    {\r\n      text: 'Roommates',\r\n      icon: <PeopleIcon color=\"primary\" />,\r\n      path: '/roommates',\r\n      private: false,\r\n    },\r\n    {\r\n      text: 'Chat',\r\n      icon: <ChatIcon color=\"primary\" />,\r\n      path: '/chat',\r\n      private: true,\r\n    },\r\n  ]\r\n\r\n  // Hooks\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: drawerOpen,\r\n        [classes.drawerOpenDelay]: !menuOpen && hoverOpen,\r\n        [classes.drawerClose]: !drawerOpen,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: drawerOpen,\r\n          [classes.drawerOpenDelay]: !menuOpen && hoverOpen,\r\n          [classes.drawerClose]: !drawerOpen,\r\n        }),\r\n      }}\r\n    >\r\n      <div className={classes.toolbar} />\r\n\r\n      {/* List of tabs */}\r\n      <List>\r\n        {categories.map(category => (\r\n          <ListItem\r\n            key={category.text}\r\n            button\r\n            onClick={() => {\r\n              history.push(category.path)\r\n              setPage(1)\r\n            }}\r\n            className={clsx({\r\n              [classes.active]: location.pathname === category.path,\r\n              [classes.hidden]: category.private && !user\r\n            })}\r\n          >\r\n            <ListItemIcon>{category.icon}</ListItemIcon>\r\n            <ListItemText primary={category.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setPage,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNav)\r\n","export default __webpack_public_path__ + \"static/media/housemates-logo-without-text-white.46ea2238.svg\";","import React, { useState, useRef, Fragment } from \"react\";\r\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from 'clsx'\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Button,\r\n  ClickAwayListener,\r\n  IconButton,\r\n  InputBase,\r\n  Grow,\r\n  Menu,\r\n  MenuItem,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { logout } from \"../redux/auth/actions\";\r\nimport Logo from \"../static/housemates-logo-without-text-white.svg\";\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport {\r\n  searchPost,\r\n  cancelSearch,\r\n  getPostList,\r\n  setPage,\r\n} from \"../redux/post/actions\";\r\nimport { ROOMMATE_FORM } from \"../globalConstants\";\r\n\r\n// NavBar consists of menu button, logo, title, search bar, and welcome text and profile pic, or login and register buttons, dependent of user authentication, from left to right.\r\nconst NavBar = ({\r\n  handleMenuButton,\r\n  user,\r\n  isAuthenticated,\r\n  logout,\r\n  getPostList,\r\n  searchPost,\r\n  cancelSearch,\r\n  setPage,\r\n  setTheme,\r\n  theme,\r\n}) => {\r\n  // Styling (from left to right)\r\n  const useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      paddingLeft: 24,\r\n      minHeight: theme.mixins.toolbar.minHeight + 8,\r\n    },\r\n    menuButton: {\r\n      marginRight: 25,\r\n      marginLeft: -20,\r\n    },\r\n    logo: {\r\n      marginRight: 10,\r\n    },\r\n    title: {\r\n      marginRight: 30,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: 400,\r\n      height: 40,\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n    },\r\n    buttons: {\r\n      textDecoration: \"none\",\r\n      color: \"white\",\r\n    },\r\n    profilePic: {\r\n      marginLeft: 10,\r\n      cursor: \"pointer\",\r\n    },\r\n    white: {\r\n      color: \"white\",\r\n    },\r\n    pointer: {\r\n      cursor: \"pointer\",\r\n    },\r\n  }));\r\n\r\n  const icon = !theme ? <Brightness7Icon /> : <Brightness3Icon />; // Icons imported from `@material-ui/icons`\r\n\r\n  // Hooks\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const anchorRef = useRef(null);\r\n\r\n  // States\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({ search: \"\" });\r\n\r\n  // Handlers\r\n  const handleMenuOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleProfile = () => {\r\n    setOpen(false);\r\n    history.push(\"/profile\");\r\n  };\r\n  const handleLogout = () => {\r\n    setOpen(false);\r\n    logout();\r\n    history.push(\"/login\");\r\n  };\r\n  const handleClick = () => {\r\n    if (user) history.push(\"/profile\");\r\n  };\r\n  const handleSearch = (searchItem) => {\r\n    setPage(1)\r\n    searchPost(ROOMMATE_FORM, searchItem);\r\n  };\r\n  const handleCancelSearch = () => {\r\n    cancelSearch();\r\n    setData({ search: \"\" });\r\n    getPostList(ROOMMATE_FORM);\r\n    setPage(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          {/* Menu button */}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleMenuButton}\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          {/* Logo */}\r\n          <img\r\n            alt=\"logo\"\r\n            src={Logo}\r\n            width=\"45\"\r\n            height=\"45\"\r\n            className={clsx(classes.logo, { [classes.pointer]: user })}\r\n            onClick={handleClick}\r\n          />\r\n\r\n          {/* Title */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={clsx(classes.title, { [classes.pointer]: user })}\r\n            onClick={handleClick}\r\n          >\r\n            HouseMates\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n\r\n          {/* Search bar */}\r\n          {location.pathname === \"/roommates\" && (\r\n            <SearchBar\r\n              className={classes.search}\r\n              value={data.search}\r\n              onChange={(newValue) => setData({ search: newValue })}\r\n              onRequestSearch={() => handleSearch(data.search)}\r\n              onCancelSearch={handleCancelSearch}\r\n              cancelOnEscape\r\n              searchIcon={<ClearIcon style={{ color: \"white\" }} />}\r\n              closeIcon={<ClearIcon style={{ color: \"white\" }} />}\r\n              placeholder={\"Search...\"}\r\n              classes={{\r\n                input: classes.white,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <div className={classes.grow} />\r\n\r\n          {/* Welcome text and profile pic, or login and register buttons */}\r\n          {isAuthenticated && user ? (\r\n            <Fragment style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div style={{ alignSelf: \"center\" }}>\r\n                <Typography noWrap>\r\n                  Welcome {user.first_name} {user.last_name}!\r\n                </Typography>\r\n              </div>\r\n\r\n              <div>\r\n                {/* Profile pic */}\r\n                <Avatar\r\n                  className={classes.profilePic}\r\n                  onClick={handleMenuOpen}\r\n                  src={user.profile_pic}\r\n                  ref={anchorRef}\r\n                />\r\n                {/* Menu */}\r\n                <Popper\r\n                  open={open}\r\n                  anchorEl={anchorRef.current}\r\n                  role={undefined}\r\n                  transition\r\n                  disablePortal\r\n                  placement={\"bottom-end\"}\r\n                >\r\n                  {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                      {...TransitionProps}\r\n                      style={{\r\n                        transformOrigin:\r\n                          placement === \"bottom\"\r\n                            ? \"center bottom\"\r\n                            : \"center top\",\r\n                      }}\r\n                    >\r\n                      <Paper>\r\n                        <ClickAwayListener onClickAway={handleMenuClose}>\r\n                          <MenuList>\r\n                            <MenuItem>\r\n                              <IconButton\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                aria-label=\"mode\"\r\n                                onClick={() => setTheme(!theme)}\r\n                              >\r\n                                {icon}\r\n                              </IconButton>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={handleProfile}>Profile</MenuItem>\r\n                            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n                          </MenuList>\r\n                        </ClickAwayListener>\r\n                      </Paper>\r\n                    </Grow>\r\n                  )}\r\n                </Popper>\r\n              </div>\r\n            </Fragment>\r\n          ) : (\r\n            <>\r\n              <Button>\r\n                <Link to=\"/login\" className={classes.buttons}>\r\n                  Login\r\n                </Link>\r\n              </Button>\r\n              <Button>\r\n                <Link to=\"/register\" className={classes.buttons}>\r\n                  Register\r\n                </Link>\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logout: () => (dispatch) => dispatch(logout()),\r\n  searchPost,\r\n  cancelSearch,\r\n  getPostList,\r\n  setPage,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, CircularProgress } from \"@material-ui/core\";\nimport Footer from \"../components/Footer\";\nimport SideNav from \"../components/SideNav\";\nimport NavBar from \"../components/NavBar\";\nimport { useLocation } from \"react-router-dom\";\n\n// LayoutTwo consists of NavBar on top of the component, SideNav at the side and Footer at the bottom.\nconst LayoutTwo = ({\n  children,\n  formLoading,\n  postLoading,\n  profileLoading,\n  setTheme,\n  theme,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      minHeight: theme.mixins.toolbar.minHeight + 8,\n    },\n    closeSize: {\n      minHeight: 100,\n      width: theme.spacing(8) + 1,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    openSize: {\n      minHeight: 100,\n      width: drawerWidth + 60,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n  }));\n\n  // Constants\n  const drawerWidth = 190;\n\n  // Hooks\n  const classes = useStyles();\n  const location = useLocation();\n\n  // States\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [hoverOpen, setHoverOpen] = useState(false);\n  const drawerOpen = menuOpen || (!menuOpen && hoverOpen);\n\n  // Handlers\n  const handleMenuButton = () => {\n    setMenuOpen(!menuOpen);\n  };\n  const handleMouseEnter = () => {\n    setHoverOpen(true);\n  };\n  const handleMouseLeave = () => {\n    setHoverOpen(false);\n  };\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      {/* NavBar */}\n      <NavBar\n        handleMenuButton={handleMenuButton}\n        setTheme={setTheme}\n        theme={theme}\n      />\n\n      {/* SideNav */}\n      <SideNav\n        drawerWidth={drawerWidth}\n        menuOpen={menuOpen}\n        hoverOpen={hoverOpen}\n        drawerOpen={drawerOpen}\n        handleMouseEnter={handleMouseEnter}\n        handleMouseLeave={handleMouseLeave}\n      />\n\n      {/* Content */}\n      <main className={classes.content}>\n        {/* Top padding */}\n        <div className={classes.toolbar} />\n\n        <div style={{ display: \"flex\" }}>\n          {/* Side padding */}\n          <div className={!menuOpen ? classes.closeSize : classes.openSize} />\n\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            {/* Loading spinner */}\n            {(postLoading || formLoading || profileLoading) && (\n              <CircularProgress style={{ marginBottom: 40 }} />\n            )}\n\n            {/* Main content */}\n            <div style={{ width: \"100%\" }}>{children}</div>\n\n            {/* Footer */}\n            {location.pathname !== \"/chat\" && (\n              <div style={{ marginTop: 60 }}>\n                <Footer />\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </Paper>\n  );\n};\n\n// Redux\nconst mapStateToProps = (state) => ({\n  formLoading: state.form.formLoading,\n  postLoading: state.post.postLoading,\n  profileLoading: state.auth.profileLoading,\n});\n\nexport default connect(mapStateToProps)(LayoutTwo);\n","export default __webpack_public_path__ + \"static/media/housemates-logo-with-text-black.34fb629a.svg\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport { CircularProgress, Typography } from '@material-ui/core'\nimport Footer from '../components/Footer'\nimport Logo from '../static/housemates-logo-with-text-black.svg'\n\n// LayoutOne consists of logo at the top of the component and footer at the bottom.\nconst LayoutOne = ({ children, title, authLoading }) => {\n \n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      {/* Logo */}\n      <img\n        alt=\"logo\"\n        src={Logo}\n        width=\"150\"\n        height=\"150\"\n        style={{ marginTop: 50 }}\n      />\n\n      {/* Title */}\n      <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n      {/* Loading spinner */}\n      {authLoading && <CircularProgress />}\n\n      {/* Content */}\n      {children}\n\n      {/* Footer */}\n      <div style={{ marginTop: 60 }}><Footer /></div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  authLoading: state.auth.authLoading,\n});\n\nexport default connect(mapStateToProps)(LayoutOne)\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst RouteWrapper = ({\n  title,\n  component: Component,\n  layout: Layout,\n  setTheme,\n  theme,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <Layout {...props} title={title} setTheme={setTheme} theme={theme}>\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nexport default RouteWrapper;\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Snackbar } from \"@material-ui/core\";\nimport {\n  checkAuthentication,\n  resetAuthErrorMsg,\n  setPrevPath,\n  googleAuthenticate,\n} from \"../redux/auth/actions\";\nimport { resetFormErrorMsg } from \"../redux/form/actions\";\nimport { resetPostErrorMsg } from \"../redux/post/actions\";\nimport \"./layout.css\";\n\nimport queryString from \"query-string\";\n\nconst Layout = ({\n  children,\n  checkAuthentication,\n  prevPath,\n  setPrevPath,\n  authErrorMsg,\n  formErrorMsg,\n  postErrorMsg,\n  resetAuthErrorMsg,\n  resetFormErrorMsg,\n  resetPostErrorMsg,\n  googleAuthenticate,\n}) => {\n  // Handlers\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n\n    if (authErrorMsg) resetAuthErrorMsg();\n    if (formErrorMsg) resetFormErrorMsg();\n    if (postErrorMsg) resetPostErrorMsg();\n  };\n  const handleFocus = (e) => {\n    e.target.style.outline = \"none\";\n    e.target.style.backgroundColor = \"rgb(211, 47, 47)\";\n    e.target.classList.add(\"grow\");\n  };\n  const handleBlur = (e) => {\n    button.current.style.backgroundColor = \"rgb(244, 67, 54)\";\n    button.current.classList.remove(\"grow\");\n    e.target.classList.remove(\"grow\");\n  };\n  const handleMouseEnter = (e) => {\n    if (button.current.style.backgroundColor !== \"rgb(211, 47, 47)\")\n      button.current.style.backgroundColor = \"rgb(234, 64, 51)\";\n  };\n  const handleMouseLeave = (e) => {\n    button.current.style.backgroundColor = \"rgb(244, 67, 54)\";\n    button.current.classList.remove(\"grow\");\n    e.target.classList.remove(\"grow\");\n  };\n\n  // Hooks\n  const location = useLocation();\n  const button = useRef();\n\n  // componentDidUpdate\n  useEffect(() => {\n    window.scroll(0, 0);\n    return () => {\n      setPrevPath(location.pathname);\n    };\n  }, [location.pathname]);\n\n  // componentDidMount\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    // console.log(\"State: \" + state);\n    // console.log(\"Code: \" + code);\n\n    if (state && code) {\n      googleAuthenticate(state, code);\n    } else {\n      checkAuthentication();\n    }\n  }, [location]);\n\n  return (\n    <div>\n      {/* Error message */}\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={authErrorMsg || formErrorMsg || postErrorMsg}\n        onClose={handleClose}\n        style={{ zIndex: 1502 }}\n      >\n        <MuiAlert\n          action={\n            <div className={\"buttonHolder\"}>\n              <div\n                className={\"div\"}\n                style={{ zIndex: 1504 }}\n                onClick={handleClose}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n              />\n              <div className={\"close\"} style={{ zIndex: 1503 }}>\n                &#10006;\n              </div>\n              <button\n                autoFocus\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                onClick={handleClose}\n                ref={button}\n                className={\"button\"}\n              />\n            </div>\n          }\n          severity=\"error\"\n          variant=\"filled\"\n        >\n          {authErrorMsg\n            ? authErrorMsg\n            : formErrorMsg\n              ? formErrorMsg\n              : postErrorMsg}\n        </MuiAlert>\n      </Snackbar>\n\n      {/* Sheild */}\n      {(authErrorMsg || formErrorMsg || postErrorMsg) && (\n        <div className={\"sheild\"} style={{ zIndex: 1501 }} />\n      )}\n\n      {/* Layout */}\n      {children}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  authErrorMsg: state.auth.authErrorMsg,\n  formErrorMsg: state.form.formErrorMsg,\n  postErrorMsg: state.post.postErrorMsg,\n  prevPath: state.auth.prevPath,\n});\n\nconst mapDispatchToProps = {\n  checkAuthentication,\n  resetAuthErrorMsg,\n  resetFormErrorMsg,\n  resetPostErrorMsg,\n  setPrevPath,\n  googleAuthenticate,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  ACTIVATE_SUCCESS,\n  ACTIVATE_FAIL,\n  RESEND_ACTIVATION_EMAIL_SUCCESS,\n  RESEND_ACTIVATION_EMAIL_FAIL,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  CHECK_AUTHENTICATION_SUCCESS,\n  CHECK_AUTHENTICATION_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  DELETE_ACCOUNT_SUCCESS,\n  DELETE_ACCOUNT_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAIL,\n  AUTH_LOADING,\n  PROFILE_LOADING,\n  RESET_AUTH_LOADING,\n  RESET_AUTH_ERROR_MSG,\n  RESET_CHANGE_PASSWORD_SUCCESS,\n  RESET_EDIT_BIO_SUCCESS,\n  RESET_EDIT_FAVOURITES_SUCCESS,\n  CHANGE_PROFILE_PIC_SUCCESS,\n  CHANGE_PROFILE_PIC_FAIL,\n  EDIT_BIO_SUCCESS,\n  EDIT_BIO_FAIL,\n  EDIT_FAVOURITES_SUCCESS,\n  EDIT_FAVOURITES_FAIL,\n  SET_PREV_PATH,\n  GOOGLE_AUTH_SUCCESS,\n  GOOGLE_AUTH_FAIL,\n  SET_JUST_REGISTERED_SUCCESS,\n  SET_JUST_REGISTERED_FAIL,\n} from \"./types\";\n\n// Initial states\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: false,\n  user: null,\n  registrationSuccess: false,\n  activationSuccess: false,\n  resendActivationEmailSuccess: false,\n  deleteAccountSuccess: false,\n  resetPasswordSuccess: false,\n  resetPasswordConfirmSuccess: false,\n  changePasswordSuccess: false,\n  editBioSuccess: false,\n  editFavouritesSuccess: false,\n  authErrorMsg: \"\",\n  authLoading: false,\n  profileLoading: false,\n  prevPath: \"\",\n};\n\n// Reducer\nconst authReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        registrationSuccess: true,\n        authLoading: false,\n      };\n\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        registrationSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case ACTIVATE_SUCCESS:\n      return {\n        ...state,\n        activationSuccess: true,\n        authLoading: false,\n      };\n\n    case ACTIVATE_FAIL:\n      return {\n        ...state,\n        activationSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case RESEND_ACTIVATION_EMAIL_SUCCESS:\n      return {\n        ...state,\n        resendActivationEmailSuccess: true,\n        authLoading: false,\n      };\n\n    case RESEND_ACTIVATION_EMAIL_FAIL:\n      return {\n        ...state,\n        resendActivationEmailSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n        authLoading: false,\n      };\n\n    case LOAD_USER_FAIL:\n      return {\n        ...state,\n        user: null,\n        authLoading: false,\n      };\n\n    case CHECK_AUTHENTICATION_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n\n    case CHECK_AUTHENTICATION_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n\n    case GOOGLE_AUTH_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      localStorage.setItem(\"refresh\", payload.refresh);\n      return {\n        ...state,\n        access: payload.access,\n        refresh: payload.refresh,\n        authLoading: false,\n      };\n\n    case GOOGLE_AUTH_FAIL:\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n\n    case DELETE_ACCOUNT_SUCCESS:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        deleteAccountSuccess: true,\n        authLoading: false,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n\n    case DELETE_ACCOUNT_FAIL:\n      return {\n        ...state,\n        deleteAccountSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        resetPasswordSuccess: true,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_FAIL:\n      return {\n        ...state,\n        resetPasswordSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_CONFIRM_SUCCESS:\n      return {\n        ...state,\n        resetPasswordConfirmSuccess: true,\n        authLoading: false,\n      };\n\n    case RESET_PASSWORD_CONFIRM_FAIL:\n      return {\n        ...state,\n        resetPasswordConfirmSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case CHANGE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        changePasswordSuccess: true,\n        authLoading: false,\n      };\n\n    case CHANGE_PASSWORD_FAIL:\n      return {\n        ...state,\n        changePasswordSuccess: false,\n        authErrorMsg: payload,\n        authLoading: false,\n      };\n\n    case AUTH_LOADING:\n      return {\n        ...state,\n        authLoading: true,\n      };\n\n    case RESET_AUTH_LOADING:\n      return {\n        ...state,\n        authLoading: false,\n      };\n\n    case RESET_AUTH_ERROR_MSG:\n      return {\n        ...state,\n        authErrorMsg: \"\",\n      };\n\n    case RESET_CHANGE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        changePasswordSuccess: false,\n      };\n\n    case PROFILE_LOADING:\n      return {\n        ...state,\n        profileLoading: true,\n      };\n\n    case CHANGE_PROFILE_PIC_SUCCESS:\n      const updatedUser = { ...state.user };\n      updatedUser.profile_pic = payload;\n\n      return {\n        ...state,\n        profileLoading: false,\n        user: updatedUser,\n      };\n\n    case CHANGE_PROFILE_PIC_FAIL:\n      return {\n        ...state,\n        profileLoading: false,\n        authErrorMsg: payload,\n      };\n\n    case EDIT_BIO_SUCCESS:\n      return {\n        ...state,\n        profileLoading: false,\n        editBioSuccess: true,\n      };\n\n    case EDIT_BIO_FAIL:\n      return {\n        ...state,\n        profileLoading: false,\n        authErrorMsg: payload,\n        editBioSuccess: false,\n      };\n\n    case EDIT_FAVOURITES_SUCCESS:\n      return {\n        ...state,\n        profileLoading: false,\n        editFavouritesSuccess: true,\n      };\n\n    case EDIT_FAVOURITES_FAIL:\n      return {\n        ...state,\n        profileLoading: false,\n        authErrorMsg: payload,\n        editFavouritesSuccess: false,\n      };\n\n    case RESET_EDIT_BIO_SUCCESS:\n      return {\n        ...state,\n        editBioSuccess: false,\n      };\n\n    case RESET_EDIT_FAVOURITES_SUCCESS:\n      return {\n        ...state,\n        editFavouritesSuccess: false,\n      };\n\n    case SET_PREV_PATH:\n      return {\n        ...state,\n        prevPath: payload,\n      };\n\n    case SET_JUST_REGISTERED_SUCCESS:\n      const updatedUser2 = { ...state.user };\n      updatedUser2.just_registered = payload;\n\n      return {\n        ...state,\n        user: updatedUser2,\n      };\n\n    case SET_JUST_REGISTERED_FAIL:\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { ROOMMATE_FORM, HOUSING_FORM, PROFILE_FORM } from '../../globalConstants';\nimport {\n  GET_QUESTIONS_SUCCESS,\n  GET_QUESTIONS_FAIL,\n  FORM_LOADING,\n  RESET_FORM_LOADING,\n  RESET_FORM_ERROR_MSG,\n} from './types'\n\nconst initialState = {\n  formLoading: false,\n  roommateQuestions: [],\n  roommateCategories: [],\n  housingQuestions: [],\n  housingCategories: [],\n  profileQuestions: [],\n  profileCategories: [],\n  formErrorMsg: '',\n}\n\nconst formReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_QUESTIONS_SUCCESS:\n      const rawCategories = payload.questions.map(question => question.category)\n      const uniqueCategories = [...new Set(rawCategories)]\n      uniqueCategories.push(\"Confirmation\")\n      if (payload.formType === ROOMMATE_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          roommateQuestions: payload.questions,\n          roommateCategories: uniqueCategories,\n        }\n      } else if (payload.formType === HOUSING_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          housingQuestions: payload.questions,\n          housingCategories: uniqueCategories,\n        }\n      } else {\n        return {\n          ...state,\n          formLoading: false,\n          profileQuestions: payload.questions,\n          profileCategories: uniqueCategories,\n        }\n      }\n\n    case GET_QUESTIONS_FAIL:\n      if (payload.formType === ROOMMATE_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          roommateQuestions: [],\n          roommateCategories: [],\n          formErrorMsg: payload.formErrorMsg,\n        }\n      } else if (payload.formType === HOUSING_FORM) {\n        return {\n          ...state,\n          formLoading: false,\n          housingQuestions: [],\n          housingCategories: [],\n          formErrorMsg: payload.formErrorMsg,\n        }\n      } else {\n        return {\n          ...state,\n          formLoading: false,\n          profileQuestions: [],\n          profileCategories: [],\n          formErrorMsg: payload.formErrorMsg,\n        }\n      }\n\n    case FORM_LOADING:\n      return {\n        ...state,\n        formLoading: true,\n      };\n\n    case RESET_FORM_LOADING:\n      return {\n        ...state,\n        formLoading: false,\n      };\n\n    case RESET_FORM_ERROR_MSG:\n      return {\n        ...state,\n        formErrorMsg: '',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default formReducer;\n","import { ALL_POSTS, HOUSING_FORM, ROOMMATE_FORM } from \"../../globalConstants\";\nimport {\n  GET_POST_LIST_SUCCESS,\n  GET_POST_LIST_FAIL,\n  GET_POST_DETAIL_SUCCESS,\n  GET_POST_DETAIL_FAIL,\n  GET_USER_POSTS_SUCCESS,\n  GET_USER_POSTS_FAIL,\n  CREATE_POST_SUCCESS,\n  CREATE_POST_FAIL,\n  EDIT_POST_SUCCESS,\n  EDIT_POST_FAIL,\n  DELETE_POST_SUCCESS,\n  DELETE_POST_FAIL,\n  POST_LOADING,\n  RESET_POST_LOADING,\n  RESET_POST_ERROR_MSG,\n  RESET_CREATE_POST_SUCCESS,\n  RESET_EDIT_POST_SUCCESS,\n  RESET_DELETE_POST_SUCCESS,\n  SEARCH_POST_SUCCESS,\n  SEARCH_POST_FAIL,\n  CANCEL_SEARCH_SUCCESS,\n  CANCEL_SEARCH_FAIL,\n  SET_PAGE,\n  SET_FILTER,\n} from \"./types\";\n\nconst initialState = {\n  postLoading: false,\n  posts: [],\n  housingPosts: [],\n  postsType: [],\n  post: null,\n  housingPost: null,\n  userPosts: [],\n  userRoommatePosts: [],\n  userHousingPosts: [],\n  count: 0,\n  userRoommatePostsCount: 0,\n  userHousingPostsCount: 0,\n  searchedPost: null,\n  searchItem: null,\n  searchedPostCount: 0,\n  next: null,\n  previous: null,\n  postErrorMsg: \"\",\n  createPostSuccess: false,\n  editPostSuccess: false,\n  deletePostSuccess: false,\n  searchPostSuccess: false,\n  cancelSearchSuccess: false,\n  page: 1,\n  filter: ALL_POSTS,\n};\n\nconst postReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POST_LIST_SUCCESS:\n      if (payload.type === ROOMMATE_FORM) {\n        return {\n          ...state,\n          postLoading: false,\n          posts: payload.resdata.results,\n          count: payload.resdata.count,\n          next: payload.resdata.next,\n          previous: payload.resdata.previous,\n          // postsType: payload.type,\n        };\n      } else {\n        return {\n          ...state,\n          postLoading: false,\n          housingPosts: payload.resdata.results,\n          count: payload.resdata.count,\n          next: payload.resdata.next,\n          previous: payload.resdata.previous,\n          // postsType: payload.type,\n        };\n      }\n      \n\n    case GET_POST_LIST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n      };\n\n    case GET_POST_DETAIL_SUCCESS:\n      if (payload.post_form_type === ROOMMATE_FORM) {\n        return {\n          ...state,\n          postLoading: false,\n          post: payload,\n        };\n      } else {\n        return {\n          ...state,\n          postLoading: false,\n          housingPost: payload,\n        };\n      }\n\n\n    case GET_POST_DETAIL_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        post: null,\n        postErrorMsg: payload,\n      };\n\n    case GET_USER_POSTS_SUCCESS:\n      if (payload.type === ROOMMATE_FORM) {\n        return {\n          ...state,\n          postLoading: false,\n          userRoommatePosts: payload.userPosts.results,\n          userRoommatePostsCount: payload.userPosts.count,\n        };\n      } else if (payload.type === HOUSING_FORM) {\n        return {\n          ...state,\n          postLoading: false,\n          userHousingPosts: payload.userPosts.results,\n          userHousingPostsCount: payload.userPosts.count,\n        };\n      } else {\n        return {\n          ...state,\n          postLoading: false,\n          userPosts: payload.userPosts.results,\n        };\n      }\n\n    case GET_USER_POSTS_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        userPosts: null,\n        userRoommatePosts: null,\n        userHousingPosts: null,\n        postErrorMsg: payload,\n      };\n\n    case CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        createPostSuccess: true,\n      };\n\n    case CREATE_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n        createPostSuccess: false,\n      };\n\n    case EDIT_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        editPostSuccess: true,\n      };\n\n    case EDIT_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n        editPostSuccess: false,\n      };\n\n    case DELETE_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        deletePostSuccess: true,\n      };\n\n    case DELETE_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n        deletePostFail: false,\n      };\n\n    case POST_LOADING:\n      return {\n        ...state,\n        postLoading: true,\n      };\n\n    case RESET_POST_LOADING:\n      return {\n        ...state,\n        postLoading: false,\n      };\n\n    case RESET_POST_ERROR_MSG:\n      return {\n        ...state,\n        postErrorMsg: \"\",\n      };\n\n    case RESET_CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        createPostSuccess: false,\n      };\n\n    case RESET_EDIT_POST_SUCCESS:\n      return {\n        ...state,\n        editPostSuccess: false,\n      };\n\n    case RESET_DELETE_POST_SUCCESS:\n      return {\n        ...state,\n        deletePostSuccess: false,\n      };\n\n    case SEARCH_POST_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        searchPostSuccess: true,\n        cancelSearchSuccess: false,\n        searchedPost: payload.searchedPost.results,\n        searchItem: payload.searchItem,\n        searchedPostCount: payload.searchedPost.count,\n      };\n\n    case SEARCH_POST_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n      };\n\n    case CANCEL_SEARCH_SUCCESS:\n      return {\n        ...state,\n        postLoading: false,\n        searchPostSuccess: false,\n        cancelSearchSuccess: true,\n        searchedPost: null,\n        searchedItem: null,\n      };\n\n    case CANCEL_SEARCH_FAIL:\n      return {\n        ...state,\n        postLoading: false,\n        postErrorMsg: payload,\n      };\n\n    case SET_PAGE:\n      return {\n        ...state,\n        page: payload,\n      }\n\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: payload,\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import {\n  GET_ROOM_LIST_SUCCESS,\n  GET_ROOM_LIST_FAIL,\n  CHECK_CHAT_HISTORY_SUCCESS,\n  CHECK_CHAT_HISTORY_FAIL,\n  GET_ROOM_DETAIL_SUCCESS,\n  GET_ROOM_DETAIL_FAIL,\n  POST_ROOM_LIST_SUCCESS,\n  POST_ROOM_LIST_FAIL,\n  EDIT_MSG_SUCCESS,\n  EDIT_MSG_FAIL,\n  SET_CHAT_USER,\n  RESET_CHAT_HISTORY,\n} from \"./types\";\n\nconst initialState = {\n  messages: [],\n  roomList: [],\n  room: null,\n  chatErrorMsg: \"\",\n  chatUser: null,\n  chatHistory: null,\n};\n\nconst chatReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_ROOM_LIST_SUCCESS:\n      return {\n        ...state,\n        roomList: payload,\n      };\n\n    case GET_ROOM_LIST_FAIL:\n      return {\n        ...state,\n        chatErrorMsg: payload,\n      };\n\n    case CHECK_CHAT_HISTORY_SUCCESS:\n      return {\n        ...state,\n        chatHistory: payload,\n      };\n\n    case CHECK_CHAT_HISTORY_FAIL:\n      return {\n        ...state,\n        chatErrorMsg: payload,\n      };\n\n    case GET_ROOM_DETAIL_SUCCESS:\n      return {\n        ...state,\n        room: payload,\n      };\n\n    case GET_ROOM_DETAIL_FAIL:\n      return {\n        ...state,\n        chatErrorMsg: payload,\n      };\n\n    case POST_ROOM_LIST_SUCCESS:\n      return {\n        ...state,\n      };\n\n    case POST_ROOM_LIST_FAIL:\n      return {\n        ...state,\n        chatErrorMsg: payload,\n      };\n\n    case EDIT_MSG_SUCCESS:\n      return {\n        ...state,\n      };\n\n    case EDIT_MSG_FAIL:\n      return {\n        ...state,\n        chatErrorMsg: payload,\n      };\n\n    case SET_CHAT_USER:\n      return {\n        ...state,\n        chatUser: payload,\n      }\n\n    case RESET_CHAT_HISTORY:\n      return {\n        ...state,\n        chatHistory: null,\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default chatReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./auth/reducer\";\nimport formReducer from \"./form/reducer\";\nimport postReducer from \"./post/reducer\";\nimport chatReducer from \"./chat/reducer\";\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  post: postReducer,\n  chat: chatReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === \"LOGOUT\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 })\nconst middlewares = [ thunk ]\n\nconst store = createStore(\n  rootReducer, \n  composeEnhancers(applyMiddleware(...middlewares))\n)\n\nexport default store","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Paper, Typography } from '@material-ui/core'\nimport { ROOMMATE_FORM, IRRELEVANT, A_LITTLE_IMPORTANT, SOMEWHAT_IMPORTANT, VERY_IMPORTANT, MANDATORY } from '../globalConstants'\nimport { loadUser } from '../redux/auth/actions'\nimport { getUserPosts, getPostList, editPost, postLoading, resetEditPostSuccess } from '../redux/post/actions'\nimport './components.css'\n\nconst Matchmaking = ({\n  user,\n  userRoommatePosts, getUserPosts,\n  posts, next, count, getPostList,\n  editPost, resetEditPostSuccess,\n  loading, postLoading,\n}) => {\n\n  // Hooks\n  const history = useHistory()\n\n  // States\n  const [allPosts, setAllPosts] = useState([])\n  const [page, setPage] = useState(2)\n\n  // Helper functions\n  const getScore = priorityLevel => {\n    switch (priorityLevel) {\n      case IRRELEVANT: return 0\n      case A_LITTLE_IMPORTANT: return 1\n      case SOMEWHAT_IMPORTANT: return 10\n      case VERY_IMPORTANT: return 50\n      case MANDATORY: return 250\n      default: return 0\n    }\n  }\n\n  // Handlers\n  const handleMatchmaking = () => {\n    postLoading()\n\n    var myScore = 0\n    var myTotalScore = 0\n    var otherScore = 0\n    var otherTotalScore = 0\n    var numOfQuestions = 0\n\n    // Get my post\n    const myPost = userRoommatePosts[0]\n    // Get my post score list\n    var myScoreList = myPost.score_list\n    if (Array.isArray(myScoreList)) {\n      myScoreList = myScoreList\n        .reduce((prev, curr) => ({ ...prev, [curr.post]: curr }), {})\n      myScoreList = Object.assign({}, myScoreList)\n    }\n\n    allPosts.forEach((post) => {\n      // Get other post\n      const otherPost = post\n      // Get other post score list\n      var otherScoreList = otherPost.score_list\n      if (Array.isArray(otherScoreList)) {\n        otherScoreList = otherScoreList\n          .reduce((prev, curr) => ({ ...prev, [curr.post]: curr }), {})\n        otherScoreList = Object.assign({}, otherScoreList)\n      }\n\n      if (otherPost.owner.id !== myPost.owner.id) {\n        otherPost.selected_choices.forEach((category, i) => {\n          category.forEach((question, j) => {\n            // Update my post score\n            // Multiple choice\n            if (Array.isArray(otherPost.selected_choices[i][j].myChoice)) {\n              var same = 0\n              var total = myPost.selected_choices[i][j].otherChoice.length\n              for (let choice in otherPost.selected_choices[i][j].myChoice) {\n                if (choice in myPost.selected_choices[i][j].otherChoice) same++\n              }\n              myScore += (getScore(myPost.selected_choices[i][j].priority) * (same / total))\n              // Single choice\n            } else if (otherPost.selected_choices[i][j].myChoice === myPost.selected_choices[i][j].otherChoice) {\n              myScore += getScore(myPost.selected_choices[i][j].priority)\n            }\n\n            // Update my post total score\n            myTotalScore += getScore(myPost.selected_choices[i][j].priority)\n\n            // Update other post score\n            // Multiple choice\n            if (Array.isArray(myPost.selected_choices[i][j].otherChoice)) {\n              var same = 0\n              var total = otherPost.selected_choices[i][j].otherChoice.length\n              for (let choice in myPost.selected_choices[i][j].myChoice) {\n                if (choice in otherPost.selected_choices[i][j].otherChoice) same++\n              }\n              otherScore += (getScore(otherPost.selected_choices[i][j].priority) * (same / total))\n              // Single choice\n            } else if (myPost.selected_choices[i][j].myChoice === otherPost.selected_choices[i][j].otherChoice) {\n              otherScore += getScore(otherPost.selected_choices[i][j].priority)\n            }\n\n            // Update other post total score\n            otherTotalScore += getScore(otherPost.selected_choices[i][j].priority)\n\n            // Update number of questions\n            numOfQuestions++\n          })\n        })\n\n        // Calculate average score\n        const averageScore = (Math.pow((myScore / myTotalScore) * (otherScore / otherTotalScore), 1 / numOfQuestions) * 100).toFixed(0)\n\n        // Update my post score list\n        myScoreList = {\n          ...myScoreList,\n          [otherPost.id]: {\n            post: otherPost.id,\n            score: averageScore,\n          }\n        }\n        // Update other post score list\n        otherScoreList = {\n          ...otherScoreList,\n          [myPost.id]: {\n            post: myPost.id,\n            score: averageScore,\n          }\n        }\n\n        // Save other post score list and total score\n        editPost(otherPost.id, otherPost.post_form_type, undefined, undefined, otherScoreList, otherTotalScore, undefined)\n      }\n    })\n    // Save my post score list and total score\n    editPost(myPost.id, myPost.post_form_type, undefined, undefined, myScoreList, myTotalScore, undefined)\n  }\n  const handleClose = () => {\n    resetEditPostSuccess()\n    history.push('/roommates')\n  }\n\n  // componentDidMount\n  useEffect(() => {\n    if (next !== null) {\n      getPostList(ROOMMATE_FORM, page)\n      setPage(page + 1)\n    }\n  }, [next])\n  useEffect(() => setAllPosts([...allPosts, ...posts]), [posts])\n  useEffect(() => user ? getUserPosts(user.id, ROOMMATE_FORM) : null, [user])\n  useEffect(() => userRoommatePosts.length > 0 && allPosts.length === count ? handleMatchmaking() : null, [userRoommatePosts, allPosts])\n\n  return (\n    <Paper style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 20 }}>\n      {/* <div id=\"heart\" /> */}\n      {loading\n        ?\n        <Typography variant=\"h6\">Matching the perfect roommate for you...</Typography>\n        :\n        <>\n          <Typography gutterBottom variant=\"h6\">Matching completed</Typography>\n          <Button autoFocus variant=\"contained\" color=\"primary\" onClick={handleClose}>Return to roommate dashboard</Button>\n        </>}\n    </Paper>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  userRoommatePosts: state.post.userRoommatePosts,\n  posts: state.post.posts,\n  loading: state.post.postLoading,\n  next: state.post.next,\n  count: state.post.count,\n})\n\nconst mapDispatchToProps = {\n  loadUser,\n  getUserPosts,\n  getPostList,\n  editPost,\n  postLoading: () => (dispatch) => dispatch(postLoading()),\n  resetEditPostSuccess,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Matchmaking)\n\n// preliminaries \n// https://www.youtube.com/watch?v=m9PiPlRuy6E&t=304s\n\n//  (only for roommates post, in profile form its empty )\n// radiogroup for importance of each question, value stored in selected_choices\n// theres a score_list, total_score field in post model\n\n// assume only 1 post per user first \n\n\n\n\n// algo\n// get current_post.selected_choices (posts)\n// get current_post.owner.selected_choices (profile)\n\n// get other_post.selected_choices (posts)\n// get other_post.owner.selected_choices (profile)\n\n// n = 0\n\n// loop through length of selected_choices (posts), at every iteration:\n//     get score1 of current_post.choice, add to current_post.total_score (if dh)\n//     get score2 of other_post.choice, add to other_post.total_score (if dh)\n\n//     if current_post.choice === other_post.owner.choice:\n//         other_post.obtained_score += score1\n\n//     if current_post.owner.choice === other_post.choice:\n//         current_post.obtained_score += score2\n\n//     n += 1\n\n\n// percentage of other_post matching current_post = other_post.obtained_score / current_post.total_score \n// percentage of current_post matching other_post = current_post.obtained_score / other_post.total_score \n\n// matching percentage = nth root of 2 percentages\n\n// add to score_list of both posts:\n//     in other_post -> \"current_post.owner.id\":\"matching percentage\"\n//     in current_post -> \"other_post.owner.id\":\"matching percentage\"\n\n\n\n\n\n\n// displaying \n// at each post, if current user.id === score_list key, display matching percentage\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { getPostDetail } from \"../redux/post/actions\";\nimport HousingForm from \"./HousingForm\";\n\nconst EditHousingForm = ({ housingPost, getPostDetail }) => {\n  // Hooks\n  const { id } = useParams();\n  const [initialFormFields, setInitialFormFields] = useState({});\n\n  // componentDidMount\n  useEffect(() => {\n    getPostDetail(id);\n  }, []);\n\n  useEffect(() => {\n    const categories = housingPost?.selected_choices\n      .map(category => category\n        .reduce((prev, curr) => ({ ...prev, [curr.question]: curr}), {})\n      )\n    const initialFormFields = Object.assign({}, categories)\n    setInitialFormFields(initialFormFields)\n  }, [housingPost])\n\n  return (\n    <div>\n      <HousingForm initialFormFields={initialFormFields} id={id} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  housingPost: state.post.housingPost,\n})\n\nconst mapDispatchToProps = {\n  getPostDetail,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditHousingForm);\n","import React, { useState } from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { MobileStepper, IconButton } from '@material-ui/core'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport SwipeableViews from 'react-swipeable-views'\nimport { autoPlay } from 'react-swipeable-views-utils'\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews)\n\nconst ImageGallery = ({ tutorialSteps }) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: 500,\n      position: \"relative\",\n    },\n    img: {\n      height: 300,\n      display: 'block',\n      overflow: 'hidden',\n      width: 500,\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = useState(0)\n  const maxSteps = tutorialSteps.length\n\n  // Handlers\n  const handleNext = () => { setActiveStep((prevActiveStep) => prevActiveStep + 1) }\n  const handleBack = () => { setActiveStep((prevActiveStep) => prevActiveStep - 1) }\n  const handleStepChange = (step) => { setActiveStep(step) }\n\n  return (\n    <div className={classes.root}>\n      <AutoPlaySwipeableViews\n        axis={'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n        style={{ position: 'relative' }}\n      >\n        {tutorialSteps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) <= 2\n              ? <img className={classes.img} src={step} />\n              : null}\n          </div>))}\n      </AutoPlaySwipeableViews>\n\n      {maxSteps > 1 &&\n        <MobileStepper\n          steps={maxSteps}\n          activeStep={activeStep}\n          nextButton={\n            <IconButton\n              size=\"small\"\n              onClick={handleNext}\n              disabled={activeStep === maxSteps - 1}\n            >\n              <KeyboardArrowRight />\n            </IconButton>}\n          backButton={\n            <IconButton\n              size=\"small\"\n              onClick={handleBack}\n              disabled={activeStep === 0}\n            >\n              <KeyboardArrowLeft />\n            </IconButton>}\n          style={{ position: \"absolute\", bottom: 0, opacity: 0.5, height: 15 }}\n        />}\n    </div>\n  )\n}\n\nexport default ImageGallery","import React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Button, Card, CardContent, CardHeader, Chip, Fab, Grid, IconButton, Paper, Tooltip, Typography } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { getPostDetail, getUserPosts } from \"../redux/post/actions\";\nimport { getQuestions } from \"../redux/form/actions\";\nimport { setChatUser } from \"../redux/chat/actions\";\nimport { HOUSING_FORM } from \"../globalConstants\";\nimport ImageGallery from \"../components/ImageGallery\";\n\n// HousingDetail consists of profile pic, name, categories of tags and post button.\nconst HousingDetail = ({\n  user,\n  userHousingPosts, getUserPosts,\n  housingPost, getPostDetail,\n  housingCategories, getQuestions,\n  prevPath,\n  setChatUser,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    avatar: {\n      height: 50,\n      width: 50,\n      marginBottom: 20,\n      marginRight: 10,\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    tag: {\n      marginRight: 5,\n      marginTop: 5,\n    },\n    category: {\n      marginBottom: 30,\n    },\n    card: {\n      width: \"100%\",\n      marginLeft: 23,\n      marginRight: 23,\n    },\n    tooltip: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n    media: {\n      width: 400,\n      height: 300,\n      margin: \"auto\",\n    },\n  }));\n\n  // Hooks\n  const classes = useStyles();\n  const history = useHistory();\n  const { id } = useParams();\n\n  // Handlers\n  const handleBack = () => { history.push(prevPath); };\n  const handleClick = () => { history.push(\"/housing-form\"); };\n  const handleChat = () => {\n    setChatUser(housingPost.owner)\n    history.push(\"/chat\")\n  }\n\n  // componentDidMount\n  useEffect(() => {\n    if (housingCategories.length === 0) getQuestions(HOUSING_FORM);\n    getPostDetail(id);\n  }, []);\n  useEffect(() => (user ? getUserPosts(user.id) : null), [user]);\n\n  return (\n    <div className={classes.card}>\n      {housingPost?.id.toString() === id.toString()\n        ?\n        <>\n          <Card>\n            <CardHeader\n              avatar={\n                <IconButton onClick={handleBack}>\n                  <ArrowBackIcon />\n                </IconButton>\n              }\n            />\n\n            <CardContent className={classes.content}>\n              <ImageGallery tutorialSteps={housingPost.images} />\n\n              <br />\n\n              <Typography variant=\"h5\">{housingPost.selected_choices[0][0].choice}</Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">{housingPost.selected_choices[0][1].choice}</Typography>\n\n              <br /><br />\n\n              <Grid container>\n                <Grid container item xs={12} md={6}>\n                  <Grid item xs={1} />\n                  <Grid item xs={11}>\n                    {housingPost.selected_choices.map((category, index) => (\n                      index !== 0\n                        ?\n                        <div key={category} className={classes.category}>\n                          <Typography\n                            variant=\"body1\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                          >\n                            {housingCategories[index]}\n                          </Typography>\n\n                          {category.map((question) => (Array.isArray(question.choice)\n                            ?\n                            <>\n                              {question.choice.map((choice) => (\n                                <Chip\n                                  key={choice}\n                                  className={classes.tag}\n                                  label={choice}\n                                  color=\"primary\"\n                                />\n                              ))}\n                            </>\n                            :\n                            <Chip\n                              key={question}\n                              className={classes.tag}\n                              label={question.choice}\n                              color=\"primary\"\n                            />\n                          ))}\n                        </div>\n                        :\n                        null\n                    ))}\n                  </Grid>\n                </Grid>\n                <Grid container item xs={12} md={6}>\n                  <Grid item xs={1} />\n                  <Grid item xs={10}>\n                    <Paper style={{ padding: 20 }}>\n                      {/* Price */}\n                      <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }}>\n                        <Typography variant=\"h6\">SGD {housingPost.selected_choices[0][3].choice}</Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">&nbsp;/ night</Typography>\n                      </div>\n\n                      {/* Location */}\n                      <Typography variant=\"body2\" color=\"textSecondary\">Located at {housingPost.selected_choices[0][2].choice}</Typography>\n\n                      <br />\n\n                      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        {/* Profile pic */}\n                        <Avatar\n                          className={classes.avatar}\n                          src={housingPost.owner.profile_pic}\n                        />\n\n                        <div>\n                          {/* Name */}\n                          <Typography>{housingPost.owner.first_name} {housingPost.owner.last_name}</Typography>\n                          {/* Bio */}\n                          <Typography variant=\"body1\" color=\"textSecondary\">\n                            {housingPost.owner.bio.length > 25 ? housingPost.owner.bio.substring(0, 25) + \"...\" : housingPost.owner.bio}\n                          </Typography>\n                        </div>\n                      </div>\n\n                      {/* Chat button */}\n                      {user && user.id !== housingPost.owner.id &&\n                        <Button\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={handleChat}\n                        >\n                          Chat with me\n                        </Button>}\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={1} />\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n\n          {user && userHousingPosts?.length === 0 && (\n            <Tooltip title=\"\" onClick={handleClick}>\n              <Fab color=\"primary\" className={classes.tooltip}>\n                <AddIcon />\n              </Fab>\n            </Tooltip>\n          )}\n        </>\n        :\n        null}\n    </div>\n  );\n};\n\nconst mapPropsToState = (state) => ({\n  user: state.auth.user,\n  userHousingPosts: state.post.userHousingPosts,\n  housingPost: state.post.housingPost,\n  housingCategories: state.form.housingCategories,\n  prevPath: state.auth.prevPath,\n});\n\nconst mapDispatchToProps = {\n  getQuestions,\n  getPostDetail,\n  getUserPosts,\n  setChatUser,\n};\n\nexport default connect(mapPropsToState, mapDispatchToProps)(HousingDetail);\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router'\nimport RoommateForm from '../pages/RoommateForm'\nimport { getPostDetail } from '../redux/post/actions'\nimport { ROOMMATE_FORM } from '../globalConstants'\n\nconst EditRoommateForm = ({ post, getPostDetail }) => {\n  // Hooks\n  const { id } = useParams()\n  const [initialFormFields, setInitialFormFields] = useState({})\n\n  // componentDidMount\n  useEffect(() => { getPostDetail(id) }, [])\n\n  useEffect(() => {\n    const categories = post?.selected_choices\n      .map(category => category\n        .reduce((prev, curr) => ({ ...prev, [curr.question]: curr}), {})\n      )\n    const initialFormFields = Object.assign({}, categories)\n    setInitialFormFields(initialFormFields)\n  }, [post])\n\n  return (\n    <div>\n      <RoommateForm\n        initialFormFields={initialFormFields}\n        id={id}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n})\n\nconst mapDispatchToProps = {\n  getPostDetail,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditRoommateForm)\n","import React, { useState } from \"react\"\nimport clsx from 'clsx'\nimport { Avatar, ButtonBase, ListItem, ListItemAvatar, ListItemText, Paper, makeStyles, Typography } from '@material-ui/core'\n\nconst ChatListItem = ({ user, name, pic, msg, time, unreadMsgs, animationDelay, active, setRoom, room, editMsg }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    active: {\n      backgroundColor: theme.palette.action.hover,\n    },\n  }))\n\n  // Hooks\n  const classes = useStyles()\n\n  // States\n  const [enter, setEnter] = useState(false)\n\n  // Handlers\n  const handleClick = () => {\n    setRoom(room.label)\n    room.messages.forEach(msg => {\n      if (!msg.hasRead && msg.user_id.toString() !== user.id.toString()) editMsg(msg.id, true)\n    })\n  }\n  const handleMouseEnter = () => { setEnter(true) }\n  const handleMouseLeave = () => { setEnter(false) }\n\n  return (\n    <Paper style={{ width: \"100%\", marginBottom: 5, minWidth: 250 }}>\n      <ButtonBase\n        style={{ width: \"100%\", borderRadius: 5 }}\n        className={clsx({ [classes.active]: (active || enter) })}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <ListItem\n          style={{ animationDelay: `0.${animationDelay}s`, marginBottom: 10, display: \"flex\" }}\n          onClick={handleClick}\n        >\n          <ListItemAvatar>\n            <Avatar src={pic} />\n          </ListItemAvatar>\n          <div style={{ display: 'flex', flexDirection: \"column\", width: \"100%\", overflow: \"hidden\" }}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n              {/* Name */}\n              <Typography variant=\"body1\">{name}</Typography>\n\n              {/* Unread messages */}\n              {unreadMsgs !== 0 &&\n                <div style={{ width: 20, height: 20, backgroundColor: \"red\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"50%\" }}>\n                  <div style={{ color: \"white\", textAlign: \"center\" }}>{unreadMsgs}</div>\n                </div>}\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              {/* Latest message */}\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {msg.length > 15 ? msg.substring(0, 15) + \"...\" : msg}\n              </Typography>\n\n              {/* Time */}\n              <Typography variant=\"body2\" color=\"textSecondary\" style={{ overflow: \"hidden\" }}>\n                {time.split(\" \")[1].split(\":\")[0] + \":\" + time.split(\" \")[1].split(\":\")[1] + \" \" + time.split(\" \")[2]}\n              </Typography>\n            </div>\n          </div>\n        </ListItem>\n      </ButtonBase>\n    </Paper>\n  )\n}\n\nexport default ChatListItem\n","import React from \"react\";\nimport clsx from 'clsx'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst ChatMessage = ({ user, msg, time }) => {\n  // Styling\n  const useStyles = makeStyles(theme => ({\n    msg: {\n      backgroundColor: theme.palette.grey[400],\n      padding: 10,\n      marginBottom: 5,\n      marginRight: 5,\n      borderRadius: 10,\n      maxWidth: \"50%\",\n      textOverflow: \"ellipsis\", \n      overflow: \"hidden\", \n      whiteSpace: \"nowrap\", \n      display: \"flex\", \n      flexDirection: 'column', \n    },\n    right: {\n      justifyContent: 'flex-end',\n    },\n    blue: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n      alignItems: \"flex-end\",\n    }\n  }))\n\n  // Hooks\n  const classes = useStyles()\n\n  return (\n    <div\n      style={{ animationDelay: `0.8s`, display: 'flex', alignItems: 'center' }}\n      className={clsx({ [classes.right]: user })}\n    >\n      <div className={clsx(classes.msg, { [classes.blue]: user })}>\n        <Typography variant=\"body1\">{msg}</Typography>\n        <Typography variant=\"body2\">\n          {time\n            ? time.split(\" \")[1].split(\":\")[0] + \":\" + time.split(\" \")[1].split(\":\")[1] + \" \" + time.split(\" \")[2]\n            : null}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatMessage\n","import React, { useState, useEffect, useRef } from \"react\"\nimport { useLocation, Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport { uniqueNamesGenerator, adjectives, colors, animals } from \"unique-names-generator\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\"\nimport { Avatar, ButtonBase, Divider, Grid, IconButton, List, Paper, TextField, Typography } from \"@material-ui/core\"\nimport AddIcon from '@material-ui/icons/Add'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport SearchBar from \"material-ui-search-bar\"\nimport SendIcon from '@material-ui/icons/Send'\nimport ChatListItem from \"../components/ChatListItem\"\nimport ChatMessage from \"../components/ChatMessage\"\nimport { checkChatHistory, editMsg, getRoomList, postRoom, resetChatHistory } from \"../redux/chat/actions\"\nimport \"./pages.css\"\n\nconst Chat = ({\n  user, isAuthenticated,\n  roomList, getRoomList,\n  postRoom,\n  chatUser, chatHistory, checkChatHistory, resetChatHistory,\n  editMsg,\n}) => {\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    search: {\n      width: \"100%\",\n      height: 40,\n    },\n    list: {\n      overflow: \"auto\",\n    },\n    content: {\n      width: \"100%\",\n      overflow: \"auto\",\n    },\n  }));\n\n  // States\n  const [messages, setMessages] = useState([]);\n  const [activeRoom, setActiveRoom] = useState(null);\n  const [client, setClient] = useState(null);\n  const [msgText, setMsgText] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [roomListByLabel, setRoomListByLabel] = useState([]);\n  const [unreadMsgs, setUnreadMsgs] = useState(null)\n\n  // Hooks\n  const classes = useStyles();\n  const location = useLocation();\n  const textInput = useRef();\n\n  // Constants\n  const ws_scheme = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n  const host = window.location.host === \"localhost:8000\" ? \"localhost:8000/\" : \"housematesorbital.herokuapp.com/\";\n\n  // Handlers\n  const handleChange = (e) => setMsgText(e.target.value);\n  const handleSend = (e) => {\n    e.preventDefault();\n    client.send(\n      JSON.stringify({\n        type: \"message\",\n        message: msgText,\n        owner: user.id,\n      })\n    );\n    setMsgText(\"\");\n  };\n  // Mark as read\n  useEffect(() => {\n    if (!msgText) {\n      messages?.forEach(msg => {\n        if (!msg.hasRead && msg.user_id.toString() !== user.id.toString()) {\n          editMsg(msg.id, true)\n        }\n      })\n    }\n  }, [msgText])\n\n  // useEffects\n  // Get user room list\n  useEffect(() => { if (user) getRoomList(user.id) }, [user])\n  // Process user room list\n  useEffect(() => {\n    const temp = roomList.reduce((prev, curr) => ({ ...prev, [curr.label]: curr }), {})\n    setRoomListByLabel(temp)\n    // const temp2 = roomList.reduce((prevRoom, currRoom) => ({\n    //   ...prevRoom,\n    //   [currRoom.label]: currRoom.messages.reduce((prevMsg, currMsg) =>\n    //     prevMsg + (!currMsg.hasRead && currMsg.user_id.toString() !== user.id.toString() ? 1 : 0), 0)\n    // }), {})\n    // setUnreadMsgs(temp2)\n  }, [roomList])\n  // Set active room and messages\n  useEffect(() => {\n    if (roomListByLabel[room]?.id !== activeRoom?.id) setActiveRoom(roomListByLabel[room])\n    setMessages(roomListByLabel[room]?.messages)\n  }, [roomListByLabel])\n  // Connect to active room\n  useEffect(() => {\n    if (room) {\n      const temp = new W3CWebSocket(ws_scheme + \"://\" + host + \"ws/chat/\" + room + \"/\")\n      setClient(temp)\n    }\n  }, [room]);\n  useEffect(() => {\n    if (client) client.onopen = () => { console.log(\"WebSocket Client Connected: \", room) }\n    if (room) {\n      if (roomListByLabel[room]?.id !== activeRoom?.id) setActiveRoom(roomListByLabel[room])\n      setMessages(roomListByLabel[room]?.messages)\n    }\n    if (user) getRoomList(user.id)\n  }, [client])\n  // Update messages\n  useEffect(() => {\n    if (client) {\n      client.onopen = () => {\n        console.log(\"WebSocket Client Connected: \", room);\n      };\n\n      client.onmessage = (message) => {\n        const dataFromServer = JSON.parse(message.data);\n        console.log(\"got reply! \", dataFromServer.type);\n        if (dataFromServer) {\n          setMessages([\n            ...messages,\n            {\n              message: dataFromServer.message,\n              user_id: dataFromServer.owner,\n            },\n          ]);\n        }\n        getRoomList(user.id);\n      };\n    }\n  })\n  // Scroll to bottom of messages\n  useEffect(() => {\n    const chatBody = document.getElementById('chatBody')\n    if (chatBody) chatBody.scrollTo(0, chatBody.scrollHeight);\n  }, [messages])\n  // Focus on text field\n  useEffect(() => {\n    textInput?.current?.focus()\n    setMsgText(\"\")\n    messages?.forEach(msg => {\n      if (!msg.hasRead && msg.user_id.toString() !== user.id.toString()) {\n        editMsg(msg.id, true)\n      }\n    })\n  }, [activeRoom])\n  // Get chat history\n  useEffect(() => { if (chatUser) checkChatHistory(user.id, chatUser.id) }, [chatUser])\n  // Check whether to create new room\n  useEffect(() => {\n    if (chatHistory) {\n      if (chatHistory.length === 0) {\n        const shortName = uniqueNamesGenerator({\n          dictionaries: [colors, adjectives, animals],\n        });\n        postRoom(user.id, chatUser.id, shortName);\n        getRoomList(user.id);\n        setRoom(shortName);\n      } else {\n        setRoom(chatHistory[0].label);\n      }\n      resetChatHistory();\n    }\n  }, [chatHistory]);\n\n  if (!isAuthenticated) {\n    return (\n      <Redirect\n        to={{ pathname: \"/login\", state: { from: location.pathname } }}\n      />\n    );\n  }\n\n  return (\n    <>\n      {roomList?.length === 0\n        ?\n        <>\n          {/* No post */}\n          <div>\n            <Typography variant=\"h6\" style={{ marginLeft: 5 }}>\n              Chat\n            </Typography>\n            <div style={{ textAlign: \"center\" }}>\n              <Typography variant=\"subtitle1\">No chats.</Typography>\n            </div>\n          </div>\n        </>\n        :\n        <Grid container spacing={3}>\n          {/* Chat list */}\n          <Grid container item xs={3}>\n            {/* Title */}\n            <Grid item xs={12} style={{ height: \"8vh\" }}>\n              <Typography variant=\"h6\" style={{ marginLeft: 5 }}>\n                Chat\n              </Typography>\n            </Grid>\n\n            {/* Search bar */}\n            {/* <Grid item xs={12}>\n              <SearchBar\n                className={classes.search}\n                cancelOnEscape\n                searchIcon={<ClearIcon />}\n                closeIcon={<ClearIcon />}\n                placeholder={\"Search...\"}\n                classes={{\n                  input: { color: \"white\" }\n                }}\n              />\n            </Grid> */}\n\n            {/* Add button */}\n            {/* <Grid item xs={12}>\n              <ButtonBase style={{ width: \"100%\" }}>\n                <Paper style={{ width: \"100%\", display: 'flex', padding: 10 }}>\n                  <AddIcon />\n                  <Typography variant=\"body1\" style={{ marginLeft: 10 }}>Start a new conversation</Typography>\n                </Paper>\n              </ButtonBase>\n            </Grid> */}\n\n            {/* Chat list */}\n            <Grid item xs={12} style={{ height: \"70vh\" }}>\n              <List\n                dense={true}\n                className={classes.list}\n                style={{ padding: 0, overflow: \"hidden\" }}\n              >\n                {roomList.map((room, index) => (\n                  <>\n                    <ChatListItem\n                      key={room.id}\n                      name={\n                        user.id === room.owner1.id\n                          ? room.owner2.first_name + \" \" + room.owner2.last_name\n                          : room.owner1.first_name + \" \" + room.owner1.last_name\n                      }\n                      pic={\n                        user.id === room.owner1.id\n                          ? room.owner2.profile_pic\n                          : room.owner1.profile_pic\n                      }\n                      msg={\n                        (activeRoom?.id === room.id &&\n                          messages?.[messages?.length - 1]?.message) ||\n                        room?.messages[room?.messages?.length - 1]?.message\n                      }\n                      time={\n                        (activeRoom?.id === room.id &&\n                          messages?.[messages?.length - 1]?.timestamp) ||\n                        room?.messages[room?.messages?.length - 1]?.timestamp}\n                      // unreadMsgs={unreadMsgs?.[room.label]}\n                      unreadMsgs={\n                        (activeRoom?.id === room.id &&\n                          messages?.reduce((prev, curr) => prev + (!curr.hasRead && curr.user_id.toString() !== user.id.toString() ? 1 : 0), 0)) ||\n                        room?.messages.reduce((prev, curr) =>\n                          prev + (!curr.hasRead && curr.user_id.toString() !== user.id.toString() ? 1 : 0), 0)\n                      }\n                      user={user}\n                      setRoom={setRoom}\n                      editMsg={editMsg}\n                      room={room}\n                      active={room.id === activeRoom?.id}\n                      animationDelay={index + 1}\n                    />\n                  </>\n                ))}\n              </List>\n            </Grid>\n          </Grid>\n\n          {activeRoom ? (\n            // Chat content\n            <Grid container item spacing={1} xs={9} style={{ width: \"100%\" }}>\n              {/* Header */}\n              <Grid item xs={12}>\n                <Paper\n                  style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    padding: 10,\n                    alignItems: \"center\",\n                    elevation: 0,\n                  }}\n                >\n                  <Avatar src={user?.id === activeRoom?.owner1?.id\n                    ? activeRoom?.owner2?.profile_pic\n                    : activeRoom?.owner1?.profile_pic} />\n                  <Typography variant=\"h6\" style={{ marginLeft: 20 }}>\n                    {user?.id === activeRoom?.owner1.id\n                      ? activeRoom?.owner2.first_name + \" \" + activeRoom?.owner2.last_name\n                      : user?.id === activeRoom?.owner2.id\n                        ? activeRoom?.owner1.first_name + \" \" + activeRoom?.owner1.last_name\n                        : \"\"}\n                  </Typography>\n                </Paper>\n              </Grid>\n\n              {/* Body */}\n              <Grid item xs={12} style={{ width: \"100%\" }}>\n                <Paper\n                  style={{ width: \"100%\", padding: 10, elevation: 0 }}\n                  elevation={0}\n                >\n                  <div\n                    style={{ width: \"100%\", height: \"50vh\", overflow: \"auto\" }}\n                    id=\"chatBody\"\n                  >\n                    {messages?.map((msg, index) => (\n                      <>\n                        <ChatMessage\n                          animationDelay={index + 2}\n                          user={msg.user_id.toString() === user.id.toString()}\n                          msg={msg.message}\n                          time={msg.timestamp}\n                        />\n                        {/* <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" gutterBottom>\n                          1/3/2021\n                        </Typography> */}\n                      </>\n                    ))}\n                  </div>\n                </Paper>\n              </Grid>\n\n              {/* Footer */}\n              <Grid item xs={12}>\n                <Paper\n                  style={{\n                    width: \"100%\",\n                    paddingLeft: 10,\n                    paddingRight: 10,\n                    elevation: 0,\n                  }}\n                  elevation={0}\n                >\n                  <form\n                    noValidate\n                    onSubmit={handleSend}\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <TextField\n                      variant=\"outlined\"\n                      value={msgText}\n                      placeholder=\"Type here...\"\n                      fullWidth\n                      size=\"small\"\n                      className=\"inputRounded\"\n                      onChange={(e) => handleChange(e)}\n                      inputRef={textInput}\n                    />\n                    <IconButton\n                      color=\"primary\"\n                      type=\"submit\"\n                      style={{ margin: 5 }}\n                      disabled={!msgText || msgText.replace(/\\s/g, '').length === 0}\n                    >\n                      <SendIcon />\n                    </IconButton>\n                  </form>\n                </Paper>\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={9} style={{ width: \"100%\", height: \"78vh\" }}>\n              <Paper\n                style={{\n                  width: \"100%\",\n                  height: \"78vh\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"body1\" style={{ marginLeft: 20, marginRight: 20 }}>\n                  Select a user to start chatting!\n                </Typography>\n              </Paper>\n            </Grid>)}\n        </Grid>}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  roomList: state.chat.roomList,\n  chatUser: state.chat.chatUser,\n  chatHistory: state.chat.chatHistory,\n});\n\nconst mapDispatchToProps = {\n  getRoomList,\n  postRoom,\n  checkChatHistory,\n  resetChatHistory,\n  editMsg,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import React, { useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { indigo, green, yellow, blue } from \"@material-ui/core/colors\";\nimport Activate from \"./pages/Activate\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Home from \"./pages/Home\";\nimport Housings from \"./pages/Housings\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport Register from \"./pages/Register\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport DeleteAccount from \"./pages/DeleteAccount\";\nimport ResendActivationEmail from \"./pages/ResendActivationEmail\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport ResetPasswordConfirm from \"./pages/ResetPasswordConfirm\";\nimport RoommateDetail from \"./pages/RoommateDetail\";\nimport RoommateForm from \"./pages/RoommateForm\";\nimport HousingForm from \"./pages/HousingForm\";\nimport Roommates from \"./pages/Roommates\";\nimport LayoutTwo from \"./layout/LayoutTwo\";\nimport LayoutOne from \"./layout/LayoutOne\";\nimport RouteWrapper from \"./layout/RouteWrapper\";\nimport Layout from \"./hocs/Layout\";\nimport store from \"./redux/store\";\nimport Matchmaking from \"./components/Matchmaking\";\nimport EditHousingForm from \"./pages/EditHousingForm\";\nimport HousingDetail from \"./pages/HousingDetail\";\nimport EditRoommateForm from \"./pages/EditRoommateForm\";\nimport Chat from \"./pages/Chat\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter, Switch, Route, useLocation } from \"react-router-dom\";\n\nconst App = () => {\n  // Styling\n  const light = createMuiTheme({\n    palette: {\n      primary: indigo,\n      background: {\n        default: \"#ffffff\",\n      },\n    },\n  });\n\n  const dark = createMuiTheme({\n    palette: {\n      // primary: indigo,\n      type: \"dark\",\n      background: {\n        default: \"#424242\",\n      },\n      text: {\n        primary: \"#ffffff\",\n      },\n    },\n  });\n\n  const [theme, setTheme] = useState(true);\n  const appliedTheme = theme ? light : dark;\n\n  // const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  // const theme2 = React.useMemo(\n  //   () =>\n  //     createMuiTheme({\n  //       palette: {\n  //         type: prefersDarkMode ? \"dark\" : \"light\",\n  //       },\n  //     }),\n  //   [prefersDarkMode]\n  // );\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={appliedTheme}>\n        <CssBaseline />\n        <BrowserRouter>\n          <Layout>\n            <Switch>\n              {/* Routes with LayoutOne */}\n              <RouteWrapper\n                path=\"/login\"\n                title={\"Login\"}\n                component={Login}\n                layout={LayoutOne}\n              />\n              <RouteWrapper\n                path=\"/delete-account\"\n                title={\"Delete Account\"}\n                component={DeleteAccount}\n                layout={LayoutOne}\n              />\n              <RouteWrapper\n                path=\"/register\"\n                title={\"Registration\"}\n                component={Register}\n                layout={LayoutOne}\n              />\n              <RouteWrapper\n                path=\"/change-password\"\n                title={\"Change Password\"}\n                component={ChangePassword}\n                layout={LayoutOne}\n              />\n              <RouteWrapper\n                path=\"/reset-password\"\n                title={\"Reset Password\"}\n                component={ResetPassword}\n                layout={LayoutOne}\n              />\n              <RouteWrapper\n                path=\"/password/reset/confirm/:uid/:token\"\n                title={\"Reset Password\"}\n                component={ResetPasswordConfirm}\n                layout={LayoutOne}\n              />\n              <RouteWrapper\n                path=\"/activate/:uid/:token\"\n                title={\"Account Activation\"}\n                component={Activate}\n                layout={LayoutOne}\n              />\n              <RouteWrapper\n                path=\"/resend-activation-email\"\n                title={\"Resend Activation Email\"}\n                component={ResendActivationEmail}\n                layout={LayoutOne}\n              />\n\n              {/* Routes with LayoutTwo */}\n              <RouteWrapper\n                exact\n                path=\"/dashboard\"\n                component={Dashboard}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                exact\n                path=\"/housings\"\n                component={Housings}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/housings/:id\"\n                component={HousingDetail}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                exact\n                path=\"/roommates\"\n                component={Roommates}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/roommates/:id\"\n                component={RoommateDetail}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/roommate-form\"\n                component={RoommateForm}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/housing-form\"\n                component={HousingForm}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/edit-roommate-form/:id\"\n                component={EditRoommateForm}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/edit-housing-form/:id\"\n                component={EditHousingForm}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/profile\"\n                component={Profile}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                path=\"/matchmaking\"\n                component={Matchmaking}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n              <RouteWrapper\n                exact\n                path=\"/chat\"\n                component={Chat}\n                layout={LayoutTwo}\n                setTheme={setTheme}\n                theme={theme}\n              />\n\n              {/* Routes with no layout */}\n              <Route exact path=\"/\" component={Home} setTheme={setTheme} theme={theme}/>\n              <Route path=\"*\" component={Home} setTheme={setTheme} theme={theme} />\n            </Switch>\n          </Layout>\n        </BrowserRouter>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}